import{d as Y,r as g,c as y,o as Z,z as _,n as d,v as o,x as a,t,B as l,q as r,D as k,l as b,E as m,G as N,F as T,A as $}from"./vendor-BSjfEESY.js";import{e as ee,n as ae,p as te,z as oe,o as se,q as le,u as I,A as V,B as w,v as P,h as f,i as p,j as U,k as E,g as S,w as ne,C as q,D as C,E as ie,F as re,m as ue,G as A,t as v,H as de}from"./ionic-EHr5XJ2K.js";import{g as ce,h as me,i as pe,_ as fe}from"./_plugin-vue_export-helper-DyMf4-wx.js";import{C as ve}from"./main-DJDdWjZq.js";const ge={class:"checklist-container"},_e={class:"form-group"},ke={class:"form-group"},be={key:0,class:"patient-found"},Ce={class:"patient-info"},he={key:0},ye={class:"form-group"},Ie={class:"form-group"},Ve={class:"safety-checks"},we={class:"form-group"},Pe=Y({__name:"ChecklistPage",setup(Se){const M=$(),h=ve.getInstance(),F=h.getSearchPatientUseCase(),O=h.getCreateChecklistUseCase(),R=h.getMachineRepository(),c=g({full_name:"",birth_date:""}),u=g(null),B=g([]),i=g({patient_id:0,machine_id:0,shift:"matutino",patient_identification:!1,access_patency:!1,vital_signs:!1,weight_measurement:!1,machine_parameters:!1,anticoagulation:!1,alarm_tests:!1,emergency_procedures:!1,observations:""}),x=[{key:"patient_identification",label:"Identificação do Paciente",description:"Confirmar identidade com dois identificadores"},{key:"access_patency",label:"Permeabilidade do Acesso",description:"Verificar funcionamento do acesso vascular"},{key:"vital_signs",label:"Sinais Vitais",description:"Aferir pressão arterial, temperatura e peso"},{key:"weight_measurement",label:"Pesagem do Paciente",description:"Peso seco e ganho de peso interdialítico"},{key:"machine_parameters",label:"Parâmetros da Máquina",description:"Configurar parâmetros de diálise prescritos"},{key:"anticoagulation",label:"Anticoagulação",description:"Verificar prescrição e dosagem de heparina"},{key:"alarm_tests",label:"Teste de Alarmes",description:"Verificar funcionamento dos alarmes de segurança"},{key:"emergency_procedures",label:"Procedimentos de Emergência",description:"Confirmar conhecimento dos procedimentos"}],H=y(()=>c.value.full_name.length>0&&c.value.birth_date.length>0),D=y(()=>u.value&&i.value.machine_id&&i.value.shift),L=y(()=>{const n=x.every(e=>{const s=e.key;return i.value[s]===!0});return D.value&&n}),z=async()=>{const n=await A.create({message:"Buscando paciente...",spinner:"crescent"});await n.present();try{const e=await F.execute(c.value);e?(u.value=e,i.value.patient_id=Number(e.id),await(await v.create({message:"Paciente encontrado!",duration:2e3,color:"success",position:"top"})).present()):await(await v.create({message:"Paciente não encontrado. Você pode cadastrá-lo na seção de pacientes.",duration:3e3,color:"warning",position:"top"})).present()}catch(e){await(await v.create({message:e.message||"Erro ao buscar paciente",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},G=async()=>{const n=await A.create({message:"Salvando checklist...",spinner:"crescent"});await n.present();try{await O.execute(i.value),await(await v.create({message:"Checklist salvo com sucesso!",duration:2e3,color:"success",position:"top"})).present(),M.replace("/dashboard")}catch(e){await(await v.create({message:e.message||"Erro ao salvar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},j=async()=>{try{B.value=await R.getAvailable()}catch(n){console.error("Error loading machines:",n)}},J=n=>new Date(n).toLocaleDateString("pt-BR"),K=n=>i.value[n]||!1,Q=(n,e)=>{i.value[n]=e};return Z(()=>{j()}),(n,e)=>(d(),_(a(ee),null,{default:o(()=>[t(a(le),{translucent:!0},{default:o(()=>[t(a(ae),null,{default:o(()=>[t(a(te),{slot:"start"},{default:o(()=>[t(a(oe),{"default-href":"/dashboard"})]),_:1}),t(a(se),null,{default:o(()=>[...e[5]||(e[5]=[l("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),t(a(ue),{fullscreen:!0},{default:o(()=>[r("div",ge,[t(a(I),{class:"patient-search-card"},{default:o(()=>[t(a(V),null,{default:o(()=>[t(a(w),null,{default:o(()=>[...e[6]||(e[6]=[l("1. Buscar/Cadastrar Paciente",-1)])]),_:1})]),_:1}),t(a(P),null,{default:o(()=>[r("div",_e,[t(a(f),{class:"mobile-input",fill:"outline"},{default:o(()=>[t(a(p),{position:"floating"},{default:o(()=>[...e[7]||(e[7]=[l("Nome Completo",-1)])]),_:1}),t(a(U),{modelValue:c.value.full_name,"onUpdate:modelValue":e[0]||(e[0]=s=>c.value.full_name=s),type:"text",placeholder:"Digite o nome completo do paciente",required:""},null,8,["modelValue"])]),_:1})]),r("div",ke,[t(a(f),{class:"mobile-input",fill:"outline"},{default:o(()=>[t(a(p),{position:"floating"},{default:o(()=>[...e[8]||(e[8]=[l("Data de Nascimento",-1)])]),_:1}),t(a(U),{modelValue:c.value.birth_date,"onUpdate:modelValue":e[1]||(e[1]=s=>c.value.birth_date=s),type:"date",required:""},null,8,["modelValue"])]),_:1})]),t(a(E),{expand:"block",class:"mobile-button",onClick:z,disabled:!H.value},{default:o(()=>[t(a(S),{icon:a(ce),slot:"start"},null,8,["icon"]),e[9]||(e[9]=l(" Buscar Paciente ",-1))]),_:1},8,["disabled"]),u.value?(d(),b("div",be,[t(a(ne),{color:"success"},{default:o(()=>[t(a(S),{icon:a(me)},null,8,["icon"]),t(a(p),null,{default:o(()=>[...e[10]||(e[10]=[l("Paciente Encontrado",-1)])]),_:1})]),_:1}),r("div",Ce,[r("h4",null,m(u.value.full_name),1),r("p",null,"Nascimento: "+m(J(u.value.birth_date)),1),r("p",null,"Idade: "+m(u.value.age)+" anos",1),u.value.blood_type?(d(),b("p",he,"Tipo Sanguíneo: "+m(u.value.blood_type),1)):k("",!0)])])):k("",!0)]),_:1})]),_:1}),u.value?(d(),_(a(I),{key:0,class:"checklist-form-card"},{default:o(()=>[t(a(V),null,{default:o(()=>[t(a(w),null,{default:o(()=>[...e[11]||(e[11]=[l("2. Informações do Procedimento",-1)])]),_:1})]),_:1}),t(a(P),null,{default:o(()=>[r("div",ye,[t(a(f),{class:"mobile-input",fill:"outline"},{default:o(()=>[t(a(p),{position:"floating"},{default:o(()=>[...e[12]||(e[12]=[l("Máquina",-1)])]),_:1}),t(a(q),{modelValue:i.value.machine_id,"onUpdate:modelValue":e[2]||(e[2]=s=>i.value.machine_id=s),placeholder:"Selecione uma máquina"},{default:o(()=>[(d(!0),b(T,null,N(B.value,s=>(d(),_(a(C),{key:s.id,value:s.id},{default:o(()=>[l(m(s.name),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),r("div",Ie,[t(a(f),{class:"mobile-input",fill:"outline"},{default:o(()=>[t(a(p),{position:"floating"},{default:o(()=>[...e[13]||(e[13]=[l("Turno",-1)])]),_:1}),t(a(q),{modelValue:i.value.shift,"onUpdate:modelValue":e[3]||(e[3]=s=>i.value.shift=s),placeholder:"Selecione o turno"},{default:o(()=>[t(a(C),{value:"matutino"},{default:o(()=>[...e[14]||(e[14]=[l("Matutino",-1)])]),_:1}),t(a(C),{value:"vespertino"},{default:o(()=>[...e[15]||(e[15]=[l("Vespertino",-1)])]),_:1}),t(a(C),{value:"noturno"},{default:o(()=>[...e[16]||(e[16]=[l("Noturno",-1)])]),_:1})]),_:1},8,["modelValue"])]),_:1})])]),_:1})]),_:1})):k("",!0),D.value?(d(),_(a(I),{key:1,class:"safety-checks-card"},{default:o(()=>[t(a(V),null,{default:o(()=>[t(a(w),null,{default:o(()=>[...e[17]||(e[17]=[l("3. Verificações de Segurança",-1)])]),_:1}),t(a(ie),null,{default:o(()=>[...e[18]||(e[18]=[l("Todos os itens devem ser verificados",-1)])]),_:1})]),_:1}),t(a(P),null,{default:o(()=>[r("div",Ve,[(d(),b(T,null,N(x,(s,W)=>t(a(f),{key:W,class:"safety-check-item"},{default:o(()=>[t(a(de),{slot:"start",checked:K(s.key),onIonChange:X=>Q(s.key,X.detail.checked)},null,8,["checked","onIonChange"]),t(a(p),{class:"safety-check-label"},{default:o(()=>[r("h3",null,m(s.label),1),r("p",null,m(s.description),1)]),_:2},1024)]),_:2},1024)),64))]),r("div",we,[t(a(f),{class:"mobile-input",fill:"outline"},{default:o(()=>[t(a(p),{position:"floating"},{default:o(()=>[...e[19]||(e[19]=[l("Observações (opcional)",-1)])]),_:1}),t(a(re),{modelValue:i.value.observations,"onUpdate:modelValue":e[4]||(e[4]=s=>i.value.observations=s),rows:"3",placeholder:"Digite observações adicionais..."},null,8,["modelValue"])]),_:1})]),t(a(E),{expand:"block",class:"mobile-button",disabled:!L.value,onClick:G},{default:o(()=>[t(a(S),{icon:a(pe),slot:"start"},null,8,["icon"]),e[20]||(e[20]=l(" Salvar Checklist ",-1))]),_:1},8,["disabled"])]),_:1})]),_:1})):k("",!0)])]),_:1})]),_:1}))}}),Te=fe(Pe,[["__scopeId","data-v-683f643f"]]);export{Te as default};
