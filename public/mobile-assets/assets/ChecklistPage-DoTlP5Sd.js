import{d as ze,n as m,q as u,t,J as g,G as d,K as y,v as n,y as s,B as O,H as f,r as _,c as pe,b as hs,o as _s,e as fs,x as r,u as gs,w as Ae,D as Ee,F as X,L as Y,z as ys}from"./vendor-BOCCj2ty.js";import{g as i,A as bs,e as ks,t as E,o as Oe,q as Te,x as Cs,p as $e,r as De,B as j,C as F,k as N,f as ws,v as Ne,w as qe,D as Is,E as Ps,i as Ve,F as Ss,G as As,n as Z,l as Me}from"./ionic-DvfosJhB.js";import{z as D,C as x,D as he,E as Re,F as se,_ as Le,G as Es,t as Be,H as ve,I as Os,J as me,K as je,m as Ts,h as $s,L as Ds,j as Ns,M as qs,g as Vs,N as Fe,O as Ms,f as Rs,P as xe,Q as Bs,R as js,u as Fs}from"./_plugin-vue_export-helper-BgNw2jzN.js";import{C as xs,A as ee}from"./main-BugRCitN.js";const zs={class:"item-card-header"},Ls={class:"header-content"},Hs={class:"item-card-title"},Us={key:0,class:"item-card-description"},Js={key:0,class:"header-badge"},Ks={class:"status-actions"},Ws={class:"action-status-icon success"},Gs={class:"action-status-icon danger"},Qs={class:"action-status-icon neutral"},Xs={key:0,class:"observation-card"},Ys={class:"observation-label"},Zs=["value"],et=ze({__name:"ChecklistItem",props:{title:{},description:{default:""},value:{default:null},observation:{default:""},required:{type:Boolean,default:!1}},emits:["update:value","update:observation"],setup(_e,{emit:q}){const z=_e,w=q,V=c=>{z.value===c?(w("update:value",null),w("update:observation","")):(w("update:value",c),c!=="NC"&&w("update:observation",""))},L=c=>{w("update:observation",c)},H=c=>{switch(c){case"C":return D;case"NC":return he;case"NA":return Re;default:return D}};return(c,h)=>(u(),m("div",{class:y(["checklist-item-card",{"has-value":c.value!==null,"is-conforme":c.value==="C","is-nao-conforme":c.value==="NC","is-nao-aplica":c.value==="NA"}])},[t("div",zs,[t("div",Ls,[t("h3",Hs,d(c.title),1),c.description?(u(),m("p",Us,d(c.description),1)):g("",!0)]),c.value?(u(),m("div",Js,[t("div",{class:y(["status-badge",c.value.toLowerCase()])},[n(s(i),{icon:H(c.value)},null,8,["icon"])],2)])):g("",!0)]),t("div",Ks,[t("button",{class:y(["action-status-btn conforme",{selected:c.value==="C"}]),onClick:h[0]||(h[0]=k=>V("C")),type:"button"},[t("div",Ws,[n(s(i),{icon:s(D)},null,8,["icon"])]),h[4]||(h[4]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Conforme"),t("span",{class:"action-status-hint"},"Tudo OK")],-1)),c.value==="C"?(u(),O(s(i),{key:0,icon:s(x),class:"selected-check"},null,8,["icon"])):g("",!0)],2),t("button",{class:y(["action-status-btn nao-conforme",{selected:c.value==="NC"}]),onClick:h[1]||(h[1]=k=>V("NC")),type:"button"},[t("div",Gs,[n(s(i),{icon:s(he)},null,8,["icon"])]),h[5]||(h[5]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Não Conforme"),t("span",{class:"action-status-hint"},"Problema")],-1)),c.value==="NC"?(u(),O(s(i),{key:0,icon:s(x),class:"selected-check"},null,8,["icon"])):g("",!0)],2),t("button",{class:y(["action-status-btn nao-aplica",{selected:c.value==="NA"}]),onClick:h[2]||(h[2]=k=>V("NA")),type:"button"},[t("div",Qs,[n(s(i),{icon:s(Re)},null,8,["icon"])]),h[6]||(h[6]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Não Aplica"),t("span",{class:"action-status-hint"},"N/A")],-1)),c.value==="NA"?(u(),O(s(i),{key:0,icon:s(x),class:"selected-check"},null,8,["icon"])):g("",!0)],2)]),c.value==="NC"?(u(),m("div",Xs,[t("label",Ys,[n(s(i),{icon:s(se)},null,8,["icon"]),h[7]||(h[7]=f(" Descreva o Problema * ",-1))]),t("textarea",{value:c.observation,onInput:h[3]||(h[3]=k=>L(k.target.value)),class:"observation-textarea",rows:"3",placeholder:"Ex: Equipamento apresentando ruído anormal...",required:""},null,40,Zs)])):g("",!0)],2))}}),st=Le(et,[["__scopeId","data-v-224039b4"]]),tt={class:"checklist-container"},at={class:"time-display"},ot={class:"current-date"},nt={class:"current-time"},it={key:0,class:"section"},lt={class:"section-title"},rt={class:"search-card"},ct={class:"search-input-wrapper"},ut={key:0,class:"patient-selected"},dt={class:"action-btn selected"},pt={class:"action-icon success"},vt={class:"action-content"},mt={class:"action-title"},ht={class:"action-subtitle"},_t={key:1,class:"search-results"},ft=["onClick"],gt={class:"action-icon primary"},yt={class:"action-content"},bt={class:"action-title"},kt={class:"action-subtitle"},Ct={key:2,class:"no-results"},wt={key:3,class:"search-loading"},It={key:1,class:"section"},Pt={class:"section-title"},St={class:"selection-card"},At={class:"availability-icon"},Et={class:"availability-info"},Ot={class:"availability-label"},Tt={class:"availability-count"},$t={class:"form-group"},Dt={class:"input-label"},Nt={class:"machine-grid"},qt=["onClick"],Vt={class:"machine-icon"},Mt={class:"machine-info"},Rt={class:"machine-name"},Bt={key:0,class:"machine-check"},jt={class:"form-group"},Ft={class:"input-label"},xt={class:"shift-selector"},zt={class:"primary-action"},Lt=["disabled"],Ht={key:2},Ut={class:"phase-header"},Jt={class:"phase-time"},Kt={class:"phase-progress"},Wt={class:"progress-steps"},Gt={class:"step-circle"},Qt={key:2},Xt={class:"step-label"},Yt={class:"phase-completion"},Zt={class:"patient-summary"},ea={class:"patient-details"},sa={class:"session-time"},ta={key:0,class:"phase-section"},aa={class:"phase-header-card"},oa={class:"phase-header-icon"},na={class:"phase-header-content"},ia={class:"phase-header-badge"},la={class:"checklist-items-grid"},ra={class:"observations-card"},ca={class:"card-label"},ua={class:"dashboard-actions"},da={class:"action-card-icon warning"},pa={class:"action-card-icon danger"},va=["disabled"],ma={class:"btn-text"},ha={class:"btn-title"},_a={class:"btn-subtitle"},fa={key:1,class:"interrupted-section"},ga={class:"interrupted-content"},ya={class:"interruption-reason"},ba={key:2,class:"completed-section"},ka={class:"completed-content"},Ca={class:"interrupt-modal-content"},wa={class:"warning-section"},Ia={class:"form-group"},Pa={class:"modal-buttons"},Sa=ze({__name:"ChecklistPage",setup(_e){const q=ys(),z=gs(),w=xs.getInstance();w.getSearchPatientUseCase();const V=w.getMachineRepository(),L=_(""),H=_(""),c=_(!1),h=_(""),k=_(0),M=_("machine-patient"),C=_(""),I=_([]),R=_(!1),b=_(null);let te;const ae=_(null),oe=_([]),ne=_(null),fe=_(!1),l=_(null),P=_(null),ge=_(!1),v=_({machine_id:0,shift:"matutino",observations:"",machine_disinfected:!1,capillary_lines_identified:!1,patient_identification_confirmed:!1,vascular_access_evaluated:!1,vital_signs_checked:!1,medications_reviewed:!1,dialyzer_membrane_checked:!1,equipment_functioning_verified:!1,dialysis_parameters_verified:!1,patient_comfort_assessed:!1,fluid_balance_monitored:!1,alarms_responded:!1,session_completed_safely:!1,vascular_access_secured:!1,patient_vital_signs_stable:!1,equipment_cleaned:!1}),U=_({}),J=_({}),He=["pre_dialysis","during_session","post_dialysis"];let ie;const Ue=pe(()=>b.value&&v.value.machine_id&&v.value.shift),K=pe(()=>l.value?B().every(a=>{const p=G(a.key);if(p===null)return!1;if(p==="C"||p==="NA")return!0;if(p==="NC"){const S=ce(a.key);return S&&S.trim().length>0}return!1}):!1),Je=pe(()=>l.value?l.value.current_phase==="post_dialysis":!1),ye=o=>({pre_dialysis:"Pré-Diálise",during_session:"Durante a Sessão",post_dialysis:"Pós-Diálise",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Ke=o=>({pre_dialysis:"Pré",during_session:"Durante",post_dialysis:"Pós"})[o]||o,We=o=>({pre_dialysis:"Verificações de segurança antes de iniciar a sessão de diálise",during_session:"Monitoramento contínuo durante o procedimento",post_dialysis:"Finalização segura da sessão e limpeza dos equipamentos"})[o]||"",be=o=>({pre_dialysis:"warning",during_session:"primary",post_dialysis:"secondary",completed:"success",interrupted:"danger"})[o]||"medium",ke=o=>D,Ge=o=>({pre_dialysis:"Preparando",during_session:"Em Andamento",post_dialysis:"Finalizando",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Qe=o=>({pre_dialysis:"1",during_session:"2",post_dialysis:"3"})[o]||"",Ce=o=>{if(!l.value)return!1;switch(o){case"pre_dialysis":return l.value.pre_dialysis_completed_at!==null;case"during_session":return l.value.during_session_completed_at!==null;case"post_dialysis":return l.value.post_dialysis_completed_at!==null;default:return!1}},B=()=>{var e;return{pre_dialysis:[{key:"machine_disinfected",label:"Máquina Desinfetada",description:"Verificar se a máquina foi devidamente desinfetada"},{key:"capillary_lines_identified",label:"Linhas Capilares Identificadas",description:"Identificar e verificar as linhas capilares"},{key:"patient_identification_confirmed",label:"Identificação do Paciente",description:"Confirmar identidade com dois identificadores"},{key:"vascular_access_evaluated",label:"Acesso Vascular Avaliado",description:"Avaliar condições do acesso vascular"},{key:"vital_signs_checked",label:"Sinais Vitais Verificados",description:"Aferir pressão arterial, temperatura e peso"},{key:"medications_reviewed",label:"Medicações Revisadas",description:"Revisar medicações e dosagens prescritas"},{key:"dialyzer_membrane_checked",label:"Membrana do Dialisador Verificada",description:"Verificar integridade da membrana"},{key:"equipment_functioning_verified",label:"Funcionamento dos Equipamentos",description:"Testar funcionamento de todos os equipamentos"}],during_session:[{key:"dialysis_parameters_verified",label:"Parâmetros de Diálise Verificados",description:"Confirmar e ajustar parâmetros de diálise"},{key:"patient_comfort_assessed",label:"Conforto do Paciente Avaliado",description:"Verificar conforto e bem-estar do paciente"},{key:"fluid_balance_monitored",label:"Balanço Hídrico Monitorado",description:"Acompanhar remoção e balanço de fluidos"},{key:"alarms_responded",label:"Resposta a Alarmes",description:"Verificar e responder adequadamente aos alarmes"}],post_dialysis:[{key:"session_completed_safely",label:"Sessão Finalizada com Segurança",description:"Finalizar sessão seguindo protocolos de segurança"},{key:"vascular_access_secured",label:"Acesso Vascular Protegido",description:"Proteger e cuidar do acesso vascular"},{key:"patient_vital_signs_stable",label:"Sinais Vitais Estáveis",description:"Confirmar estabilidade dos sinais vitais"},{key:"equipment_cleaned",label:"Equipamentos Limpos",description:"Limpar e preparar equipamentos para próximo uso"}]}[(e=l.value)==null?void 0:e.current_phase]||[]},we=()=>{const o=new Date;L.value=o.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit",second:"2-digit"}),H.value=o.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},Xe=()=>{if(te&&clearTimeout(te),C.value.length<3){I.value=[];return}R.value=!0,te=setTimeout(async()=>{await Ye()},500)},Ye=async()=>{if(C.value.length<3){I.value=[],R.value=!1;return}try{const e=await w.getPatientRepository().quickSearch(C.value,10);I.value=e}catch(o){console.error("Erro ao buscar pacientes:",o),I.value=[]}finally{R.value=!1}},Ze=o=>{b.value=o,C.value=o.full_name,I.value=[]},es=()=>{b.value=null,C.value="",I.value=[]},ss=()=>{localStorage.setItem("patient_search_query",C.value),q.push("/patients/new")},ts=async()=>{var a,p,S;if(fe.value){M.value="pre-dialysis";return}if(!(await ls()).canCreate)return;const e=await Z.create({message:"Iniciando checklist...",spinner:"crescent"});await e.present();try{const T=await fetch("/api/checklists",{method:"POST",headers:ee.getAuthHeaders(),body:JSON.stringify({patient_id:(a=b.value)==null?void 0:a.id,machine_id:v.value.machine_id,shift:v.value.shift,observations:v.value.observations})}),A=await T.json();if(T.ok&&A.success){l.value=A.checklist,ae.value=oe.value.find(ms=>ms.id===v.value.machine_id)||null,W();const $=A.resumed?"Checklist existente carregado!":"Novo checklist iniciado com sucesso!";await(await E.create({message:$,duration:2e3,color:"success",position:"top"})).present()}else{const $=A.message||((S=(p=A.errors)==null?void 0:p.machine_id)==null?void 0:S[0])||"Erro ao iniciar checklist";throw new Error($)}}catch(T){await(await E.create({message:T.message||"Erro ao iniciar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await e.dismiss()}},as=async()=>{if(!K.value)return;const o=await Z.create({message:"Avançando para próxima fase...",spinner:"crescent"});await o.present();try{await le();const a=await(await fetch("/api/checklists/".concat(l.value.id,"/advance"),{method:"POST",headers:{"Content-Type":"application/json",...ee.getAuthHeaders()}})).json();if(a.success)l.value=a.checklist,W(),await(await E.create({message:a.message,duration:2e3,color:"success",position:"top"})).present();else throw new Error(a.message||"Erro ao avançar fase")}catch(e){await(await E.create({message:e.message||"Erro ao avançar fase",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},le=async()=>{if(l.value)try{const o={},e={};B().forEach(T=>{const A=G(T.key),$=ce(T.key);let Q=!1;(A==="C"||A==="NA"||A==="NC"&&$&&$.trim().length>0)&&(Q=!0),o[T.key]=Q,$&&$.trim().length>0&&(e[T.key]=$)});const p=await fetch("/api/checklists/".concat(l.value.id,"/phase"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))},body:JSON.stringify({phase_data:o,observations:v.value.observations,item_observations:e})});if(!p.ok)throw new Error("Erro ao salvar dados");const S=await p.json();S.success&&(k.value=S.phase_completion)}catch(o){console.error("Erro no updatePhaseData:",o)}},os=async()=>{const o=await Z.create({message:"Interrompendo checklist...",spinner:"crescent"});await o.present();try{const a=await(await fetch("/api/checklists/".concat(l.value.id,"/interrupt"),{method:"POST",headers:ee.getAuthHeaders(),body:JSON.stringify({reason:h.value})})).json();if(a.success)l.value=a.checklist,c.value=!1,await(await E.create({message:"Checklist interrompido com sucesso.",duration:3e3,color:"warning",position:"top"})).present();else throw new Error(a.message||"Erro ao interromper checklist")}catch(e){await(await E.create({message:e.message||"Erro ao interromper checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},Ie=()=>{q.replace("/dashboard")},ns=async()=>{if(!l.value)return;const o=await Z.create({message:"Pausando checklist..."});await o.present();try{const a=await(await fetch("/api/checklists/".concat(l.value.id,"/pause"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))}})).json();if(a.success)await(await E.create({message:"Checklist pausado com sucesso. Você pode retomá-lo a qualquer momento.",duration:3e3,color:"success",position:"top"})).present(),q.replace("/dashboard");else throw new Error(a.message||"Erro ao pausar checklist")}catch(e){console.error("Erro ao pausar checklist:",e),await(await E.create({message:"Erro ao pausar checklist. Tente novamente.",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},W=()=>{const o=B(),e=o.filter(a=>G(a.key)!==null).length;k.value=o.length>0?e/o.length*100:0},is=async()=>{try{oe.value=await V.getAvailable(),await Pe()}catch(o){console.error("Error loading machines:",o)}},Pe=async()=>{try{ge.value=!0;const o=await fetch("/api/machines/availability",{headers:ee.getAuthHeaders()});if(o.ok){const e=await o.json();P.value=e.availability}}catch(o){console.error("Error fetching machine availability:",o)}finally{ge.value=!1}},ls=async()=>{if(await Pe(),!P.value)return{canCreate:!0};const{available:o,overall_status:e,message:a}=P.value;if(o===0)return await(await Me.create({header:"Máquinas Indisponíveis",message:a||"Não há máquinas disponíveis no momento. Por favor, aguarde até que uma máquina fique livre.",buttons:["OK"]})).present(),{canCreate:!1};if(e==="warning"||e==="alert"){const p=await Me.create({header:"Atenção",message:"".concat(a,". Apenas ").concat(o," máquina(s) disponível(is). Deseja continuar?"),buttons:[{text:"Cancelar",role:"cancel"},{text:"Continuar",role:"confirm"}]});await p.present();const{role:S}=await p.onDidDismiss();return{canCreate:S==="confirm"}}return{canCreate:!0}},rs=async()=>{const o=z.params.id;if(o&&o!=="new")try{const e=await fetch("/api/checklists/".concat(o),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}});if(e.ok){const a=await e.json();switch(l.value=a,ne.value=a.id,fe.value=!0,ae.value=a.machine,b.value=a.patient,a.current_phase){case"pre_dialysis":M.value="pre-dialysis";break;case"during_session":M.value="during-session";break;case"post_dialysis":M.value="post-dialysis";break;default:M.value="pre-dialysis"}a.paused_at&&!a.resumed_at&&await cs(),us(a),W(),console.log("Checklist carregado:",a)}}catch(e){console.error("Erro ao carregar checklist:",e)}},cs=async()=>{if(ne.value)try{(await fetch("/api/checklists/".concat(ne.value,"/resume"),{method:"POST",headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}})).ok&&console.log("Checklist retomado com sucesso")}catch(o){console.error("Erro ao retomar checklist:",o)}},us=o=>{Object.keys(v.value).forEach(a=>{o[a]!==void 0&&(v.value[a]=o[a])}),o.item_observations&&(J.value={...o.item_observations}),B().forEach(a=>{const p=o[a.key];p!==void 0&&(p===!0?U.value[a.key]="C":p===!1&&J.value[a.key]&&(U.value[a.key]="NC"))})},Se=o=>new Date(o).toLocaleDateString("pt-BR"),re=o=>new Date(o).toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"}),G=o=>U.value[o]||null,ds=(o,e)=>{U.value[o]=e,v.value[o]=e==="C",W(),l.value&&le()},ce=o=>J.value[o]||"";let ue=null;const ps=(o,e)=>{J.value[o]=e,ue&&clearTimeout(ue),ue=setTimeout(()=>{l.value&&le()},1e3)},vs=async o=>{try{console.log("🔄 Carregando paciente ID:",o);const a=await w.getPatientRepository().getById(o);a&&(console.log("✅ Paciente carregado:",a),b.value=a,C.value=a.full_name,I.value=[],await(await E.create({message:"Paciente ".concat(a.full_name," selecionado!"),duration:2e3,color:"success",position:"top"})).present())}catch(e){console.error("❌ Erro ao carregar paciente:",e),await(await E.create({message:"Erro ao carregar paciente cadastrado",duration:3e3,color:"danger",position:"top"})).present()}},de=()=>{const o=localStorage.getItem("return_to_checklist"),e=localStorage.getItem("new_patient_id");console.log("🔍 Verificando retorno - return_to_checklist:",o,"new_patient_id:",e),o==="true"&&e&&(console.log("🎯 Detectado retorno de cadastro, carregando paciente..."),vs(parseInt(e)),localStorage.removeItem("return_to_checklist"),localStorage.removeItem("new_patient_id"),localStorage.removeItem("patient_search_query"))};return bs(()=>{console.log("🚀 onIonViewWillEnter - Página sendo exibida"),de()}),hs(()=>z.path,o=>{console.log("🔄 Rota mudou para:",o),o==="/checklist/new"&&(console.log("📍 Detectado retorno para /checklist/new via watch"),setTimeout(de,100))}),_s(()=>{console.log("🏁 onMounted - Página montada"),is(),rs(),we(),ie=setInterval(we,1e3),de()}),fs(()=>{ie&&clearInterval(ie)}),(o,e)=>(u(),O(s(ks),null,{default:r(()=>[n(s(De),{translucent:!0},{default:r(()=>[n(s(Oe),{color:"primary"},{default:r(()=>[n(s(Te),{slot:"start"},{default:r(()=>[n(s(Cs),{"default-href":"/dashboard"})]),_:1}),n(s($e),null,{default:r(()=>[...e[11]||(e[11]=[f("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),n(s(Ve),{fullscreen:!0},{default:r(()=>[t("div",tt,[n(s(j),{class:"time-header-card"},{default:r(()=>[n(s(F),null,{default:r(()=>[t("div",at,[t("div",ot,[n(s(i),{icon:s(Es),class:"date-icon"},null,8,["icon"]),f(" "+d(H.value),1)]),t("div",nt,[n(s(i),{icon:s(Be),class:"time-icon"},null,8,["icon"]),f(" "+d(L.value),1)])])]),_:1})]),_:1}),l.value?g("",!0):(u(),m("div",it,[t("h2",lt,[n(s(i),{icon:s(ve)},null,8,["icon"]),e[12]||(e[12]=f(" Etapa 1: Buscar Paciente ",-1))]),t("div",rt,[t("div",ct,[n(s(i),{icon:s(Os),class:"search-icon"},null,8,["icon"]),Ae(t("input",{"onUpdate:modelValue":e[0]||(e[0]=a=>C.value=a),type:"text",placeholder:"Digite o nome do paciente...",class:"search-input",onInput:Xe},null,544),[[Ee,C.value]])]),b.value?(u(),m("div",ut,[t("div",dt,[t("div",pt,[n(s(i),{icon:s(D)},null,8,["icon"])]),t("div",vt,[t("span",mt,d(b.value.full_name),1),t("span",ht,d(Se(b.value.birth_date))+" • "+d(b.value.age)+" anos ",1)]),n(s(N),{fill:"clear",onClick:es},{default:r(()=>[n(s(i),{icon:s(me),slot:"icon-only"},null,8,["icon"])]),_:1})])])):I.value.length>0&&C.value.length>0?(u(),m("div",_t,[(u(!0),m(X,null,Y(I.value,a=>(u(),m("div",{key:a.id,class:"action-btn",onClick:p=>Ze(a)},[t("div",gt,[n(s(i),{icon:s(ve)},null,8,["icon"])]),t("div",yt,[t("span",bt,d(a.full_name),1),t("span",kt,d(Se(a.birth_date))+" • "+d(a.age)+" anos ",1)]),n(s(i),{icon:s(Fs),class:"chevron"},null,8,["icon"])],8,ft))),128))])):C.value.length>2&&I.value.length===0&&!R.value?(u(),m("div",Ct,[n(s(i),{icon:s(se),class:"no-results-icon"},null,8,["icon"]),e[14]||(e[14]=t("h3",null,"Paciente não encontrado",-1)),e[15]||(e[15]=t("p",null,"Não encontramos nenhum paciente com esse nome.",-1)),n(s(N),{expand:"block",onClick:ss,class:"register-btn"},{default:r(()=>[n(s(i),{icon:s(ve),slot:"start"},null,8,["icon"]),e[13]||(e[13]=f(" Cadastrar Novo Paciente ",-1))]),_:1})])):g("",!0),R.value?(u(),m("div",wt,[n(s(ws),{name:"crescent"}),e[16]||(e[16]=t("p",null,"Buscando...",-1))])):g("",!0)])])),b.value&&!l.value?(u(),m("div",It,[t("h2",Pt,[n(s(i),{icon:s(je)},null,8,["icon"]),e[17]||(e[17]=f(" Etapa 2: Máquina e Turno ",-1))]),t("div",St,[P.value?(u(),m("div",{key:0,class:y(["availability-badge",P.value.overall_status])},[t("div",At,[P.value.overall_status==="good"?(u(),O(s(i),{key:0,icon:s(D)},null,8,["icon"])):P.value.overall_status==="critical"?(u(),O(s(i),{key:1,icon:s(he)},null,8,["icon"])):(u(),O(s(i),{key:2,icon:s(se)},null,8,["icon"]))]),t("div",Et,[t("span",Ot,d(P.value.message),1),t("span",Tt,d(P.value.available)+" de "+d(P.value.total)+" disponíveis",1)])],2)):g("",!0),t("div",$t,[t("label",Dt,[n(s(i),{icon:s(Ts)},null,8,["icon"]),e[18]||(e[18]=f(" Selecione a Máquina ",-1))]),t("div",Nt,[(u(!0),m(X,null,Y(oe.value,a=>(u(),m("button",{key:a.id,type:"button",class:y(["machine-card",{selected:v.value.machine_id===a.id}]),onClick:p=>v.value.machine_id=a.id},[t("div",Vt,[n(s(i),{icon:s(je)},null,8,["icon"])]),t("div",Mt,[t("span",Rt,d(a.name),1),e[19]||(e[19]=t("span",{class:"machine-status"},"Disponível",-1))]),v.value.machine_id===a.id?(u(),m("div",Bt,[n(s(i),{icon:s(D)},null,8,["icon"])])):g("",!0)],10,qt))),128))])]),t("div",jt,[t("label",Ft,[n(s(i),{icon:s(Be)},null,8,["icon"]),e[20]||(e[20]=f(" Selecione o Turno ",-1))]),t("div",xt,[t("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="matutino"}]),onClick:e[1]||(e[1]=a=>v.value.shift="matutino")},[n(s(i),{icon:s($s)},null,8,["icon"]),e[21]||(e[21]=t("span",null,"Matutino",-1)),e[22]||(e[22]=t("span",{class:"shift-time"},"06:00 - 12:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="vespertino"}]),onClick:e[2]||(e[2]=a=>v.value.shift="vespertino")},[n(s(i),{icon:s(Ds)},null,8,["icon"]),e[23]||(e[23]=t("span",null,"Vespertino",-1)),e[24]||(e[24]=t("span",{class:"shift-time"},"12:00 - 18:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="noturno"}]),onClick:e[3]||(e[3]=a=>v.value.shift="noturno")},[n(s(i),{icon:s(Ns)},null,8,["icon"]),e[25]||(e[25]=t("span",null,"Noturno",-1)),e[26]||(e[26]=t("span",{class:"shift-time"},"18:00 - 00:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="madrugada"}]),onClick:e[4]||(e[4]=a=>v.value.shift="madrugada")},[n(s(i),{icon:s(qs)},null,8,["icon"]),e[27]||(e[27]=t("span",null,"Madrugada",-1)),e[28]||(e[28]=t("span",{class:"shift-time"},"00:00 - 06:00",-1))],2)])])]),t("div",zt,[t("button",{class:"primary-btn",onClick:ts,disabled:!Ue.value},[n(s(i),{icon:s(Vs)},null,8,["icon"]),e[29]||(e[29]=t("div",{class:"btn-text"},[t("span",{class:"btn-title"},"Iniciar Checklist"),t("span",{class:"btn-subtitle"},"Começar verificação de segurança")],-1)),n(s(i),{icon:s(Fe)},null,8,["icon"])],8,Lt)])])):g("",!0),l.value?(u(),m("div",Ht,[n(s(j),{class:"phase-progress-card"},{default:r(()=>[n(s(F),null,{default:r(()=>[t("div",Ut,[t("h3",null,d(ye(l.value.current_phase)),1),t("div",Jt,[n(s(Ne),{color:be(l.value.current_phase)},{default:r(()=>[n(s(i),{icon:ke(l.value.current_phase)},null,8,["icon"]),n(s(qe),null,{default:r(()=>[f(d(Ge(l.value.current_phase)),1)]),_:1})]),_:1},8,["color"])])]),t("div",Kt,[t("div",Wt,[(u(),m(X,null,Y(He,a=>t("div",{class:y(["step",{active:a===l.value.current_phase,completed:Ce(a),interrupted:l.value.is_interrupted}]),key:a},[t("div",Gt,[Ce(a)?(u(),O(s(i),{key:0,icon:s(x)},null,8,["icon"])):l.value.is_interrupted?(u(),O(s(i),{key:1,icon:s(me)},null,8,["icon"])):(u(),m("span",Qt,d(Qe(a)),1))]),t("span",Xt,d(Ke(a)),1)],2)),64))])]),t("div",Yt,[n(s(Is),{value:k.value/100,color:k.value===100?"success":"primary"},null,8,["value","color"]),t("p",null,d(Math.round(k.value))+"% concluído",1)])]),_:1})]),_:1}),n(s(j),{class:"patient-summary-card"},{default:r(()=>[n(s(F),null,{default:r(()=>{var a;return[t("div",Zt,[t("div",ea,[t("h4",null,d(b.value.full_name),1),t("p",null,d((a=ae.value)==null?void 0:a.name)+" • Turno "+d(l.value.shift),1)]),t("div",sa,[t("p",null,"Iniciado às "+d(re(l.value.pre_dialysis_started_at)),1)])])]}),_:1})]),_:1}),l.value.is_interrupted?(u(),m("div",fa,[n(s(j),{class:"interrupted-card"},{default:r(()=>[n(s(F),null,{default:r(()=>[t("div",ga,[n(s(i),{icon:s(se),class:"interrupted-icon"},null,8,["icon"]),e[35]||(e[35]=t("h3",null,"Checklist Interrompido",-1)),t("p",null,"O checklist foi interrompido em "+d(re(l.value.interrupted_at)),1),t("p",ya,[e[33]||(e[33]=t("strong",null,"Motivo:",-1)),f(" "+d(l.value.interruption_reason),1)]),n(s(N),{expand:"block",color:"primary",onClick:Ie,class:"return-button"},{default:r(()=>[n(s(i),{icon:s(Bs),slot:"start"},null,8,["icon"]),e[34]||(e[34]=f(" Retornar ao Dashboard ",-1))]),_:1})])]),_:1})]),_:1})])):(u(),m("div",ta,[t("div",aa,[t("div",oa,[n(s(i),{icon:ke(l.value.current_phase)},null,8,["icon"])]),t("div",na,[t("h3",null,d(ye(l.value.current_phase)),1),t("p",null,d(We(l.value.current_phase)),1)]),t("div",ia,[n(s(Ne),{color:be(l.value.current_phase)},{default:r(()=>[f(d(Math.round(k.value))+"% ",1)]),_:1},8,["color"])])]),t("div",la,[(u(!0),m(X,null,Y(B(),a=>(u(),O(st,{key:a.key,title:a.label,description:a.description,value:G(a.key),observation:ce(a.key),"onUpdate:value":p=>ds(a.key,p),"onUpdate:observation":p=>ps(a.key,p)},null,8,["title","description","value","observation","onUpdate:value","onUpdate:observation"]))),128))]),t("div",ra,[t("label",ca,[n(s(i),{icon:s(Ms)},null,8,["icon"]),e[30]||(e[30]=f(" Observações Adicionais ",-1))]),Ae(t("textarea",{"onUpdate:modelValue":e[5]||(e[5]=a=>v.value.observations=a),class:"observations-input",rows:"4",placeholder:"Digite observações sobre esta fase do checklist..."},null,512),[[Ee,v.value.observations]])]),t("div",ua,[t("button",{class:"action-card warning",onClick:ns},[t("div",da,[n(s(i),{icon:s(Rs)},null,8,["icon"])]),e[31]||(e[31]=t("div",{class:"action-card-content"},[t("span",{class:"action-card-title"},"Pausar"),t("span",{class:"action-card-subtitle"},"Voltar depois")],-1))]),t("button",{class:"action-card danger",onClick:e[6]||(e[6]=a=>c.value=!0)},[t("div",pa,[n(s(i),{icon:s(xe)},null,8,["icon"])]),e[32]||(e[32]=t("div",{class:"action-card-content"},[t("span",{class:"action-card-title"},"Interromper"),t("span",{class:"action-card-subtitle"},"Cancelar processo")],-1))])]),t("button",{class:y(["primary-continue-btn",{disabled:!K.value}]),disabled:!K.value,onClick:as},[n(s(i),{icon:s(D)},null,8,["icon"]),t("div",ma,[t("span",ha,d(Je.value?"Concluir Checklist":"Avançar para Próxima Fase"),1),t("span",_a,d(K.value?"Todos os itens verificados":"Complete todos os itens obrigatórios"),1)]),n(s(i),{icon:s(Fe)},null,8,["icon"])],10,va)])),l.value.current_phase==="completed"?(u(),m("div",ba,[n(s(j),{class:"completed-card"},{default:r(()=>[n(s(F),null,{default:r(()=>[t("div",ka,[n(s(i),{icon:s(D),class:"completed-icon"},null,8,["icon"]),e[37]||(e[37]=t("h3",null,"Checklist Concluído com Sucesso!",-1)),t("p",null,"Todas as fases foram completadas em "+d(re(l.value.post_dialysis_completed_at)),1),n(s(N),{expand:"block",color:"success",onClick:Ie,class:"return-button"},{default:r(()=>[n(s(i),{icon:s(x),slot:"start"},null,8,["icon"]),e[36]||(e[36]=f(" Finalizar e Retornar ",-1))]),_:1})])]),_:1})]),_:1})])):g("",!0)])):g("",!0)]),n(s(Ps),{"is-open":c.value,onWillDismiss:e[10]||(e[10]=a=>c.value=!1)},{default:r(()=>[n(s(De),null,{default:r(()=>[n(s(Oe),null,{default:r(()=>[n(s($e),null,{default:r(()=>[...e[38]||(e[38]=[f("Interromper Checklist",-1)])]),_:1}),n(s(Te),{slot:"end"},{default:r(()=>[n(s(N),{onClick:e[7]||(e[7]=a=>c.value=!1)},{default:r(()=>[n(s(i),{icon:s(me)},null,8,["icon"])]),_:1})]),_:1})]),_:1})]),_:1}),n(s(Ve),null,{default:r(()=>[t("div",Ca,[t("div",wa,[n(s(i),{icon:s(js),class:"warning-icon"},null,8,["icon"]),e[39]||(e[39]=t("h3",null,"Atenção!",-1)),e[40]||(e[40]=t("p",null,"Você está prestes a interromper o checklist de segurança. Esta ação deve ser usada apenas em casos de emergência ou intercorrências médicas.",-1))]),t("div",Ia,[n(s(Ss),{fill:"outline",class:"patient-input"},{default:r(()=>[n(s(qe),{position:"floating"},{default:r(()=>[...e[41]||(e[41]=[f("Motivo da Interrupção",-1)])]),_:1}),n(s(As),{modelValue:h.value,"onUpdate:modelValue":e[8]||(e[8]=a=>h.value=a),rows:4,placeholder:"Descreva o motivo da interrupção (obrigatório)",required:""},null,8,["modelValue"])]),_:1})]),t("div",Pa,[n(s(N),{expand:"block",fill:"outline",color:"medium",onClick:e[9]||(e[9]=a=>c.value=!1)},{default:r(()=>[...e[42]||(e[42]=[f(" Cancelar ",-1)])]),_:1}),n(s(N),{expand:"block",color:"danger",disabled:!h.value.trim(),onClick:os},{default:r(()=>[n(s(i),{icon:s(xe),slot:"start"},null,8,["icon"]),e[43]||(e[43]=f(" Confirmar Interrupção ",-1))]),_:1},8,["disabled"])])])]),_:1})]),_:1},8,["is-open"])]),_:1})]),_:1}))}}),$a=Le(Sa,[["__scopeId","data-v-44ec29c3"]]);export{$a as default};
