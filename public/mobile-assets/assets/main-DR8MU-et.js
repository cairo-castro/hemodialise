const __vite__fileDeps=["assets/LoginPage-tUXpX7I7.js","assets/vendor-BlPZouPF.js","assets/ionic-C-hOnMqp.js","assets/_plugin-vue_export-helper-B7Fc93E3.js","assets/LoginPage-BlrfglVi.css","assets/DashboardPage-Cc4UfFI5.js","assets/DashboardPage-BTJyevLQ.css","assets/ChecklistListPage-CNLBereQ.js","assets/ChecklistListPage-3oS1azzg.css","assets/ChecklistPage-CULEQm0G.js","assets/ChecklistPage-BGg6f3jC.css","assets/PatientsPage-DObS_jsi.js","assets/PatientsPage-Ddts0wIs.css","assets/PatientFormPage-ErhhMZS1.js","assets/PatientFormPage-NW8k5Nck.css","assets/MachinesPage-BlB0-diT.js","assets/MachinesPage-Doaqs895.css","assets/CleaningControlsPage-DYr5ImXy.js","assets/CleaningControlsPage-DNQ2Ary1.css","assets/CleaningChecklistNewPage-CNAMfNZv.js","assets/CleaningChecklistNewPage-D3YE4ovK.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var A=Object.defineProperty;var b=(r,e,t)=>e in r?A(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var h=(r,e,t)=>(b(r,typeof e!="symbol"?e+"":e,t),t);import{r as R,b as I,d as P,o as L,n as N,q as O,t as m,v as E,x as M,y as v,F as $,z as V}from"./vendor-BlPZouPF.js";import{I as K,a as B,c as x,b as j,_ as l,d as G}from"./ionic-C-hOnMqp.js";function ge(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}const i=R(!1),D=R(!1);function q(){const r=()=>{console.log("[useDarkMode] Applying dark mode:",i.value),i.value?(document.documentElement.classList.add("ion-palette-dark"),console.log("[useDarkMode] Added ion-palette-dark class")):(document.documentElement.classList.remove("ion-palette-dark"),console.log("[useDarkMode] Removed ion-palette-dark class")),console.log("[useDarkMode] HTML classes:",document.documentElement.className)};return{isDarkMode:i,toggleDarkMode:()=>{console.log("[useDarkMode] Toggle called. Current:",i.value),i.value=!i.value,console.log("[useDarkMode] New value:",i.value)},initializeDarkMode:()=>{if(D.value)return;const o=localStorage.getItem("dark-mode");o!==null?i.value=o==="true":i.value=window.matchMedia("(prefers-color-scheme: dark)").matches,r(),I(i,n=>{localStorage.setItem("dark-mode",n.toString()),r()}),D.value=!0,console.log("Dark mode initialized:",i.value)},setDarkMode:o=>{i.value=o}}}const z=P({__name:"App",setup(r){const{initializeDarkMode:e}=q();return L(()=>{e(),console.log("Mobile App mounted - Dark mode initialized")}),(t,s)=>(O(),N($,null,[s[0]||(s[0]=m("div",{class:"desktop-warning",style:{display:"none"}},[m("h1",null,"üì± Aplicativo Mobile"),m("p",null,"Este aplicativo foi projetado exclusivamente para dispositivos m√≥veis."),m("p",null,"Acesse pelo seu smartphone ou tablet para uma melhor experi√™ncia."),m("div",{style:{"margin-top":"2rem",padding:"1rem",background:"rgba(255,255,255,0.1)","border-radius":"8px"}},[m("p",{style:{"font-size":"1rem"}},"Para testar no navegador, use as ferramentas de desenvolvedor (F12) e ative a visualiza√ß√£o mobile.")])],-1)),E(v(K),null,{default:M(()=>[E(v(B))]),_:1})],64))}}),H={BASE_URL:"/api",getApiUrl(){return this.BASE_URL},ENDPOINTS:{LOGIN:"/login",LOGOUT:"/logout",ME:"/me",PATIENTS:"/patients",PATIENTS_SEARCH:"/patients/search",CHECKLISTS:"/checklists",CHECKLISTS_TODAY:"/checklists/today",CHECKLISTS_PENDING:"/checklists/pending",CHECKLISTS_BY_USER:"/checklists/user",CHECKLISTS_BY_MACHINE:"/checklists/machine",MACHINES:"/machines",MACHINES_AVAILABLE:"/machines/available",MACHINES_BY_UNIT:"/machines/unit"}};class Y{constructor(e){h(this,"baseUrl");h(this,"authRepository",null);h(this,"isRefreshing",!1);h(this,"refreshSubscribers",[]);this.baseUrl=e||H.getApiUrl()}setAuthRepository(e){this.authRepository=e}subscribeTokenRefresh(e){this.refreshSubscribers.push(e)}onTokenRefreshed(e){this.refreshSubscribers.forEach(t=>t(e)),this.refreshSubscribers=[]}async get(e,t){return this.request("GET",e,void 0,t)}async post(e,t,s){return this.request("POST",e,t,s)}async put(e,t,s){return this.request("PUT",e,t,s)}async delete(e,t){return this.request("DELETE",e,void 0,t)}async request(e,t,s,o){const n="".concat(this.baseUrl).concat(t),a={"Content-Type":"application/json",Accept:"application/json"};o&&(a.Authorization="Bearer ".concat(o));const c={method:e,headers:a};s&&(e==="POST"||e==="PUT")&&(c.body=JSON.stringify(s));try{const p=await fetch(n,c),g=await p.json();if(!p.ok){if(p.status===401&&this.authRepository&&t!=="/login"&&t!=="/refresh")try{const _=await this.refreshToken();a.Authorization="Bearer ".concat(_);const w=await fetch(n,{...c,headers:a}),d=await w.json();if(!w.ok)throw{message:d.message||"Sess√£o expirada. Fa√ßa login novamente.",errors:d.errors,status:w.status};return d&&typeof d=="object"&&"data"in d?d:{data:d,success:!0}}catch(_){throw this.authRepository&&this.authRepository.removeToken(),{message:"Sess√£o expirada. Fa√ßa login novamente.",status:401}}throw{message:g.message||"Erro na requisi√ß√£o",errors:g.errors,status:p.status}}return g&&typeof g=="object"&&"data"in g?g:{data:g,success:!0}}catch(p){throw p instanceof Error&&p.name==="TypeError"?{message:"Erro de conectividade. Verifique sua conex√£o.",status:0}:p}}async refreshToken(){if(this.isRefreshing)return new Promise(e=>{this.subscribeTokenRefresh(t=>{e(t)})});this.isRefreshing=!0;try{const e=this.authRepository.getStoredToken(),t=await fetch("".concat(this.baseUrl,"/refresh"),{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:"Bearer ".concat(e)}});if(!t.ok)throw new Error("Token refresh failed");const s=await t.json(),o=s.token||s.access_token;return this.authRepository.storeToken(o),this.onTokenRefreshed(o),o}finally{this.isRefreshing=!1}}}class F{set(e,t){try{localStorage.setItem(e,t)}catch(s){console.error("Erro ao salvar no localStorage:",s)}}get(e){try{return localStorage.getItem(e)}catch(t){return console.error("Erro ao ler do localStorage:",t),null}}remove(e){try{localStorage.removeItem(e)}catch(t){console.error("Erro ao remover do localStorage:",t)}}clear(){try{localStorage.clear()}catch(e){console.error("Erro ao limpar localStorage:",e)}}setObject(e,t){try{this.set(e,JSON.stringify(t))}catch(s){console.error("Erro ao salvar objeto no localStorage:",s)}}getObject(e){try{const t=this.get(e);return t?JSON.parse(t):null}catch(t){return console.error("Erro ao ler objeto do localStorage:",t),null}}}class J{constructor(e,t){h(this,"TOKEN_KEY","auth_token");this.apiDataSource=e,this.localStorageDataSource=t}async login(e){const t=await this.apiDataSource.post("/login",e);return t.data||t}async getCurrentUser(){var s;const e=this.getStoredToken();if(!e)throw new Error("Token n√£o encontrado");const t=await this.apiDataSource.get("/me",e);return((s=t.data)==null?void 0:s.user)||t.user||t}async logout(){const e=this.getStoredToken();e&&await this.apiDataSource.post("/logout",{},e)}getStoredToken(){return this.localStorageDataSource.get(this.TOKEN_KEY)}storeToken(e){this.localStorageDataSource.set(this.TOKEN_KEY,e)}removeToken(){this.localStorageDataSource.remove(this.TOKEN_KEY)}isAuthenticated(){const e=this.getStoredToken();return e!==null&&e!==""}}class W{constructor(e,t){this.apiDataSource=e,this.localStorageDataSource=t}getToken(){const e=this.localStorageDataSource.get("auth_token");if(!e)throw new Error("Token de autentica√ß√£o n√£o encontrado");return e}async search(e){const t=this.getToken();try{const s=await this.apiDataSource.post("/patients/search",{full_name:e.full_name,birth_date:e.birth_date},t);return s.data.found&&s.data.patient?s.data.patient:null}catch(s){if(s.status===404||s.status===422)return null;throw s}}async create(e){const t=this.getToken();return(await this.apiDataSource.post("/patients",e,t)).data.patient}async getById(e){const t=this.getToken(),s=await this.apiDataSource.get("/patients/".concat(e),t);if(s.data&&s.data.patient)return s.data.patient;throw new Error("Paciente n√£o encontrado")}async getAll(e,t=100){const s=this.getToken(),o=new URLSearchParams;o.append("per_page",t.toString()),e&&o.append("search",e);const n="/patients?".concat(o.toString()),a=await this.apiDataSource.get(n,s);return a.data&&a.data.patients?a.data.patients:Array.isArray(a.data)?a.data:[]}async quickSearch(e,t=20){const s=this.getToken(),o=new URLSearchParams;o.append("query",e),o.append("limit",t.toString());const n="/patients/quick-search?".concat(o.toString()),a=await this.apiDataSource.get(n,s);return a.data&&a.data.patients?a.data.patients:[]}async update(e,t){const s=this.getToken();return(await this.apiDataSource.put("/patients/".concat(e),t,s)).data}}class X{constructor(e,t){this.apiDataSource=e,this.localStorageDataSource=t}getToken(){const e=this.localStorageDataSource.get("auth_token");if(!e)throw new Error("Token de autentica√ß√£o n√£o encontrado");return e}async create(e){const t=this.getToken();return(await this.apiDataSource.post("/checklists",e,t)).data}async getById(e){const t=this.getToken();return(await this.apiDataSource.get("/checklists/".concat(e),t)).data}async getByUser(e,t){const s=this.getToken(),o=new URLSearchParams;t&&o.append("limit",t.toString());const n="/checklists/user/".concat(e).concat(o.toString()?"?"+o.toString():"");return(await this.apiDataSource.get(n,s)).data}async getByMachine(e,t){const s=this.getToken(),o=new URLSearchParams;t&&o.append("date",t);const n="/checklists/machine/".concat(e).concat(o.toString()?"?"+o.toString():"");return(await this.apiDataSource.get(n,s)).data}async getTodaysChecklists(){const e=this.getToken(),t=new Date().toISOString().split("T")[0];return(await this.apiDataSource.get("/checklists/today/".concat(t),e)).data}async getPendingChecklists(){const e=this.getToken();return(await this.apiDataSource.get("/checklists/pending",e)).data}}class Z{constructor(e,t){this.apiDataSource=e,this.localStorageDataSource=t}getToken(){const e=this.localStorageDataSource.get("auth_token");if(!e)throw new Error("Token de autentica√ß√£o n√£o encontrado");return e}async getAll(){const e=this.getToken(),t=await this.apiDataSource.get("/machines",e);return t.data&&t.data.machines?t.data.machines:Array.isArray(t.data)?t.data:[]}async getById(e){const t=this.getToken();return(await this.apiDataSource.get("/machines/".concat(e),t)).data}async getByUnit(e){const t=this.getToken();return(await this.apiDataSource.get("/machines/unit/".concat(e),t)).data}async getAvailable(){var s;const e=this.getToken(),t=await this.apiDataSource.get("/machines/available",e);return(s=t.data)!=null&&s.machines?t.data.machines:t.machines?t.machines:t.data||t}async updateStatus(e,t){const s=this.getToken();return(await this.apiDataSource.put("/machines/".concat(e,"/status"),t,s)).data.machine}async toggleActive(e,t){const s=this.getToken();return(await this.apiDataSource.put("/machines/".concat(e,"/toggle-active"),t,s)).data.machine}}class Q{constructor(e,t){this.apiDataSource=e,this.authRepository=t}getToken(){const e=this.authRepository.getStoredToken();if(!e)throw new Error("Token n√£o encontrado");return e}async getAll(e){const t=this.getToken(),s=new URLSearchParams;e&&(e.start_date&&s.append("start_date",e.start_date),e.end_date&&s.append("end_date",e.end_date),e.machine_id&&s.append("machine_id",e.machine_id.toString()),e.shift&&s.append("shift",e.shift));const o=s.toString(),n="/cleaning-checklists".concat(o?"?".concat(o):""),a=await this.apiDataSource.get(n,t);return a.data&&a.data.checklists?a.data.checklists:Array.isArray(a.data)?a.data:[]}async getById(e){const t=this.getToken(),s=await this.apiDataSource.get("/cleaning-checklists/".concat(e),t);if(s.data&&s.data.checklist)return s.data.checklist;throw new Error("Checklist n√£o encontrado")}async create(e){const t=this.getToken(),s=await this.apiDataSource.post("/cleaning-checklists",e,t);if(s.data&&s.data.checklist)return s.data.checklist;throw new Error("Erro ao criar checklist")}async update(e,t){const s=this.getToken(),o=await this.apiDataSource.put("/cleaning-checklists/".concat(e),t,s);if(o.data&&o.data.checklist)return o.data.checklist;throw new Error("Erro ao atualizar checklist")}async delete(e){const t=this.getToken();await this.apiDataSource.delete("/cleaning-checklists/".concat(e),t)}async getStats(){const e=this.getToken(),t=await this.apiDataSource.get("/cleaning-checklists/stats",e);if(t.data&&t.data.stats)return t.data.stats;throw new Error("Erro ao obter estat√≠sticas")}}class ee{constructor(e){this.authRepository=e}async execute(e){if(!e.email||!e.password)throw new Error("Email e senha s√£o obrigat√≥rios");if(!this.isValidEmail(e.email))throw new Error("Email deve ter um formato v√°lido");const t=await this.authRepository.login(e);return this.authRepository.storeToken(t.token||t.access_token),t}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}}class te{constructor(e){this.authRepository=e}async execute(){if(!this.authRepository.isAuthenticated())throw new Error("Usu√°rio n√£o est√° autenticado");try{return await this.authRepository.getCurrentUser()}catch(e){throw this.authRepository.removeToken(),new Error("Sess√£o expirada. Fa√ßa login novamente.")}}}class se{constructor(e){this.authRepository=e}async execute(){try{await this.authRepository.logout()}catch(e){console.warn("Erro ao fazer logout na API:",e)}finally{this.authRepository.removeToken()}}}class oe{constructor(e){this.patientRepository=e}async execute(e){var s;if(!((s=e.full_name)!=null&&s.trim()))throw new Error("Nome completo √© obrigat√≥rio");if(!e.birth_date)throw new Error("Data de nascimento √© obrigat√≥ria");if(!this.isValidDate(e.birth_date))throw new Error("Data de nascimento deve estar no formato v√°lido");const t={full_name:e.full_name.trim(),birth_date:e.birth_date};return await this.patientRepository.search(t)}isValidDate(e){const t=new Date(e);return t instanceof Date&&!isNaN(t.getTime())}}class re{constructor(e){this.patientRepository=e}async execute(e){var s,o,n,a,c;if(!((s=e.full_name)!=null&&s.trim()))throw new Error("Nome completo √© obrigat√≥rio");if(!e.birth_date)throw new Error("Data de nascimento √© obrigat√≥ria");if(!this.isValidDate(e.birth_date))throw new Error("Data de nascimento deve estar no formato v√°lido");if(e.blood_group&&!this.isValidBloodGroup(e.blood_group))throw new Error("Tipo sangu√≠neo inv√°lido");if(e.rh_factor&&!this.isValidRhFactor(e.rh_factor))throw new Error("Fator RH inv√°lido");const t={full_name:e.full_name.trim(),birth_date:e.birth_date,blood_group:(o=e.blood_group)==null?void 0:o.trim(),rh_factor:(n=e.rh_factor)==null?void 0:n.trim(),allergies:(a=e.allergies)==null?void 0:a.trim(),observations:(c=e.observations)==null?void 0:c.trim()};return await this.patientRepository.create(t)}isValidDate(e){const t=new Date(e);return t instanceof Date&&!isNaN(t.getTime())}isValidBloodGroup(e){return["A","B","AB","O"].includes(e)}isValidRhFactor(e){return["+","-"].includes(e)}}class ae{constructor(e){this.checklistRepository=e}async execute(e){if(!e.patient_id)throw new Error("ID do paciente √© obrigat√≥rio");if(!e.machine_id)throw new Error("ID da m√°quina √© obrigat√≥rio");if(!e.shift)throw new Error("Turno √© obrigat√≥rio");if(!this.isValidShift(e.shift))throw new Error("Turno deve ser: matutino, vespertino ou noturno");if(![e.patient_identification,e.access_patency,e.vital_signs,e.weight_measurement,e.machine_parameters,e.anticoagulation,e.alarm_tests,e.emergency_procedures].every(s=>s===!0))throw new Error("Todos os 8 itens de seguran√ßa devem ser verificados");return await this.checklistRepository.create(e)}isValidShift(e){return["matutino","vespertino","noturno"].includes(e)}}class ne{constructor(e){this.cleaningChecklistRepository=e}async execute(e){return await this.cleaningChecklistRepository.getAll(e)}}class ie{constructor(e){this.cleaningChecklistRepository=e}async execute(e){return await this.cleaningChecklistRepository.create(e)}}class ce{constructor(e){this.cleaningChecklistRepository=e}async execute(){return await this.cleaningChecklistRepository.getStats()}}const k=class k{constructor(){h(this,"services",new Map);this.registerServices()}static getInstance(){return k.instance||(k.instance=new k),k.instance}registerServices(){const e=new Y,t=new F;this.services.set("ApiDataSource",e),this.services.set("LocalStorageDataSource",t);const s=new J(e,t);e.setAuthRepository(s);const o=new W(e,t),n=new X(e,t),a=new Z(e,t),c=new Q(e,s);this.services.set("AuthRepository",s),this.services.set("PatientRepository",o),this.services.set("ChecklistRepository",n),this.services.set("MachineRepository",a),this.services.set("CleaningChecklistRepository",c),this.services.set("LoginUseCase",new ee(s)),this.services.set("GetCurrentUserUseCase",new te(s)),this.services.set("LogoutUseCase",new se(s)),this.services.set("SearchPatientUseCase",new oe(o)),this.services.set("CreatePatientUseCase",new re(o)),this.services.set("CreateChecklistUseCase",new ae(n)),this.services.set("GetCleaningChecklistsUseCase",new ne(c)),this.services.set("CreateCleaningChecklistUseCase",new ie(c)),this.services.set("GetCleaningChecklistStatsUseCase",new ce(c))}get(e){const t=this.services.get(e);if(!t)throw new Error("Service ".concat(e," not found"));return t}getLoginUseCase(){return this.get("LoginUseCase")}getCurrentUserUseCase(){return this.get("GetCurrentUserUseCase")}getLogoutUseCase(){return this.get("LogoutUseCase")}getSearchPatientUseCase(){return this.get("SearchPatientUseCase")}getCreatePatientUseCase(){return this.get("CreatePatientUseCase")}getCreateChecklistUseCase(){return this.get("CreateChecklistUseCase")}getAuthRepository(){return this.get("AuthRepository")}getPatientRepository(){return this.get("PatientRepository")}getMachineRepository(){return this.get("MachineRepository")}getGetCleaningChecklistsUseCase(){return this.get("GetCleaningChecklistsUseCase")}getCreateCleaningChecklistUseCase(){return this.get("CreateCleaningChecklistUseCase")}getGetCleaningChecklistStatsUseCase(){return this.get("GetCleaningChecklistStatsUseCase")}getCleaningChecklistRepository(){return this.get("CleaningChecklistRepository")}};h(k,"instance");let S=k;const C=S.getInstance(),f=C.getAuthRepository(),u=async(r,e,t)=>{if(console.log("requiresAuth guard - checking authentication..."),!f.getStoredToken()){console.log("No token found, redirecting to login"),t("/login");return}try{await C.getCurrentUserUseCase().execute(),console.log("Token is valid, allowing access to:",r.path),t()}catch(o){console.log("Token validation failed, clearing token and redirecting to login"),f.removeToken(),t("/login")}},he=async(r,e,t)=>{if(console.log("redirectIfAuthenticated guard - checking authentication..."),!f.getStoredToken()){console.log("No token, allowing access to login"),t();return}try{await C.getCurrentUserUseCase().execute(),console.log("User is authenticated, redirecting to dashboard"),t("/dashboard")}catch(o){console.log("Token validation failed, clearing token and allowing login"),f.removeToken(),t()}},le=[{path:"/",redirect:"/login"},{path:"/login",name:"Login",component:()=>l(()=>import("./LoginPage-tUXpX7I7.js"),__vite__mapDeps([0,1,2,3,4])),beforeEnter:he},{path:"/dashboard",name:"Dashboard",component:()=>l(()=>import("./DashboardPage-Cc4UfFI5.js"),__vite__mapDeps([5,1,2,3,6])),beforeEnter:u},{path:"/checklists",name:"ChecklistList",component:()=>l(()=>import("./ChecklistListPage-CNLBereQ.js"),__vite__mapDeps([7,1,2,3,8])),beforeEnter:u},{path:"/checklist/new",name:"NewChecklist",component:()=>l(()=>import("./ChecklistPage-CULEQm0G.js"),__vite__mapDeps([9,1,2,3,10])),beforeEnter:u},{path:"/checklist/:id",name:"Checklist",component:()=>l(()=>import("./ChecklistPage-CULEQm0G.js"),__vite__mapDeps([9,1,2,3,10])),beforeEnter:u},{path:"/checklist",redirect:"/checklists"},{path:"/patients",name:"Patients",component:()=>l(()=>import("./PatientsPage-DObS_jsi.js"),__vite__mapDeps([11,1,2,3,12])),beforeEnter:u},{path:"/patients/new",name:"NewPatient",component:()=>l(()=>import("./PatientFormPage-ErhhMZS1.js"),__vite__mapDeps([13,1,2,3,14])),beforeEnter:u},{path:"/machines",name:"Machines",component:()=>l(()=>import("./MachinesPage-BlB0-diT.js"),__vite__mapDeps([15,2,1,3,16])),beforeEnter:u},{path:"/cleaning-controls",name:"CleaningControls",component:()=>l(()=>import("./CleaningControlsPage-DYr5ImXy.js"),__vite__mapDeps([17,1,2,3,18])),beforeEnter:u},{path:"/cleaning-checklist/new",name:"NewCleaningChecklist",component:()=>l(()=>import("./CleaningChecklistNewPage-CNAMfNZv.js"),__vite__mapDeps([19,1,2,3,20])),beforeEnter:u},{path:"/:pathMatch(.*)*",redirect:"/login"}],U=x({history:j("/mobile/"),routes:le});class y{static getToken(){return localStorage.getItem(this.TOKEN_KEY)}static setToken(e){localStorage.setItem(this.TOKEN_KEY,e)}static removeToken(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_KEY)}static getUser(){const e=localStorage.getItem(this.USER_KEY);return e?JSON.parse(e):null}static setUser(e){localStorage.setItem(this.USER_KEY,JSON.stringify(e))}static isAuthenticated(){const e=this.getToken(),t=this.getUser();return!!(e&&t)}static getAuthHeaders(){var o;const e=this.getToken(),t={"Content-Type":"application/json",Accept:"application/json"};e&&(t.Authorization="Bearer ".concat(e));const s=(o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content");return s&&(t["X-CSRF-TOKEN"]=s),t}static async logout(){try{await fetch("/api/logout",{method:"POST",headers:this.getAuthHeaders()})}catch(e){console.error("Logout error:",e)}finally{this.removeToken()}}static async checkAuth(){if(!this.isAuthenticated())return!1;try{const e=await fetch("/api/me",{headers:this.getAuthHeaders()});if(e.ok){const t=await e.json();return this.setUser(t),!0}else return e.status===401?(console.log("Token expired, attempting refresh..."),await this.refreshToken()):(this.removeToken(),!1)}catch(e){return console.error("Auth check error:",e),this.removeToken(),!1}}static async refreshToken(){try{const e=await fetch("/api/refresh",{method:"POST",headers:this.getAuthHeaders()});if(e.ok){const t=await e.json();return this.setToken(t.token),this.setUser(t.user),console.log("Token refreshed successfully"),!0}else return console.log("Token refresh failed, redirecting to login"),this.removeToken(),!1}catch(e){return console.error("Token refresh error:",e),this.removeToken(),!1}}static async login(e,t){const s=await fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({email:e,password:t})});if(!s.ok){const n=await s.json();throw new Error(n.message||"Login failed")}const o=await s.json();return this.setToken(o.token||o.access_token),this.setUser(o.user),o}}h(y,"TOKEN_KEY","auth_token"),h(y,"USER_KEY","auth_user");const T=V(z).use(G,{backButtonText:"Voltar",mode:"ios"}).use(U);T.config.globalProperties.$auth=y;T.provide("auth",y);U.isReady().then(()=>{T.mount("#app")});export{y as A,S as C,ge as __vite_legacy_guard,q as u};
