import{d as He,n as h,q as c,t as s,J as g,G as d,K as y,v as n,y as t,B as k,H as f,r as _,c as ve,b as ft,o as gt,M as yt,e as bt,x as u,u as kt,w as Te,D as Ne,F as Y,L as Z,z as Ct}from"./vendor-BAY9JQbk.js";import{g as l,A as wt,e as It,t as I,o as $e,q as De,x as Pt,p as qe,r as Re,B as F,C as L,k as D,f as St,v as Me,w as Ve,D as At,E as Ot,i as Be,F as Et,G as Tt,n as ee,l as me}from"./ionic-B_Arm38Z.js";import{z as $,C as z,D as fe,E as je,F as se,_ as Ue,G as Nt,t as xe,H as he,I as $t,J as _e,K as Fe,m as Dt,h as qt,L as Rt,j as Mt,M as Vt,g as Bt,N as Le,O as jt,f as xt,P as ze,Q as Ft,R as Lt,u as zt}from"./_plugin-vue_export-helper-BgNw2jzN.js";import{C as Ht,A as te}from"./main-Cy26erA9.js";const Ut={class:"item-card-header"},Jt={class:"header-content"},Kt={class:"item-card-title"},Wt={key:0,class:"item-card-description"},Xt={key:0,class:"header-badge"},Gt={class:"status-actions"},Qt={class:"action-status-icon success"},Yt={class:"action-status-icon danger"},Zt={class:"action-status-icon neutral"},es={key:0,class:"observation-card"},ts={class:"observation-label"},ss=["value"],as=He({__name:"ChecklistItem",props:{title:{},description:{default:""},value:{default:null},observation:{default:""},required:{type:Boolean,default:!1}},emits:["update:value","update:observation"],setup(ge,{emit:M}){const H=ge,P=M,V=p=>{H.value===p?(P("update:value",null),P("update:observation","")):(P("update:value",p),p!=="NC"&&P("update:observation",""))},q=p=>{P("update:observation",p)},U=p=>{switch(p){case"C":return $;case"NC":return fe;case"NA":return je;default:return $}};return(p,v)=>(c(),h("div",{class:y(["checklist-item-card",{"has-value":p.value!==null,"is-conforme":p.value==="C","is-nao-conforme":p.value==="NC","is-nao-aplica":p.value==="NA"}])},[s("div",Ut,[s("div",Jt,[s("h3",Kt,d(p.title),1),p.description?(c(),h("p",Wt,d(p.description),1)):g("",!0)]),p.value?(c(),h("div",Xt,[s("div",{class:y(["status-badge",p.value.toLowerCase()])},[n(t(l),{icon:U(p.value)},null,8,["icon"])],2)])):g("",!0)]),s("div",Gt,[s("button",{class:y(["action-status-btn conforme",{selected:p.value==="C"}]),onClick:v[0]||(v[0]=E=>V("C")),type:"button"},[s("div",Qt,[n(t(l),{icon:t($)},null,8,["icon"])]),v[4]||(v[4]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Conforme"),s("span",{class:"action-status-hint"},"Tudo OK")],-1)),p.value==="C"?(c(),k(t(l),{key:0,icon:t(z),class:"selected-check"},null,8,["icon"])):g("",!0)],2),s("button",{class:y(["action-status-btn nao-conforme",{selected:p.value==="NC"}]),onClick:v[1]||(v[1]=E=>V("NC")),type:"button"},[s("div",Yt,[n(t(l),{icon:t(fe)},null,8,["icon"])]),v[5]||(v[5]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Não Conforme"),s("span",{class:"action-status-hint"},"Problema")],-1)),p.value==="NC"?(c(),k(t(l),{key:0,icon:t(z),class:"selected-check"},null,8,["icon"])):g("",!0)],2),s("button",{class:y(["action-status-btn nao-aplica",{selected:p.value==="NA"}]),onClick:v[2]||(v[2]=E=>V("NA")),type:"button"},[s("div",Zt,[n(t(l),{icon:t(je)},null,8,["icon"])]),v[6]||(v[6]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Não Aplica"),s("span",{class:"action-status-hint"},"N/A")],-1)),p.value==="NA"?(c(),k(t(l),{key:0,icon:t(z),class:"selected-check"},null,8,["icon"])):g("",!0)],2)]),p.value==="NC"?(c(),h("div",es,[s("label",ts,[n(t(l),{icon:t(se)},null,8,["icon"]),v[7]||(v[7]=f(" Descreva o Problema * ",-1))]),s("textarea",{value:p.observation,onInput:v[3]||(v[3]=E=>q(E.target.value)),class:"observation-textarea",rows:"3",placeholder:"Ex: Equipamento apresentando ruído anormal...",required:""},null,40,ss)])):g("",!0)],2))}}),os=Ue(as,[["__scopeId","data-v-224039b4"]]),ns={class:"checklist-container"},is={class:"time-display"},ls={class:"current-date"},rs={class:"current-time"},cs={key:0,class:"section"},us={class:"section-title"},ds={class:"search-card"},ps={class:"search-input-wrapper"},vs={key:0,class:"patient-selected"},ms={class:"action-btn selected"},hs={class:"action-icon success"},_s={class:"action-content"},fs={class:"action-title"},gs={class:"action-subtitle"},ys={key:1,class:"search-results"},bs=["onClick"],ks={class:"action-icon primary"},Cs={class:"action-content"},ws={class:"action-title"},Is={class:"action-subtitle"},Ps={key:2,class:"no-results"},Ss={key:3,class:"search-loading"},As={key:1,class:"section"},Os={class:"section-title"},Es={class:"selection-card"},Ts={class:"availability-icon"},Ns={class:"availability-info"},$s={class:"availability-label"},Ds={class:"availability-count"},qs={class:"form-group"},Rs={class:"input-label"},Ms={class:"machine-grid"},Vs=["onClick"],Bs={class:"machine-icon"},js={class:"machine-info"},xs={class:"machine-name"},Fs={key:0,class:"machine-check"},Ls={class:"form-group"},zs={class:"input-label"},Hs={class:"shift-selector"},Us={class:"primary-action"},Js=["disabled"],Ks={key:2},Ws={class:"phase-header"},Xs={class:"phase-time"},Gs={class:"phase-progress"},Qs={class:"progress-steps"},Ys={class:"step-circle"},Zs={key:2},ea={class:"step-label"},ta={class:"phase-completion"},sa={class:"patient-summary"},aa={class:"patient-details"},oa={class:"session-time"},na={key:2,class:"phase-section"},ia={class:"phase-header-card"},la={class:"phase-header-icon"},ra={class:"phase-header-content"},ca={class:"phase-header-badge"},ua={class:"checklist-items-grid"},da={class:"observations-card"},pa={class:"card-label"},va=["disabled"],ma={class:"btn-text"},ha={class:"btn-title"},_a={class:"btn-subtitle"},fa={class:"dashboard-actions"},ga={class:"action-card-icon warning"},ya={class:"action-card-icon danger"},ba={key:3,class:"interrupted-section"},ka={class:"interrupted-content"},Ca={class:"interruption-reason"},wa={key:4,class:"completed-section"},Ia={class:"completed-content"},Pa={class:"interrupt-modal-content"},Sa={class:"warning-section"},Aa={class:"form-group"},Oa={class:"modal-buttons"},Ea=He({__name:"ChecklistPage",setup(ge){const M=Ct(),H=kt(),P=Ht.getInstance();P.getSearchPatientUseCase();const V=P.getMachineRepository(),q=_(),U=_(""),p=_(""),v=_(!1),E=_(""),R=_(0),B=_("machine-patient"),C=_(""),S=_([]),j=_(!1),b=_(null);let ae;const oe=_(null),ne=_([]),ie=_(null),ye=_(!1),i=_(null),A=_(null),be=_(!1),m=_({machine_id:0,shift:"matutino",observations:"",machine_disinfected:!1,capillary_lines_identified:!1,patient_identification_confirmed:!1,vascular_access_evaluated:!1,vital_signs_checked:!1,medications_reviewed:!1,dialyzer_membrane_checked:!1,equipment_functioning_verified:!1,dialysis_parameters_verified:!1,patient_comfort_assessed:!1,fluid_balance_monitored:!1,alarms_responded:!1,session_completed_safely:!1,vascular_access_secured:!1,patient_vital_signs_stable:!1,equipment_cleaned:!1}),J=_({}),K=_({}),Je=["pre_dialysis","during_session","post_dialysis"];let le;const Ke=ve(()=>b.value&&m.value.machine_id&&m.value.shift),W=ve(()=>i.value?x().every(a=>{const r=G(a.key);if(r===null)return!1;if(r==="C"||r==="NA")return!0;if(r==="NC"){const w=ue(a.key);return w&&w.trim().length>0}return!1}):!1),We=ve(()=>i.value?i.value.current_phase==="post_dialysis":!1),ke=o=>({pre_dialysis:"Pré-Diálise",during_session:"Durante a Sessão",post_dialysis:"Pós-Diálise",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Xe=o=>({pre_dialysis:"Pré",during_session:"Durante",post_dialysis:"Pós"})[o]||o,Ge=o=>({pre_dialysis:"Verificações de segurança antes de iniciar a sessão de diálise",during_session:"Monitoramento contínuo durante o procedimento",post_dialysis:"Finalização segura da sessão e limpeza dos equipamentos"})[o]||"",Ce=o=>({pre_dialysis:"warning",during_session:"primary",post_dialysis:"secondary",completed:"success",interrupted:"danger"})[o]||"medium",we=o=>$,Qe=o=>({pre_dialysis:"Preparando",during_session:"Em Andamento",post_dialysis:"Finalizando",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Ye=o=>({pre_dialysis:"1",during_session:"2",post_dialysis:"3"})[o]||"",Ie=o=>{if(!i.value)return!1;switch(o){case"pre_dialysis":return i.value.pre_dialysis_completed_at!==null;case"during_session":return i.value.during_session_completed_at!==null;case"post_dialysis":return i.value.post_dialysis_completed_at!==null;default:return!1}},x=()=>{var e;return{pre_dialysis:[{key:"machine_disinfected",label:"Máquina Desinfetada",description:"Verificar se a máquina foi devidamente desinfetada"},{key:"capillary_lines_identified",label:"Linhas Capilares Identificadas",description:"Identificar e verificar as linhas capilares"},{key:"patient_identification_confirmed",label:"Identificação do Paciente",description:"Confirmar identidade com dois identificadores"},{key:"vascular_access_evaluated",label:"Acesso Vascular Avaliado",description:"Avaliar condições do acesso vascular"},{key:"vital_signs_checked",label:"Sinais Vitais Verificados",description:"Aferir pressão arterial, temperatura e peso"},{key:"medications_reviewed",label:"Medicações Revisadas",description:"Revisar medicações e dosagens prescritas"},{key:"dialyzer_membrane_checked",label:"Membrana do Dialisador Verificada",description:"Verificar integridade da membrana"},{key:"equipment_functioning_verified",label:"Funcionamento dos Equipamentos",description:"Testar funcionamento de todos os equipamentos"}],during_session:[{key:"dialysis_parameters_verified",label:"Parâmetros de Diálise Verificados",description:"Confirmar e ajustar parâmetros de diálise"},{key:"patient_comfort_assessed",label:"Conforto do Paciente Avaliado",description:"Verificar conforto e bem-estar do paciente"},{key:"fluid_balance_monitored",label:"Balanço Hídrico Monitorado",description:"Acompanhar remoção e balanço de fluidos"},{key:"alarms_responded",label:"Resposta a Alarmes",description:"Verificar e responder adequadamente aos alarmes"}],post_dialysis:[{key:"session_completed_safely",label:"Sessão Finalizada com Segurança",description:"Finalizar sessão seguindo protocolos de segurança"},{key:"vascular_access_secured",label:"Acesso Vascular Protegido",description:"Proteger e cuidar do acesso vascular"},{key:"patient_vital_signs_stable",label:"Sinais Vitais Estáveis",description:"Confirmar estabilidade dos sinais vitais"},{key:"equipment_cleaned",label:"Equipamentos Limpos",description:"Limpar e preparar equipamentos para próximo uso"}]}[(e=i.value)==null?void 0:e.current_phase]||[]},Pe=()=>{const o=new Date;U.value=o.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit",second:"2-digit"}),p.value=o.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},Ze=()=>{if(ae&&clearTimeout(ae),C.value.length<3){S.value=[];return}j.value=!0,ae=setTimeout(async()=>{await et()},500)},et=async()=>{if(C.value.length<3){S.value=[],j.value=!1;return}try{const e=await P.getPatientRepository().quickSearch(C.value,10);S.value=e}catch(o){console.error("Erro ao buscar pacientes:",o),S.value=[]}finally{j.value=!1}},tt=o=>{b.value=o,C.value=o.full_name,S.value=[]},st=()=>{b.value=null,C.value="",S.value=[]},at=()=>{localStorage.setItem("patient_search_query",C.value),M.push("/patients/new")},ot=async()=>{var a,r,w;if(ye.value){B.value="pre-dialysis";return}if(!(await ct()).canCreate)return;const e=await ee.create({message:"Iniciando checklist...",spinner:"crescent"});await e.present();try{const T=await fetch("/api/checklists",{method:"POST",headers:te.getAuthHeaders(),body:JSON.stringify({patient_id:(a=b.value)==null?void 0:a.id,machine_id:m.value.machine_id,shift:m.value.shift,observations:m.value.observations})}),O=await T.json();if(T.ok&&O.success){i.value=O.checklist,oe.value=ne.value.find(_t=>_t.id===m.value.machine_id)||null,X();const N=O.resumed?"Checklist existente carregado!":"Novo checklist iniciado com sucesso!";await(await I.create({message:N,duration:2e3,color:"success",position:"top"})).present()}else{const N=O.message||((w=(r=O.errors)==null?void 0:r.machine_id)==null?void 0:w[0])||"Erro ao iniciar checklist";throw new Error(N)}}catch(T){await(await I.create({message:T.message||"Erro ao iniciar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await e.dismiss()}},nt=async()=>{if(!W.value)return;const o=await ee.create({message:"Avançando para próxima fase...",spinner:"crescent"});await o.present();try{await re();const a=await(await fetch("/api/checklists/".concat(i.value.id,"/advance"),{method:"POST",headers:{"Content-Type":"application/json",...te.getAuthHeaders()}})).json();if(a.success)i.value=a.checklist,X(),q.value&&q.value.$el&&await q.value.$el.scrollToTop(400),await(await I.create({message:a.message,duration:2e3,color:"success",position:"top"})).present();else throw new Error(a.message||"Erro ao avançar fase")}catch(e){await(await I.create({message:e.message||"Erro ao avançar fase",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},re=async()=>{if(i.value)try{const o={},e={};x().forEach(T=>{const O=G(T.key),N=ue(T.key);let Q=!1;(O==="C"||O==="NA"||O==="NC"&&N&&N.trim().length>0)&&(Q=!0),o[T.key]=Q,N&&N.trim().length>0&&(e[T.key]=N)});const r=await fetch("/api/checklists/".concat(i.value.id,"/phase"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))},body:JSON.stringify({phase_data:o,observations:m.value.observations,item_observations:e})});if(!r.ok)throw new Error("Erro ao salvar dados");const w=await r.json();w.success&&(R.value=w.phase_completion)}catch(o){console.error("Erro no updatePhaseData:",o)}},it=async()=>{const o=await ee.create({message:"Interrompendo checklist...",spinner:"crescent"});await o.present();try{const a=await(await fetch("/api/checklists/".concat(i.value.id,"/interrupt"),{method:"POST",headers:te.getAuthHeaders(),body:JSON.stringify({reason:E.value})})).json();if(a.success)i.value=a.checklist,v.value=!1,await(await I.create({message:"Checklist interrompido com sucesso.",duration:3e3,color:"warning",position:"top"})).present();else throw new Error(a.message||"Erro ao interromper checklist")}catch(e){await(await I.create({message:e.message||"Erro ao interromper checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},Se=()=>{M.replace("/dashboard")},lt=async()=>{var e;if(!i.value)return;const o=await ee.create({message:"Pausando checklist..."});await o.present();try{const r=await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((e=document.querySelector('meta[name="csrf-token"]'))==null?void 0:e.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"manual"})})).json();if(r.success)await(await I.create({message:"Checklist pausado com sucesso. Você pode retomá-lo a qualquer momento.",duration:3e3,color:"success",position:"top"})).present(),i.value.paused_at=r.checklist.paused_at,M.replace("/dashboard");else throw new Error(r.message||"Erro ao pausar checklist")}catch(a){console.error("Erro ao pausar checklist:",a),await(await I.create({message:"Erro ao pausar checklist. Tente novamente.",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},X=()=>{const o=x(),e=o.filter(a=>G(a.key)!==null).length;R.value=o.length>0?e/o.length*100:0},rt=async()=>{try{ne.value=await V.getAvailable(),await Ae()}catch(o){console.error("Error loading machines:",o)}},Ae=async()=>{try{be.value=!0;const o=await fetch("/api/machines/availability",{headers:te.getAuthHeaders()});if(o.ok){const e=await o.json();A.value=e.availability}}catch(o){console.error("Error fetching machine availability:",o)}finally{be.value=!1}},ct=async()=>{if(await Ae(),!A.value)return{canCreate:!0};const{available:o,overall_status:e,message:a}=A.value;if(o===0)return await(await me.create({header:"Máquinas Indisponíveis",message:a||"Não há máquinas disponíveis no momento. Por favor, aguarde até que uma máquina fique livre.",buttons:["OK"]})).present(),{canCreate:!1};if(e==="warning"||e==="alert"){const r=await me.create({header:"Atenção",message:"".concat(a,". Apenas ").concat(o," máquina(s) disponível(is). Deseja continuar?"),buttons:[{text:"Cancelar",role:"cancel"},{text:"Continuar",role:"confirm"}]});await r.present();const{role:w}=await r.onDidDismiss();return{canCreate:w==="confirm"}}return{canCreate:!0}},ut=async()=>{const o=H.params.id;if(o&&o!=="new")try{const e=await fetch("/api/checklists/".concat(o),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}});if(e.ok){const a=await e.json();switch(i.value=a,ie.value=a.id,ye.value=!0,oe.value=a.machine,b.value=a.patient,a.current_phase){case"pre_dialysis":B.value="pre-dialysis";break;case"during_session":B.value="during-session";break;case"post_dialysis":B.value="post-dialysis";break;default:B.value="pre-dialysis"}a.paused_at&&!a.resumed_at&&await dt(),pt(a),X(),console.log("Checklist carregado:",a)}}catch(e){console.error("Erro ao carregar checklist:",e)}},dt=async()=>{if(ie.value)try{(await fetch("/api/checklists/".concat(ie.value,"/resume"),{method:"POST",headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}})).ok&&console.log("Checklist retomado com sucesso")}catch(o){console.error("Erro ao retomar checklist:",o)}},pt=o=>{Object.keys(m.value).forEach(a=>{o[a]!==void 0&&(m.value[a]=o[a])}),o.item_observations&&(K.value={...o.item_observations}),x().forEach(a=>{const r=o[a.key];r!==void 0&&(r===!0?J.value[a.key]="C":r===!1&&K.value[a.key]&&(J.value[a.key]="NC"))})},Oe=o=>new Date(o).toLocaleDateString("pt-BR"),ce=o=>new Date(o).toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"}),G=o=>J.value[o]||null,vt=(o,e)=>{J.value[o]=e,m.value[o]=e==="C",X(),i.value&&re()},ue=o=>K.value[o]||"";let de=null;const mt=(o,e)=>{K.value[o]=e,de&&clearTimeout(de),de=setTimeout(()=>{i.value&&re()},1e3)},ht=async o=>{try{console.log("🔄 Carregando paciente ID:",o);const a=await P.getPatientRepository().getById(o);a&&(console.log("✅ Paciente carregado:",a),b.value=a,C.value=a.full_name,S.value=[],await(await I.create({message:"Paciente ".concat(a.full_name," selecionado!"),duration:2e3,color:"success",position:"top"})).present())}catch(e){console.error("❌ Erro ao carregar paciente:",e),await(await I.create({message:"Erro ao carregar paciente cadastrado",duration:3e3,color:"danger",position:"top"})).present()}},pe=()=>{const o=localStorage.getItem("return_to_checklist"),e=localStorage.getItem("new_patient_id");console.log("🔍 Verificando retorno - return_to_checklist:",o,"new_patient_id:",e),o==="true"&&e&&(console.log("🎯 Detectado retorno de cadastro, carregando paciente..."),ht(parseInt(e)),localStorage.removeItem("return_to_checklist"),localStorage.removeItem("new_patient_id"),localStorage.removeItem("patient_search_query"))};wt(()=>{console.log("🚀 onIonViewWillEnter - Página sendo exibida"),pe()}),ft(()=>H.path,o=>{console.log("🔄 Rota mudou para:",o),o==="/checklist/new"&&(console.log("📍 Detectado retorno para /checklist/new via watch"),setTimeout(pe,100))}),gt(()=>{console.log("🏁 onMounted - Página montada"),rt(),ut(),Pe(),le=setInterval(Pe,1e3),pe()}),yt(async(o,e)=>{if(!i.value||i.value.paused_at||i.value.current_phase==="completed"||i.value.is_interrupted)return!0;const a=await me.create({header:"Pausar Checklist?",message:"Você está saindo do checklist ativo. Deseja pausá-lo para continuar depois?",buttons:[{text:"Cancelar",role:"cancel",handler:()=>!1},{text:"Sair sem Pausar",role:"destructive",handler:async()=>!0},{text:"Pausar e Sair",handler:async()=>(await Ee(),!0)}]});await a.present();const{role:r}=await a.onDidDismiss();return r==="cancel"||!r?!1:(r==="handler"&&await Ee(),!0)});const Ee=async()=>{var o;if(i.value)try{(await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"auto"})})).json()).success&&await(await I.create({message:"Checklist pausado automaticamente.",duration:2e3,color:"warning",position:"top"})).present()}catch(e){console.error("Erro ao pausar checklist automaticamente:",e)}};return bt(()=>{le&&clearInterval(le)}),(o,e)=>(c(),k(t(It),null,{default:u(()=>[n(t(Re),{translucent:!0},{default:u(()=>[n(t($e),{color:"primary"},{default:u(()=>[n(t(De),{slot:"start"},{default:u(()=>[n(t(Pt),{"default-href":"/dashboard"})]),_:1}),n(t(qe),null,{default:u(()=>[...e[11]||(e[11]=[f("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),n(t(Be),{ref_key:"contentRef",ref:q,fullscreen:!0},{default:u(()=>[s("div",ns,[n(t(F),{class:"time-header-card"},{default:u(()=>[n(t(L),null,{default:u(()=>[s("div",is,[s("div",ls,[n(t(l),{icon:t(Nt),class:"date-icon"},null,8,["icon"]),f(" "+d(p.value),1)]),s("div",rs,[n(t(l),{icon:t(xe),class:"time-icon"},null,8,["icon"]),f(" "+d(U.value),1)])])]),_:1})]),_:1}),i.value?g("",!0):(c(),h("div",cs,[s("h2",us,[n(t(l),{icon:t(he)},null,8,["icon"]),e[12]||(e[12]=f(" Etapa 1: Buscar Paciente ",-1))]),s("div",ds,[s("div",ps,[n(t(l),{icon:t($t),class:"search-icon"},null,8,["icon"]),Te(s("input",{"onUpdate:modelValue":e[0]||(e[0]=a=>C.value=a),type:"text",placeholder:"Digite o nome do paciente...",class:"search-input",onInput:Ze},null,544),[[Ne,C.value]])]),b.value?(c(),h("div",vs,[s("div",ms,[s("div",hs,[n(t(l),{icon:t($)},null,8,["icon"])]),s("div",_s,[s("span",fs,d(b.value.full_name),1),s("span",gs,d(Oe(b.value.birth_date))+" • "+d(b.value.age)+" anos ",1)]),n(t(D),{fill:"clear",onClick:st},{default:u(()=>[n(t(l),{icon:t(_e),slot:"icon-only"},null,8,["icon"])]),_:1})])])):S.value.length>0&&C.value.length>0?(c(),h("div",ys,[(c(!0),h(Y,null,Z(S.value,a=>(c(),h("div",{key:a.id,class:"action-btn",onClick:r=>tt(a)},[s("div",ks,[n(t(l),{icon:t(he)},null,8,["icon"])]),s("div",Cs,[s("span",ws,d(a.full_name),1),s("span",Is,d(Oe(a.birth_date))+" • "+d(a.age)+" anos ",1)]),n(t(l),{icon:t(zt),class:"chevron"},null,8,["icon"])],8,bs))),128))])):C.value.length>2&&S.value.length===0&&!j.value?(c(),h("div",Ps,[n(t(l),{icon:t(se),class:"no-results-icon"},null,8,["icon"]),e[14]||(e[14]=s("h3",null,"Paciente não encontrado",-1)),e[15]||(e[15]=s("p",null,"Não encontramos nenhum paciente com esse nome.",-1)),n(t(D),{expand:"block",onClick:at,class:"register-btn"},{default:u(()=>[n(t(l),{icon:t(he),slot:"start"},null,8,["icon"]),e[13]||(e[13]=f(" Cadastrar Novo Paciente ",-1))]),_:1})])):g("",!0),j.value?(c(),h("div",Ss,[n(t(St),{name:"crescent"}),e[16]||(e[16]=s("p",null,"Buscando...",-1))])):g("",!0)])])),b.value&&!i.value?(c(),h("div",As,[s("h2",Os,[n(t(l),{icon:t(Fe)},null,8,["icon"]),e[17]||(e[17]=f(" Etapa 2: Máquina e Turno ",-1))]),s("div",Es,[A.value?(c(),h("div",{key:0,class:y(["availability-badge",A.value.overall_status])},[s("div",Ts,[A.value.overall_status==="good"?(c(),k(t(l),{key:0,icon:t($)},null,8,["icon"])):A.value.overall_status==="critical"?(c(),k(t(l),{key:1,icon:t(fe)},null,8,["icon"])):(c(),k(t(l),{key:2,icon:t(se)},null,8,["icon"]))]),s("div",Ns,[s("span",$s,d(A.value.message),1),s("span",Ds,d(A.value.available)+" de "+d(A.value.total)+" disponíveis",1)])],2)):g("",!0),s("div",qs,[s("label",Rs,[n(t(l),{icon:t(Dt)},null,8,["icon"]),e[18]||(e[18]=f(" Selecione a Máquina ",-1))]),s("div",Ms,[(c(!0),h(Y,null,Z(ne.value,a=>(c(),h("button",{key:a.id,type:"button",class:y(["machine-card",{selected:m.value.machine_id===a.id}]),onClick:r=>m.value.machine_id=a.id},[s("div",Bs,[n(t(l),{icon:t(Fe)},null,8,["icon"])]),s("div",js,[s("span",xs,d(a.name),1),e[19]||(e[19]=s("span",{class:"machine-status"},"Disponível",-1))]),m.value.machine_id===a.id?(c(),h("div",Fs,[n(t(l),{icon:t($)},null,8,["icon"])])):g("",!0)],10,Vs))),128))])]),s("div",Ls,[s("label",zs,[n(t(l),{icon:t(xe)},null,8,["icon"]),e[20]||(e[20]=f(" Selecione o Turno ",-1))]),s("div",Hs,[s("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="matutino"}]),onClick:e[1]||(e[1]=a=>m.value.shift="matutino")},[n(t(l),{icon:t(qt)},null,8,["icon"]),e[21]||(e[21]=s("span",null,"Matutino",-1)),e[22]||(e[22]=s("span",{class:"shift-time"},"06:00 - 12:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="vespertino"}]),onClick:e[2]||(e[2]=a=>m.value.shift="vespertino")},[n(t(l),{icon:t(Rt)},null,8,["icon"]),e[23]||(e[23]=s("span",null,"Vespertino",-1)),e[24]||(e[24]=s("span",{class:"shift-time"},"12:00 - 18:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="noturno"}]),onClick:e[3]||(e[3]=a=>m.value.shift="noturno")},[n(t(l),{icon:t(Mt)},null,8,["icon"]),e[25]||(e[25]=s("span",null,"Noturno",-1)),e[26]||(e[26]=s("span",{class:"shift-time"},"18:00 - 00:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="madrugada"}]),onClick:e[4]||(e[4]=a=>m.value.shift="madrugada")},[n(t(l),{icon:t(Vt)},null,8,["icon"]),e[27]||(e[27]=s("span",null,"Madrugada",-1)),e[28]||(e[28]=s("span",{class:"shift-time"},"00:00 - 06:00",-1))],2)])])]),s("div",Us,[s("button",{class:"primary-btn",onClick:ot,disabled:!Ke.value},[n(t(l),{icon:t(Bt)},null,8,["icon"]),e[29]||(e[29]=s("div",{class:"btn-text"},[s("span",{class:"btn-title"},"Iniciar Checklist"),s("span",{class:"btn-subtitle"},"Começar verificação de segurança")],-1)),n(t(l),{icon:t(Le)},null,8,["icon"])],8,Js)])])):g("",!0),i.value?(c(),h("div",Ks,[i.value.current_phase!=="completed"?(c(),k(t(F),{key:0,class:"phase-progress-card"},{default:u(()=>[n(t(L),null,{default:u(()=>[s("div",Ws,[s("h3",null,d(ke(i.value.current_phase)),1),s("div",Xs,[n(t(Me),{color:Ce(i.value.current_phase)},{default:u(()=>[n(t(l),{icon:we(i.value.current_phase)},null,8,["icon"]),n(t(Ve),null,{default:u(()=>[f(d(Qe(i.value.current_phase)),1)]),_:1})]),_:1},8,["color"])])]),s("div",Gs,[s("div",Qs,[(c(),h(Y,null,Z(Je,a=>s("div",{class:y(["step",{active:a===i.value.current_phase,completed:Ie(a),interrupted:i.value.is_interrupted}]),key:a},[s("div",Ys,[Ie(a)?(c(),k(t(l),{key:0,icon:t(z)},null,8,["icon"])):i.value.is_interrupted?(c(),k(t(l),{key:1,icon:t(_e)},null,8,["icon"])):(c(),h("span",Zs,d(Ye(a)),1))]),s("span",ea,d(Xe(a)),1)],2)),64))])]),s("div",ta,[n(t(At),{value:R.value/100,color:R.value===100?"success":"primary"},null,8,["value","color"]),s("p",null,d(Math.round(R.value))+"% concluído",1)])]),_:1})]),_:1})):g("",!0),i.value.current_phase!=="completed"?(c(),k(t(F),{key:1,class:"patient-summary-card"},{default:u(()=>[n(t(L),null,{default:u(()=>{var a;return[s("div",sa,[s("div",aa,[s("h4",null,d(b.value.full_name),1),s("p",null,d((a=oe.value)==null?void 0:a.name)+" • Turno "+d(i.value.shift),1)]),s("div",oa,[s("p",null,"Iniciado às "+d(ce(i.value.pre_dialysis_started_at)),1)])])]}),_:1})]),_:1})):g("",!0),!i.value.is_interrupted&&i.value.current_phase!=="completed"?(c(),h("div",na,[s("div",ia,[s("div",la,[n(t(l),{icon:we(i.value.current_phase)},null,8,["icon"])]),s("div",ra,[s("h3",null,d(ke(i.value.current_phase)),1),s("p",null,d(Ge(i.value.current_phase)),1)]),s("div",ca,[n(t(Me),{color:Ce(i.value.current_phase)},{default:u(()=>[f(d(Math.round(R.value))+"% ",1)]),_:1},8,["color"])])]),s("div",ua,[(c(!0),h(Y,null,Z(x(),a=>(c(),k(os,{key:a.key,title:a.label,description:a.description,value:G(a.key),observation:ue(a.key),"onUpdate:value":r=>vt(a.key,r),"onUpdate:observation":r=>mt(a.key,r)},null,8,["title","description","value","observation","onUpdate:value","onUpdate:observation"]))),128))]),s("div",da,[s("label",pa,[n(t(l),{icon:t(jt)},null,8,["icon"]),e[30]||(e[30]=f(" Observações Adicionais ",-1))]),Te(s("textarea",{"onUpdate:modelValue":e[5]||(e[5]=a=>m.value.observations=a),class:"observations-input",rows:"4",placeholder:"Digite observações sobre esta fase do checklist..."},null,512),[[Ne,m.value.observations]])]),s("button",{class:y(["primary-continue-btn",{disabled:!W.value}]),disabled:!W.value,onClick:nt},[n(t(l),{icon:t($)},null,8,["icon"]),s("div",ma,[s("span",ha,d(We.value?"Concluir Checklist":"Avançar para Próxima Fase"),1),s("span",_a,d(W.value?"Todos os itens verificados":"Complete todos os itens obrigatórios"),1)]),n(t(l),{icon:t(Le)},null,8,["icon"])],10,va),s("div",fa,[s("button",{class:"action-card warning",onClick:lt},[s("div",ga,[n(t(l),{icon:t(xt)},null,8,["icon"])]),e[31]||(e[31]=s("div",{class:"action-card-content"},[s("span",{class:"action-card-title"},"Pausar"),s("span",{class:"action-card-subtitle"},"Voltar depois")],-1))]),s("button",{class:"action-card danger",onClick:e[6]||(e[6]=a=>v.value=!0)},[s("div",ya,[n(t(l),{icon:t(ze)},null,8,["icon"])]),e[32]||(e[32]=s("div",{class:"action-card-content"},[s("span",{class:"action-card-title"},"Interromper"),s("span",{class:"action-card-subtitle"},"Cancelar processo")],-1))])])])):(c(),h("div",ba,[n(t(F),{class:"interrupted-card"},{default:u(()=>[n(t(L),null,{default:u(()=>[s("div",ka,[n(t(l),{icon:t(se),class:"interrupted-icon"},null,8,["icon"]),e[35]||(e[35]=s("h3",null,"Checklist Interrompido",-1)),s("p",null,"O checklist foi interrompido em "+d(ce(i.value.interrupted_at)),1),s("p",Ca,[e[33]||(e[33]=s("strong",null,"Motivo:",-1)),f(" "+d(i.value.interruption_reason),1)]),n(t(D),{expand:"block",color:"primary",onClick:Se,class:"return-button"},{default:u(()=>[n(t(l),{icon:t(Ft),slot:"start"},null,8,["icon"]),e[34]||(e[34]=f(" Retornar ao Dashboard ",-1))]),_:1})])]),_:1})]),_:1})])),i.value.current_phase==="completed"?(c(),h("div",wa,[n(t(F),{class:"completed-card"},{default:u(()=>[n(t(L),null,{default:u(()=>[s("div",Ia,[n(t(l),{icon:t($),class:"completed-icon"},null,8,["icon"]),e[37]||(e[37]=s("h3",null,"Checklist Concluído com Sucesso!",-1)),s("p",null,"Todas as fases foram completadas em "+d(ce(i.value.post_dialysis_completed_at)),1),n(t(D),{expand:"block",color:"success",onClick:Se,class:"return-button"},{default:u(()=>[n(t(l),{icon:t(z),slot:"start"},null,8,["icon"]),e[36]||(e[36]=f(" Finalizar e Retornar ",-1))]),_:1})])]),_:1})]),_:1})])):g("",!0)])):g("",!0)]),n(t(Ot),{"is-open":v.value,onWillDismiss:e[10]||(e[10]=a=>v.value=!1)},{default:u(()=>[n(t(Re),null,{default:u(()=>[n(t($e),null,{default:u(()=>[n(t(qe),null,{default:u(()=>[...e[38]||(e[38]=[f("Interromper Checklist",-1)])]),_:1}),n(t(De),{slot:"end"},{default:u(()=>[n(t(D),{onClick:e[7]||(e[7]=a=>v.value=!1)},{default:u(()=>[n(t(l),{icon:t(_e)},null,8,["icon"])]),_:1})]),_:1})]),_:1})]),_:1}),n(t(Be),null,{default:u(()=>[s("div",Pa,[s("div",Sa,[n(t(l),{icon:t(Lt),class:"warning-icon"},null,8,["icon"]),e[39]||(e[39]=s("h3",null,"Atenção!",-1)),e[40]||(e[40]=s("p",null,"Você está prestes a interromper o checklist de segurança. Esta ação deve ser usada apenas em casos de emergência ou intercorrências médicas.",-1))]),s("div",Aa,[n(t(Et),{fill:"outline",class:"patient-input"},{default:u(()=>[n(t(Ve),{position:"floating"},{default:u(()=>[...e[41]||(e[41]=[f("Motivo da Interrupção",-1)])]),_:1}),n(t(Tt),{modelValue:E.value,"onUpdate:modelValue":e[8]||(e[8]=a=>E.value=a),rows:4,placeholder:"Descreva o motivo da interrupção (obrigatório)",required:""},null,8,["modelValue"])]),_:1})]),s("div",Oa,[n(t(D),{expand:"block",fill:"outline",color:"medium",onClick:e[9]||(e[9]=a=>v.value=!1)},{default:u(()=>[...e[42]||(e[42]=[f(" Cancelar ",-1)])]),_:1}),n(t(D),{expand:"block",color:"danger",disabled:!E.value.trim(),onClick:it},{default:u(()=>[n(t(l),{icon:t(ze),slot:"start"},null,8,["icon"]),e[43]||(e[43]=f(" Confirmar Interrupção ",-1))]),_:1},8,["disabled"])])])]),_:1})]),_:1},8,["is-open"])]),_:1},512)]),_:1}))}}),qa=Ue(Ea,[["__scopeId","data-v-c8a8c680"]]);export{qa as default};
