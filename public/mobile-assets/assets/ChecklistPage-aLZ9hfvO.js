import{d as He,n as h,q as c,t,J as g,G as d,K as y,v as n,y as a,B as k,H as f,r as _,c as ve,b as fa,o as ga,M as ya,e as ba,x as u,u as ka,w as Te,D as Ee,F as Y,L as Z,z as Ca}from"./vendor-BAY9JQbk.js";import{g as l,A as wa,e as Ia,t as I,o as qe,q as Ne,x as Pa,p as Re,r as $e,B as z,C as F,k as N,f as Sa,v as Ve,w as Me,D as Aa,E as Oa,i as Be,F as Da,G as Ta,n as ee,l as me}from"./ionic-B_Arm38Z.js";import{z as q,C as L,D as fe,E as xe,F as te,_ as Ue,G as Ea,t as je,H as he,I as qa,J as _e,K as ze,m as Na,h as Ra,L as $a,j as Va,M as Ma,g as Ba,N as Fe,O as xa,f as ja,P as Le,Q as za,R as Fa,u as La}from"./_plugin-vue_export-helper-BgNw2jzN.js";import{C as Ha,A as ae}from"./main-BdbvssAv.js";const Ua={class:"item-card-header"},Ja={class:"header-content"},Ka={class:"item-card-title"},Wa={key:0,class:"item-card-description"},Xa={key:0,class:"header-badge"},Ga={class:"status-actions"},Qa={class:"action-status-icon success"},Ya={class:"action-status-icon danger"},Za={class:"action-status-icon neutral"},et={key:0,class:"observation-card"},at={class:"observation-label"},tt=["value"],st=He({__name:"ChecklistItem",props:{title:{},description:{default:""},value:{default:null},observation:{default:""},required:{type:Boolean,default:!1}},emits:["update:value","update:observation"],setup(ge,{emit:V}){const H=ge,P=V,M=p=>{H.value===p?(P("update:value",null),P("update:observation","")):(P("update:value",p),p!=="NC"&&P("update:observation",""))},R=p=>{P("update:observation",p)},U=p=>{switch(p){case"C":return q;case"NC":return fe;case"NA":return xe;default:return q}};return(p,v)=>(c(),h("div",{class:y(["checklist-item-card",{"has-value":p.value!==null,"is-conforme":p.value==="C","is-nao-conforme":p.value==="NC","is-nao-aplica":p.value==="NA"}])},[t("div",Ua,[t("div",Ja,[t("h3",Ka,d(p.title),1),p.description?(c(),h("p",Wa,d(p.description),1)):g("",!0)]),p.value?(c(),h("div",Xa,[t("div",{class:y(["status-badge",p.value.toLowerCase()])},[n(a(l),{icon:U(p.value)},null,8,["icon"])],2)])):g("",!0)]),t("div",Ga,[t("button",{class:y(["action-status-btn conforme",{selected:p.value==="C"}]),onClick:v[0]||(v[0]=D=>M("C")),type:"button"},[t("div",Qa,[n(a(l),{icon:a(q)},null,8,["icon"])]),v[4]||(v[4]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Conforme"),t("span",{class:"action-status-hint"},"Tudo OK")],-1)),p.value==="C"?(c(),k(a(l),{key:0,icon:a(L),class:"selected-check"},null,8,["icon"])):g("",!0)],2),t("button",{class:y(["action-status-btn nao-conforme",{selected:p.value==="NC"}]),onClick:v[1]||(v[1]=D=>M("NC")),type:"button"},[t("div",Ya,[n(a(l),{icon:a(fe)},null,8,["icon"])]),v[5]||(v[5]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Não Conforme"),t("span",{class:"action-status-hint"},"Problema")],-1)),p.value==="NC"?(c(),k(a(l),{key:0,icon:a(L),class:"selected-check"},null,8,["icon"])):g("",!0)],2),t("button",{class:y(["action-status-btn nao-aplica",{selected:p.value==="NA"}]),onClick:v[2]||(v[2]=D=>M("NA")),type:"button"},[t("div",Za,[n(a(l),{icon:a(xe)},null,8,["icon"])]),v[6]||(v[6]=t("div",{class:"action-status-content"},[t("span",{class:"action-status-label"},"Não Aplica"),t("span",{class:"action-status-hint"},"N/A")],-1)),p.value==="NA"?(c(),k(a(l),{key:0,icon:a(L),class:"selected-check"},null,8,["icon"])):g("",!0)],2)]),p.value==="NC"?(c(),h("div",et,[t("label",at,[n(a(l),{icon:a(te)},null,8,["icon"]),v[7]||(v[7]=f(" Descreva o Problema * ",-1))]),t("textarea",{value:p.observation,onInput:v[3]||(v[3]=D=>R(D.target.value)),class:"observation-textarea",rows:"3",placeholder:"Ex: Equipamento apresentando ruído anormal...",required:""},null,40,tt)])):g("",!0)],2))}}),ot=Ue(st,[["__scopeId","data-v-224039b4"]]),nt={class:"checklist-container"},it={class:"time-display"},lt={class:"current-date"},rt={class:"current-time"},ct={key:0,class:"section"},ut={class:"section-title"},dt={class:"search-card"},pt={class:"search-input-wrapper"},vt={key:0,class:"patient-selected"},mt={class:"action-btn selected"},ht={class:"action-icon success"},_t={class:"action-content"},ft={class:"action-title"},gt={class:"action-subtitle"},yt={key:1,class:"search-results"},bt=["onClick"],kt={class:"action-icon primary"},Ct={class:"action-content"},wt={class:"action-title"},It={class:"action-subtitle"},Pt={key:2,class:"no-results"},St={key:3,class:"search-loading"},At={key:1,class:"section"},Ot={class:"section-title"},Dt={class:"selection-card"},Tt={class:"availability-icon"},Et={class:"availability-info"},qt={class:"availability-label"},Nt={class:"availability-count"},Rt={class:"form-group"},$t={class:"input-label"},Vt={class:"machine-grid"},Mt=["onClick"],Bt={class:"machine-icon"},xt={class:"machine-info"},jt={class:"machine-name"},zt={key:0,class:"machine-check"},Ft={class:"form-group"},Lt={class:"input-label"},Ht={class:"shift-selector"},Ut={class:"primary-action"},Jt=["disabled"],Kt={key:2},Wt={class:"phase-header"},Xt={class:"phase-time"},Gt={class:"phase-progress"},Qt={class:"progress-steps"},Yt={class:"step-circle"},Zt={key:2},es={class:"step-label"},as={class:"phase-completion"},ts={class:"patient-summary"},ss={class:"patient-details"},os={class:"session-time"},ns={key:2,class:"phase-section"},is={class:"phase-header-card"},ls={class:"phase-header-icon"},rs={class:"phase-header-content"},cs={class:"phase-header-badge"},us={class:"checklist-items-grid"},ds={class:"observations-card"},ps={class:"card-label"},vs=["disabled"],ms={class:"btn-text"},hs={class:"btn-title"},_s={class:"btn-subtitle"},fs={class:"dashboard-actions"},gs={class:"action-card-icon warning"},ys={class:"action-card-icon danger"},bs={key:3,class:"interrupted-section"},ks={class:"interrupted-content"},Cs={class:"interruption-reason"},ws={key:4,class:"completed-section"},Is={class:"completed-content"},Ps={class:"interrupt-modal-content"},Ss={class:"warning-section"},As={class:"form-group"},Os={class:"modal-buttons"},Ds=He({__name:"ChecklistPage",setup(ge){const V=Ca(),H=ka(),P=Ha.getInstance();P.getSearchPatientUseCase();const M=P.getMachineRepository(),R=_(),U=_(""),p=_(""),v=_(!1),D=_(""),$=_(0),B=_("machine-patient"),C=_(""),S=_([]),x=_(!1),b=_(null);let se;const oe=_(null),ne=_([]),ie=_(null),ye=_(!1),i=_(null),A=_(null),be=_(!1),m=_({machine_id:0,shift:"matutino",observations:"",machine_disinfected:!1,capillary_lines_identified:!1,reagent_test_performed:!1,pressure_sensors_verified:!1,air_bubble_detector_verified:!1,patient_identification_confirmed:!1,vascular_access_evaluated:!1,av_fistula_arm_washed:!1,patient_weighed:!1,vital_signs_checked:!1,medications_reviewed:!1,dialyzer_membrane_checked:!1,equipment_functioning_verified:!1,dialysis_parameters_verified:!1,heparin_double_checked:!1,antisepsis_performed:!1,vascular_access_monitored:!1,vital_signs_monitored_during:!1,patient_comfort_assessed:!1,fluid_balance_monitored:!1,alarms_responded:!1,session_completed_safely:!1,vascular_access_secured:!1,patient_vital_signs_stable:!1,complications_assessed:!1,equipment_cleaned:!1}),J=_({}),K=_({}),Je=["pre_dialysis","during_session","post_dialysis"];let le;const Ke=ve(()=>b.value&&m.value.machine_id&&m.value.shift),W=ve(()=>i.value?j().every(s=>{const r=G(s.key);if(r===null)return!1;if(r==="C"||r==="NA")return!0;if(r==="NC"){const w=ue(s.key);return w&&w.trim().length>0}return!1}):!1),We=ve(()=>i.value?i.value.current_phase==="post_dialysis":!1),ke=o=>({pre_dialysis:"Pré-Diálise",during_session:"Durante a Sessão",post_dialysis:"Pós-Diálise",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Xe=o=>({pre_dialysis:"Pré",during_session:"Durante",post_dialysis:"Pós"})[o]||o,Ge=o=>({pre_dialysis:"Verificações de segurança antes de iniciar a sessão de diálise",during_session:"Monitoramento contínuo durante o procedimento",post_dialysis:"Finalização segura da sessão e limpeza dos equipamentos"})[o]||"",Ce=o=>({pre_dialysis:"warning",during_session:"primary",post_dialysis:"secondary",completed:"success",interrupted:"danger"})[o]||"medium",we=o=>q,Qe=o=>({pre_dialysis:"Preparando",during_session:"Em Andamento",post_dialysis:"Finalizando",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Ye=o=>({pre_dialysis:"1",during_session:"2",post_dialysis:"3"})[o]||"",Ie=o=>{if(!i.value)return!1;switch(o){case"pre_dialysis":return i.value.pre_dialysis_completed_at!==null;case"during_session":return i.value.during_session_completed_at!==null;case"post_dialysis":return i.value.post_dialysis_completed_at!==null;default:return!1}},j=()=>{var e;return{pre_dialysis:[{key:"machine_disinfected",label:"1. Máquina Desinfetada",description:"Verificar se a máquina foi devidamente desinfetada"},{key:"capillary_lines_identified",label:"2. Linhas e Capilar Identificados (quando há reuso)",description:"Identificar e verificar corretamente as linhas capilares"},{key:"reagent_test_performed",label:"3. Teste de Reagente Realizado (pré/pós) (quando há reuso)",description:"Realizar teste de reagente antes e após o procedimento"},{key:"pressure_sensors_verified",label:"4. Sensores de Pressão Verificados",description:"Verificar sensores: pressão venosa, arterial e transmembrana"},{key:"air_bubble_detector_verified",label:"5. Detector de Bolhas Funcional e Alinhado",description:"Verificar detector de bolhas de ar e alinhamento à câmara venosa"},{key:"patient_identification_confirmed",label:"6. Identificação do Paciente Conferida",description:"Confirmar: crachá, pulseira, cadeira e confirmação verbal"},{key:"vascular_access_evaluated",label:"10. Acesso Vascular Verificado",description:"Verificar: curativo, sinais de infecção, integridade, heparina no lúmen"},{key:"av_fistula_arm_washed",label:"7. Lavagem do Braço da Fístula (quando aplicável)",description:"Realizar lavagem do braço da fístula arteriovenosa"},{key:"patient_weighed",label:"8. Pesagem do Paciente Realizada",description:"Pesar o paciente antes da sessão"},{key:"vital_signs_checked",label:"9. Sinais Vitais Conferidos",description:"Verificar sinais vitais conforme protocolo"},{key:"medications_reviewed",label:"11. Prescrição Médica Conferida",description:"Conferir parâmetros da máquina e medicações"},{key:"dialyzer_membrane_checked",label:"Membrana do Dialisador Verificada",description:"Verificar integridade da membrana do dialisador"},{key:"equipment_functioning_verified",label:"Funcionamento dos Equipamentos",description:"Testar funcionamento de todos os equipamentos"}],during_session:[{key:"dialysis_parameters_verified",label:"Parâmetros de Diálise Verificados",description:"Confirmar e ajustar parâmetros de diálise"},{key:"heparin_double_checked",label:"1. Dupla Checagem de Heparina",description:"Realizar dupla checagem da heparina antes de administrar"},{key:"antisepsis_performed",label:"2. Antissepsia Realizada",description:"Antissepsia da pele ou cateter antes da punção/conexão"},{key:"vascular_access_monitored",label:"3. Acesso Vascular Monitorado",description:"Monitorar fluxo sanguíneo, fixação, conexão, sangramento"},{key:"vital_signs_monitored_during",label:"4. Sinais Vitais Durante Sessão",description:"Verificar sinais vitais conforme quadro clínico e protocolo"},{key:"patient_comfort_assessed",label:"Conforto do Paciente Avaliado",description:"Verificar conforto e bem-estar do paciente"},{key:"fluid_balance_monitored",label:"Balanço Hídrico Monitorado",description:"Acompanhar remoção e balanço de fluidos"},{key:"alarms_responded",label:"Resposta a Alarmes",description:"Verificar e responder adequadamente aos alarmes"}],post_dialysis:[{key:"session_completed_safely",label:"1. Desconexão Segura Realizada",description:"Desconexão sem perda de sangue e sem risco de embolia"},{key:"vascular_access_secured",label:"2. Hemostasia e Curativo do Acesso",description:"Realizar hemostasia e curativo conforme protocolo"},{key:"patient_vital_signs_stable",label:"3. Sinais Vitais Conferidos",description:"Verificar sinais vitais conforme protocolo ou prescrição"},{key:"complications_assessed",label:"4. Paciente Avaliado para Complicações",description:"Avaliar: sangramento, instabilidade hemodinâmica, risco de queda"},{key:"equipment_cleaned",label:"5. Materiais Descartados e Máquina Programada",description:"Descartar materiais corretamente e programar desinfecção"}]}[(e=i.value)==null?void 0:e.current_phase]||[]},Pe=()=>{const o=new Date;U.value=o.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit",second:"2-digit"}),p.value=o.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},Ze=()=>{if(se&&clearTimeout(se),C.value.length<3){S.value=[];return}x.value=!0,se=setTimeout(async()=>{await ea()},500)},ea=async()=>{if(C.value.length<3){S.value=[],x.value=!1;return}try{const e=await P.getPatientRepository().quickSearch(C.value,10);S.value=e}catch(o){console.error("Erro ao buscar pacientes:",o),S.value=[]}finally{x.value=!1}},aa=o=>{b.value=o,C.value=o.full_name,S.value=[]},ta=()=>{b.value=null,C.value="",S.value=[]},sa=()=>{localStorage.setItem("patient_search_query",C.value),V.push("/patients/new")},oa=async()=>{var s,r,w;if(ye.value){B.value="pre-dialysis";return}if(!(await ca()).canCreate)return;const e=await ee.create({message:"Iniciando checklist...",spinner:"crescent"});await e.present();try{const T=await fetch("/api/checklists",{method:"POST",headers:ae.getAuthHeaders(),body:JSON.stringify({patient_id:(s=b.value)==null?void 0:s.id,machine_id:m.value.machine_id,shift:m.value.shift,observations:m.value.observations})}),O=await T.json();if(T.ok&&O.success){i.value=O.checklist,oe.value=ne.value.find(_a=>_a.id===m.value.machine_id)||null,X();const E=O.resumed?"Checklist existente carregado!":"Novo checklist iniciado com sucesso!";await(await I.create({message:E,duration:2e3,color:"success",position:"top"})).present()}else{const E=O.message||((w=(r=O.errors)==null?void 0:r.machine_id)==null?void 0:w[0])||"Erro ao iniciar checklist";throw new Error(E)}}catch(T){await(await I.create({message:T.message||"Erro ao iniciar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await e.dismiss()}},na=async()=>{if(!W.value)return;const o=await ee.create({message:"Avançando para próxima fase...",spinner:"crescent"});await o.present();try{await re();const s=await(await fetch("/api/checklists/".concat(i.value.id,"/advance"),{method:"POST",headers:{"Content-Type":"application/json",...ae.getAuthHeaders()}})).json();if(s.success)i.value=s.checklist,X(),R.value&&R.value.$el&&await R.value.$el.scrollToTop(400),await(await I.create({message:s.message,duration:2e3,color:"success",position:"top"})).present();else throw new Error(s.message||"Erro ao avançar fase")}catch(e){await(await I.create({message:e.message||"Erro ao avançar fase",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},re=async()=>{if(i.value)try{const o={},e={};j().forEach(T=>{const O=G(T.key),E=ue(T.key);let Q=!1;(O==="C"||O==="NA"||O==="NC"&&E&&E.trim().length>0)&&(Q=!0),o[T.key]=Q,E&&E.trim().length>0&&(e[T.key]=E)});const r=await fetch("/api/checklists/".concat(i.value.id,"/phase"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))},body:JSON.stringify({phase_data:o,observations:m.value.observations,item_observations:e})});if(!r.ok)throw new Error("Erro ao salvar dados");const w=await r.json();w.success&&($.value=w.phase_completion)}catch(o){console.error("Erro no updatePhaseData:",o)}},ia=async()=>{const o=await ee.create({message:"Interrompendo checklist...",spinner:"crescent"});await o.present();try{const s=await(await fetch("/api/checklists/".concat(i.value.id,"/interrupt"),{method:"POST",headers:ae.getAuthHeaders(),body:JSON.stringify({reason:D.value})})).json();if(s.success)i.value=s.checklist,v.value=!1,await(await I.create({message:"Checklist interrompido com sucesso.",duration:3e3,color:"warning",position:"top"})).present();else throw new Error(s.message||"Erro ao interromper checklist")}catch(e){await(await I.create({message:e.message||"Erro ao interromper checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},Se=()=>{V.replace("/dashboard")},la=async()=>{var e;if(!i.value)return;const o=await ee.create({message:"Pausando checklist..."});await o.present();try{const r=await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((e=document.querySelector('meta[name="csrf-token"]'))==null?void 0:e.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"manual"})})).json();if(r.success)await(await I.create({message:"Checklist pausado com sucesso. Você pode retomá-lo a qualquer momento.",duration:3e3,color:"success",position:"top"})).present(),i.value.paused_at=r.checklist.paused_at,V.replace("/dashboard");else throw new Error(r.message||"Erro ao pausar checklist")}catch(s){console.error("Erro ao pausar checklist:",s),await(await I.create({message:"Erro ao pausar checklist. Tente novamente.",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},X=()=>{const o=j(),e=o.filter(s=>G(s.key)!==null).length;$.value=o.length>0?e/o.length*100:0},ra=async()=>{try{ne.value=await M.getAvailable(),await Ae()}catch(o){console.error("Error loading machines:",o)}},Ae=async()=>{try{be.value=!0;const o=await fetch("/api/machines/availability",{headers:ae.getAuthHeaders()});if(o.ok){const e=await o.json();A.value=e.availability}}catch(o){console.error("Error fetching machine availability:",o)}finally{be.value=!1}},ca=async()=>{if(await Ae(),!A.value)return{canCreate:!0};const{available:o,overall_status:e,message:s}=A.value;if(o===0)return await(await me.create({header:"Máquinas Indisponíveis",message:s||"Não há máquinas disponíveis no momento. Por favor, aguarde até que uma máquina fique livre.",buttons:["OK"]})).present(),{canCreate:!1};if(e==="warning"||e==="alert"){const r=await me.create({header:"Atenção",message:"".concat(s,". Apenas ").concat(o," máquina(s) disponível(is). Deseja continuar?"),buttons:[{text:"Cancelar",role:"cancel"},{text:"Continuar",role:"confirm"}]});await r.present();const{role:w}=await r.onDidDismiss();return{canCreate:w==="confirm"}}return{canCreate:!0}},ua=async()=>{const o=H.params.id;if(o&&o!=="new")try{const e=await fetch("/api/checklists/".concat(o),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}});if(e.ok){const s=await e.json();switch(i.value=s,ie.value=s.id,ye.value=!0,oe.value=s.machine,b.value=s.patient,s.current_phase){case"pre_dialysis":B.value="pre-dialysis";break;case"during_session":B.value="during-session";break;case"post_dialysis":B.value="post-dialysis";break;default:B.value="pre-dialysis"}s.paused_at&&!s.resumed_at&&await da(),pa(s),X(),console.log("Checklist carregado:",s)}}catch(e){console.error("Erro ao carregar checklist:",e)}},da=async()=>{if(ie.value)try{(await fetch("/api/checklists/".concat(ie.value,"/resume"),{method:"POST",headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}})).ok&&console.log("Checklist retomado com sucesso")}catch(o){console.error("Erro ao retomar checklist:",o)}},pa=o=>{Object.keys(m.value).forEach(s=>{o[s]!==void 0&&(m.value[s]=o[s])}),o.item_observations&&(K.value={...o.item_observations}),j().forEach(s=>{const r=o[s.key];r!==void 0&&(r===!0?J.value[s.key]="C":r===!1&&K.value[s.key]&&(J.value[s.key]="NC"))})},Oe=o=>new Date(o).toLocaleDateString("pt-BR"),ce=o=>new Date(o).toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"}),G=o=>J.value[o]||null,va=(o,e)=>{J.value[o]=e,m.value[o]=e==="C",X(),i.value&&re()},ue=o=>K.value[o]||"";let de=null;const ma=(o,e)=>{K.value[o]=e,de&&clearTimeout(de),de=setTimeout(()=>{i.value&&re()},1e3)},ha=async o=>{try{console.log("🔄 Carregando paciente ID:",o);const s=await P.getPatientRepository().getById(o);s&&(console.log("✅ Paciente carregado:",s),b.value=s,C.value=s.full_name,S.value=[],await(await I.create({message:"Paciente ".concat(s.full_name," selecionado!"),duration:2e3,color:"success",position:"top"})).present())}catch(e){console.error("❌ Erro ao carregar paciente:",e),await(await I.create({message:"Erro ao carregar paciente cadastrado",duration:3e3,color:"danger",position:"top"})).present()}},pe=()=>{const o=localStorage.getItem("return_to_checklist"),e=localStorage.getItem("new_patient_id");console.log("🔍 Verificando retorno - return_to_checklist:",o,"new_patient_id:",e),o==="true"&&e&&(console.log("🎯 Detectado retorno de cadastro, carregando paciente..."),ha(parseInt(e)),localStorage.removeItem("return_to_checklist"),localStorage.removeItem("new_patient_id"),localStorage.removeItem("patient_search_query"))};wa(()=>{console.log("🚀 onIonViewWillEnter - Página sendo exibida"),pe()}),fa(()=>H.path,o=>{console.log("🔄 Rota mudou para:",o),o==="/checklist/new"&&(console.log("📍 Detectado retorno para /checklist/new via watch"),setTimeout(pe,100))}),ga(()=>{console.log("🏁 onMounted - Página montada"),ra(),ua(),Pe(),le=setInterval(Pe,1e3),pe()}),ya(async(o,e)=>{if(!i.value||i.value.paused_at||i.value.current_phase==="completed"||i.value.is_interrupted)return!0;const s=await me.create({header:"Pausar Checklist?",message:"Você está saindo do checklist ativo. Deseja pausá-lo para continuar depois?",buttons:[{text:"Cancelar",role:"cancel",handler:()=>!1},{text:"Sair sem Pausar",role:"destructive",handler:async()=>!0},{text:"Pausar e Sair",handler:async()=>(await De(),!0)}]});await s.present();const{role:r}=await s.onDidDismiss();return r==="cancel"||!r?!1:(r==="handler"&&await De(),!0)});const De=async()=>{var o;if(i.value)try{(await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"auto"})})).json()).success&&await(await I.create({message:"Checklist pausado automaticamente.",duration:2e3,color:"warning",position:"top"})).present()}catch(e){console.error("Erro ao pausar checklist automaticamente:",e)}};return ba(()=>{le&&clearInterval(le)}),(o,e)=>(c(),k(a(Ia),null,{default:u(()=>[n(a($e),{translucent:!0},{default:u(()=>[n(a(qe),{color:"primary"},{default:u(()=>[n(a(Ne),{slot:"start"},{default:u(()=>[n(a(Pa),{"default-href":"/dashboard"})]),_:1}),n(a(Re),null,{default:u(()=>[...e[11]||(e[11]=[f("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),n(a(Be),{ref_key:"contentRef",ref:R,fullscreen:!0},{default:u(()=>[t("div",nt,[n(a(z),{class:"time-header-card"},{default:u(()=>[n(a(F),null,{default:u(()=>[t("div",it,[t("div",lt,[n(a(l),{icon:a(Ea),class:"date-icon"},null,8,["icon"]),f(" "+d(p.value),1)]),t("div",rt,[n(a(l),{icon:a(je),class:"time-icon"},null,8,["icon"]),f(" "+d(U.value),1)])])]),_:1})]),_:1}),i.value?g("",!0):(c(),h("div",ct,[t("h2",ut,[n(a(l),{icon:a(he)},null,8,["icon"]),e[12]||(e[12]=f(" Etapa 1: Buscar Paciente ",-1))]),t("div",dt,[t("div",pt,[n(a(l),{icon:a(qa),class:"search-icon"},null,8,["icon"]),Te(t("input",{"onUpdate:modelValue":e[0]||(e[0]=s=>C.value=s),type:"text",placeholder:"Digite o nome do paciente...",class:"search-input",onInput:Ze},null,544),[[Ee,C.value]])]),b.value?(c(),h("div",vt,[t("div",mt,[t("div",ht,[n(a(l),{icon:a(q)},null,8,["icon"])]),t("div",_t,[t("span",ft,d(b.value.full_name),1),t("span",gt,d(Oe(b.value.birth_date))+" • "+d(b.value.age)+" anos ",1)]),n(a(N),{fill:"clear",onClick:ta},{default:u(()=>[n(a(l),{icon:a(_e),slot:"icon-only"},null,8,["icon"])]),_:1})])])):S.value.length>0&&C.value.length>0?(c(),h("div",yt,[(c(!0),h(Y,null,Z(S.value,s=>(c(),h("div",{key:s.id,class:"action-btn",onClick:r=>aa(s)},[t("div",kt,[n(a(l),{icon:a(he)},null,8,["icon"])]),t("div",Ct,[t("span",wt,d(s.full_name),1),t("span",It,d(Oe(s.birth_date))+" • "+d(s.age)+" anos ",1)]),n(a(l),{icon:a(La),class:"chevron"},null,8,["icon"])],8,bt))),128))])):C.value.length>2&&S.value.length===0&&!x.value?(c(),h("div",Pt,[n(a(l),{icon:a(te),class:"no-results-icon"},null,8,["icon"]),e[14]||(e[14]=t("h3",null,"Paciente não encontrado",-1)),e[15]||(e[15]=t("p",null,"Não encontramos nenhum paciente com esse nome.",-1)),n(a(N),{expand:"block",onClick:sa,class:"register-btn"},{default:u(()=>[n(a(l),{icon:a(he),slot:"start"},null,8,["icon"]),e[13]||(e[13]=f(" Cadastrar Novo Paciente ",-1))]),_:1})])):g("",!0),x.value?(c(),h("div",St,[n(a(Sa),{name:"crescent"}),e[16]||(e[16]=t("p",null,"Buscando...",-1))])):g("",!0)])])),b.value&&!i.value?(c(),h("div",At,[t("h2",Ot,[n(a(l),{icon:a(ze)},null,8,["icon"]),e[17]||(e[17]=f(" Etapa 2: Máquina e Turno ",-1))]),t("div",Dt,[A.value?(c(),h("div",{key:0,class:y(["availability-badge",A.value.overall_status])},[t("div",Tt,[A.value.overall_status==="good"?(c(),k(a(l),{key:0,icon:a(q)},null,8,["icon"])):A.value.overall_status==="critical"?(c(),k(a(l),{key:1,icon:a(fe)},null,8,["icon"])):(c(),k(a(l),{key:2,icon:a(te)},null,8,["icon"]))]),t("div",Et,[t("span",qt,d(A.value.message),1),t("span",Nt,d(A.value.available)+" de "+d(A.value.total)+" disponíveis",1)])],2)):g("",!0),t("div",Rt,[t("label",$t,[n(a(l),{icon:a(Na)},null,8,["icon"]),e[18]||(e[18]=f(" Selecione a Máquina ",-1))]),t("div",Vt,[(c(!0),h(Y,null,Z(ne.value,s=>(c(),h("button",{key:s.id,type:"button",class:y(["machine-card",{selected:m.value.machine_id===s.id}]),onClick:r=>m.value.machine_id=s.id},[t("div",Bt,[n(a(l),{icon:a(ze)},null,8,["icon"])]),t("div",xt,[t("span",jt,d(s.name),1),e[19]||(e[19]=t("span",{class:"machine-status"},"Disponível",-1))]),m.value.machine_id===s.id?(c(),h("div",zt,[n(a(l),{icon:a(q)},null,8,["icon"])])):g("",!0)],10,Mt))),128))])]),t("div",Ft,[t("label",Lt,[n(a(l),{icon:a(je)},null,8,["icon"]),e[20]||(e[20]=f(" Selecione o Turno ",-1))]),t("div",Ht,[t("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="matutino"}]),onClick:e[1]||(e[1]=s=>m.value.shift="matutino")},[n(a(l),{icon:a(Ra)},null,8,["icon"]),e[21]||(e[21]=t("span",null,"Matutino",-1)),e[22]||(e[22]=t("span",{class:"shift-time"},"06:00 - 12:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="vespertino"}]),onClick:e[2]||(e[2]=s=>m.value.shift="vespertino")},[n(a(l),{icon:a($a)},null,8,["icon"]),e[23]||(e[23]=t("span",null,"Vespertino",-1)),e[24]||(e[24]=t("span",{class:"shift-time"},"12:00 - 18:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="noturno"}]),onClick:e[3]||(e[3]=s=>m.value.shift="noturno")},[n(a(l),{icon:a(Va)},null,8,["icon"]),e[25]||(e[25]=t("span",null,"Noturno",-1)),e[26]||(e[26]=t("span",{class:"shift-time"},"18:00 - 00:00",-1))],2),t("button",{type:"button",class:y(["shift-btn",{active:m.value.shift==="madrugada"}]),onClick:e[4]||(e[4]=s=>m.value.shift="madrugada")},[n(a(l),{icon:a(Ma)},null,8,["icon"]),e[27]||(e[27]=t("span",null,"Madrugada",-1)),e[28]||(e[28]=t("span",{class:"shift-time"},"00:00 - 06:00",-1))],2)])])]),t("div",Ut,[t("button",{class:"primary-btn",onClick:oa,disabled:!Ke.value},[n(a(l),{icon:a(Ba)},null,8,["icon"]),e[29]||(e[29]=t("div",{class:"btn-text"},[t("span",{class:"btn-title"},"Iniciar Checklist"),t("span",{class:"btn-subtitle"},"Começar verificação de segurança")],-1)),n(a(l),{icon:a(Fe)},null,8,["icon"])],8,Jt)])])):g("",!0),i.value?(c(),h("div",Kt,[i.value.current_phase!=="completed"?(c(),k(a(z),{key:0,class:"phase-progress-card"},{default:u(()=>[n(a(F),null,{default:u(()=>[t("div",Wt,[t("h3",null,d(ke(i.value.current_phase)),1),t("div",Xt,[n(a(Ve),{color:Ce(i.value.current_phase)},{default:u(()=>[n(a(l),{icon:we(i.value.current_phase)},null,8,["icon"]),n(a(Me),null,{default:u(()=>[f(d(Qe(i.value.current_phase)),1)]),_:1})]),_:1},8,["color"])])]),t("div",Gt,[t("div",Qt,[(c(),h(Y,null,Z(Je,s=>t("div",{class:y(["step",{active:s===i.value.current_phase,completed:Ie(s),interrupted:i.value.is_interrupted}]),key:s},[t("div",Yt,[Ie(s)?(c(),k(a(l),{key:0,icon:a(L)},null,8,["icon"])):i.value.is_interrupted?(c(),k(a(l),{key:1,icon:a(_e)},null,8,["icon"])):(c(),h("span",Zt,d(Ye(s)),1))]),t("span",es,d(Xe(s)),1)],2)),64))])]),t("div",as,[n(a(Aa),{value:$.value/100,color:$.value===100?"success":"primary"},null,8,["value","color"]),t("p",null,d(Math.round($.value))+"% concluído",1)])]),_:1})]),_:1})):g("",!0),i.value.current_phase!=="completed"?(c(),k(a(z),{key:1,class:"patient-summary-card"},{default:u(()=>[n(a(F),null,{default:u(()=>{var s;return[t("div",ts,[t("div",ss,[t("h4",null,d(b.value.full_name),1),t("p",null,d((s=oe.value)==null?void 0:s.name)+" • Turno "+d(i.value.shift),1)]),t("div",os,[t("p",null,"Iniciado às "+d(ce(i.value.pre_dialysis_started_at)),1)])])]}),_:1})]),_:1})):g("",!0),!i.value.is_interrupted&&i.value.current_phase!=="completed"?(c(),h("div",ns,[t("div",is,[t("div",ls,[n(a(l),{icon:we(i.value.current_phase)},null,8,["icon"])]),t("div",rs,[t("h3",null,d(ke(i.value.current_phase)),1),t("p",null,d(Ge(i.value.current_phase)),1)]),t("div",cs,[n(a(Ve),{color:Ce(i.value.current_phase)},{default:u(()=>[f(d(Math.round($.value))+"% ",1)]),_:1},8,["color"])])]),t("div",us,[(c(!0),h(Y,null,Z(j(),s=>(c(),k(ot,{key:s.key,title:s.label,description:s.description,value:G(s.key),observation:ue(s.key),"onUpdate:value":r=>va(s.key,r),"onUpdate:observation":r=>ma(s.key,r)},null,8,["title","description","value","observation","onUpdate:value","onUpdate:observation"]))),128))]),t("div",ds,[t("label",ps,[n(a(l),{icon:a(xa)},null,8,["icon"]),e[30]||(e[30]=f(" Observações Adicionais ",-1))]),Te(t("textarea",{"onUpdate:modelValue":e[5]||(e[5]=s=>m.value.observations=s),class:"observations-input",rows:"4",placeholder:"Digite observações sobre esta fase do checklist..."},null,512),[[Ee,m.value.observations]])]),t("button",{class:y(["primary-continue-btn",{disabled:!W.value}]),disabled:!W.value,onClick:na},[n(a(l),{icon:a(q)},null,8,["icon"]),t("div",ms,[t("span",hs,d(We.value?"Concluir Checklist":"Avançar para Próxima Fase"),1),t("span",_s,d(W.value?"Todos os itens verificados":"Complete todos os itens obrigatórios"),1)]),n(a(l),{icon:a(Fe)},null,8,["icon"])],10,vs),t("div",fs,[t("button",{class:"action-card warning",onClick:la},[t("div",gs,[n(a(l),{icon:a(ja)},null,8,["icon"])]),e[31]||(e[31]=t("div",{class:"action-card-content"},[t("span",{class:"action-card-title"},"Pausar"),t("span",{class:"action-card-subtitle"},"Voltar depois")],-1))]),t("button",{class:"action-card danger",onClick:e[6]||(e[6]=s=>v.value=!0)},[t("div",ys,[n(a(l),{icon:a(Le)},null,8,["icon"])]),e[32]||(e[32]=t("div",{class:"action-card-content"},[t("span",{class:"action-card-title"},"Interromper"),t("span",{class:"action-card-subtitle"},"Cancelar processo")],-1))])])])):i.value.is_interrupted?(c(),h("div",bs,[n(a(z),{class:"interrupted-card"},{default:u(()=>[n(a(F),null,{default:u(()=>[t("div",ks,[n(a(l),{icon:a(te),class:"interrupted-icon"},null,8,["icon"]),e[35]||(e[35]=t("h3",null,"Checklist Interrompido",-1)),t("p",null,"O checklist foi interrompido em "+d(ce(i.value.interrupted_at)),1),t("p",Cs,[e[33]||(e[33]=t("strong",null,"Motivo:",-1)),f(" "+d(i.value.interruption_reason),1)]),n(a(N),{expand:"block",color:"primary",onClick:Se,class:"return-button"},{default:u(()=>[n(a(l),{icon:a(za),slot:"start"},null,8,["icon"]),e[34]||(e[34]=f(" Retornar ao Dashboard ",-1))]),_:1})])]),_:1})]),_:1})])):g("",!0),i.value.current_phase==="completed"?(c(),h("div",ws,[n(a(z),{class:"completed-card"},{default:u(()=>[n(a(F),null,{default:u(()=>[t("div",Is,[n(a(l),{icon:a(q),class:"completed-icon"},null,8,["icon"]),e[37]||(e[37]=t("h3",null,"Checklist Concluído com Sucesso!",-1)),t("p",null,"Todas as fases foram completadas em "+d(ce(i.value.post_dialysis_completed_at)),1),n(a(N),{expand:"block",color:"success",onClick:Se,class:"return-button"},{default:u(()=>[n(a(l),{icon:a(L),slot:"start"},null,8,["icon"]),e[36]||(e[36]=f(" Finalizar e Retornar ",-1))]),_:1})])]),_:1})]),_:1})])):g("",!0)])):g("",!0)]),n(a(Oa),{"is-open":v.value,onWillDismiss:e[10]||(e[10]=s=>v.value=!1)},{default:u(()=>[n(a($e),null,{default:u(()=>[n(a(qe),null,{default:u(()=>[n(a(Re),null,{default:u(()=>[...e[38]||(e[38]=[f("Interromper Checklist",-1)])]),_:1}),n(a(Ne),{slot:"end"},{default:u(()=>[n(a(N),{onClick:e[7]||(e[7]=s=>v.value=!1)},{default:u(()=>[n(a(l),{icon:a(_e)},null,8,["icon"])]),_:1})]),_:1})]),_:1})]),_:1}),n(a(Be),null,{default:u(()=>[t("div",Ps,[t("div",Ss,[n(a(l),{icon:a(Fa),class:"warning-icon"},null,8,["icon"]),e[39]||(e[39]=t("h3",null,"Atenção!",-1)),e[40]||(e[40]=t("p",null,"Você está prestes a interromper o checklist de segurança. Esta ação deve ser usada apenas em casos de emergência ou intercorrências médicas.",-1))]),t("div",As,[n(a(Da),{fill:"outline",class:"patient-input"},{default:u(()=>[n(a(Me),{position:"floating"},{default:u(()=>[...e[41]||(e[41]=[f("Motivo da Interrupção",-1)])]),_:1}),n(a(Ta),{modelValue:D.value,"onUpdate:modelValue":e[8]||(e[8]=s=>D.value=s),rows:4,placeholder:"Descreva o motivo da interrupção (obrigatório)",required:""},null,8,["modelValue"])]),_:1})]),t("div",Os,[n(a(N),{expand:"block",fill:"outline",color:"medium",onClick:e[9]||(e[9]=s=>v.value=!1)},{default:u(()=>[...e[42]||(e[42]=[f(" Cancelar ",-1)])]),_:1}),n(a(N),{expand:"block",color:"danger",disabled:!D.value.trim(),onClick:ia},{default:u(()=>[n(a(l),{icon:a(Le),slot:"start"},null,8,["icon"]),e[43]||(e[43]=f(" Confirmar Interrupção ",-1))]),_:1},8,["disabled"])])])]),_:1})]),_:1},8,["is-open"])]),_:1},512)]),_:1}))}}),Rs=Ue(Ds,[["__scopeId","data-v-6b2edffb"]]);export{Rs as default};
