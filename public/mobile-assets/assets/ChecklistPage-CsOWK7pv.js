import{d as ze,n as m,q as d,t as s,J as g,G as p,K as y,v as n,y as t,B as E,H as f,r as _,c as pe,b as _t,o as ft,M as gt,e as yt,x as c,u as bt,w as Ee,D as Te,F as Q,L as Y,z as kt}from"./vendor-BAY9JQbk.js";import{g as l,A as Ct,e as wt,t as I,o as Ne,q as De,x as It,p as $e,r as qe,B as j,C as x,k as $,f as Pt,v as Re,w as Me,D as St,E as At,i as Ve,F as Ot,G as Et,n as Z,l as ve}from"./ionic-B_Arm38Z.js";import{z as D,C as F,D as _e,E as Be,F as te,_ as He,G as Tt,t as je,H as me,I as Nt,J as he,K as xe,m as Dt,h as $t,L as qt,j as Rt,M as Mt,g as Vt,N as Fe,O as Bt,f as jt,P as Le,Q as xt,R as Ft,u as Lt}from"./_plugin-vue_export-helper-BgNw2jzN.js";import{C as zt,A as ee}from"./main-Cm9J612g.js";const Ht={class:"item-card-header"},Ut={class:"header-content"},Jt={class:"item-card-title"},Kt={key:0,class:"item-card-description"},Wt={key:0,class:"header-badge"},Xt={class:"status-actions"},Gt={class:"action-status-icon success"},Qt={class:"action-status-icon danger"},Yt={class:"action-status-icon neutral"},Zt={key:0,class:"observation-card"},es={class:"observation-label"},ts=["value"],ss=ze({__name:"ChecklistItem",props:{title:{},description:{default:""},value:{default:null},observation:{default:""},required:{type:Boolean,default:!1}},emits:["update:value","update:observation"],setup(fe,{emit:q}){const L=fe,P=q,R=u=>{L.value===u?(P("update:value",null),P("update:observation","")):(P("update:value",u),u!=="NC"&&P("update:observation",""))},z=u=>{P("update:observation",u)},H=u=>{switch(u){case"C":return D;case"NC":return _e;case"NA":return Be;default:return D}};return(u,h)=>(d(),m("div",{class:y(["checklist-item-card",{"has-value":u.value!==null,"is-conforme":u.value==="C","is-nao-conforme":u.value==="NC","is-nao-aplica":u.value==="NA"}])},[s("div",Ht,[s("div",Ut,[s("h3",Jt,p(u.title),1),u.description?(d(),m("p",Kt,p(u.description),1)):g("",!0)]),u.value?(d(),m("div",Wt,[s("div",{class:y(["status-badge",u.value.toLowerCase()])},[n(t(l),{icon:H(u.value)},null,8,["icon"])],2)])):g("",!0)]),s("div",Xt,[s("button",{class:y(["action-status-btn conforme",{selected:u.value==="C"}]),onClick:h[0]||(h[0]=C=>R("C")),type:"button"},[s("div",Gt,[n(t(l),{icon:t(D)},null,8,["icon"])]),h[4]||(h[4]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Conforme"),s("span",{class:"action-status-hint"},"Tudo OK")],-1)),u.value==="C"?(d(),E(t(l),{key:0,icon:t(F),class:"selected-check"},null,8,["icon"])):g("",!0)],2),s("button",{class:y(["action-status-btn nao-conforme",{selected:u.value==="NC"}]),onClick:h[1]||(h[1]=C=>R("NC")),type:"button"},[s("div",Qt,[n(t(l),{icon:t(_e)},null,8,["icon"])]),h[5]||(h[5]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Não Conforme"),s("span",{class:"action-status-hint"},"Problema")],-1)),u.value==="NC"?(d(),E(t(l),{key:0,icon:t(F),class:"selected-check"},null,8,["icon"])):g("",!0)],2),s("button",{class:y(["action-status-btn nao-aplica",{selected:u.value==="NA"}]),onClick:h[2]||(h[2]=C=>R("NA")),type:"button"},[s("div",Yt,[n(t(l),{icon:t(Be)},null,8,["icon"])]),h[6]||(h[6]=s("div",{class:"action-status-content"},[s("span",{class:"action-status-label"},"Não Aplica"),s("span",{class:"action-status-hint"},"N/A")],-1)),u.value==="NA"?(d(),E(t(l),{key:0,icon:t(F),class:"selected-check"},null,8,["icon"])):g("",!0)],2)]),u.value==="NC"?(d(),m("div",Zt,[s("label",es,[n(t(l),{icon:t(te)},null,8,["icon"]),h[7]||(h[7]=f(" Descreva o Problema * ",-1))]),s("textarea",{value:u.observation,onInput:h[3]||(h[3]=C=>z(C.target.value)),class:"observation-textarea",rows:"3",placeholder:"Ex: Equipamento apresentando ruído anormal...",required:""},null,40,ts)])):g("",!0)],2))}}),as=He(ss,[["__scopeId","data-v-224039b4"]]),os={class:"checklist-container"},ns={class:"time-display"},is={class:"current-date"},ls={class:"current-time"},rs={key:0,class:"section"},cs={class:"section-title"},us={class:"search-card"},ds={class:"search-input-wrapper"},ps={key:0,class:"patient-selected"},vs={class:"action-btn selected"},ms={class:"action-icon success"},hs={class:"action-content"},_s={class:"action-title"},fs={class:"action-subtitle"},gs={key:1,class:"search-results"},ys=["onClick"],bs={class:"action-icon primary"},ks={class:"action-content"},Cs={class:"action-title"},ws={class:"action-subtitle"},Is={key:2,class:"no-results"},Ps={key:3,class:"search-loading"},Ss={key:1,class:"section"},As={class:"section-title"},Os={class:"selection-card"},Es={class:"availability-icon"},Ts={class:"availability-info"},Ns={class:"availability-label"},Ds={class:"availability-count"},$s={class:"form-group"},qs={class:"input-label"},Rs={class:"machine-grid"},Ms=["onClick"],Vs={class:"machine-icon"},Bs={class:"machine-info"},js={class:"machine-name"},xs={key:0,class:"machine-check"},Fs={class:"form-group"},Ls={class:"input-label"},zs={class:"shift-selector"},Hs={class:"primary-action"},Us=["disabled"],Js={key:2},Ks={class:"phase-header"},Ws={class:"phase-time"},Xs={class:"phase-progress"},Gs={class:"progress-steps"},Qs={class:"step-circle"},Ys={key:2},Zs={class:"step-label"},ea={class:"phase-completion"},ta={class:"patient-summary"},sa={class:"patient-details"},aa={class:"session-time"},oa={key:0,class:"phase-section"},na={class:"phase-header-card"},ia={class:"phase-header-icon"},la={class:"phase-header-content"},ra={class:"phase-header-badge"},ca={class:"checklist-items-grid"},ua={class:"observations-card"},da={class:"card-label"},pa=["disabled"],va={class:"btn-text"},ma={class:"btn-title"},ha={class:"btn-subtitle"},_a={class:"dashboard-actions"},fa={class:"action-card-icon warning"},ga={class:"action-card-icon danger"},ya={key:1,class:"interrupted-section"},ba={class:"interrupted-content"},ka={class:"interruption-reason"},Ca={key:2,class:"completed-section"},wa={class:"completed-content"},Ia={class:"interrupt-modal-content"},Pa={class:"warning-section"},Sa={class:"form-group"},Aa={class:"modal-buttons"},Oa=ze({__name:"ChecklistPage",setup(fe){const q=kt(),L=bt(),P=zt.getInstance();P.getSearchPatientUseCase();const R=P.getMachineRepository(),z=_(""),H=_(""),u=_(!1),h=_(""),C=_(0),M=_("machine-patient"),w=_(""),S=_([]),V=_(!1),b=_(null);let se;const ae=_(null),oe=_([]),ne=_(null),ge=_(!1),i=_(null),A=_(null),ye=_(!1),v=_({machine_id:0,shift:"matutino",observations:"",machine_disinfected:!1,capillary_lines_identified:!1,patient_identification_confirmed:!1,vascular_access_evaluated:!1,vital_signs_checked:!1,medications_reviewed:!1,dialyzer_membrane_checked:!1,equipment_functioning_verified:!1,dialysis_parameters_verified:!1,patient_comfort_assessed:!1,fluid_balance_monitored:!1,alarms_responded:!1,session_completed_safely:!1,vascular_access_secured:!1,patient_vital_signs_stable:!1,equipment_cleaned:!1}),U=_({}),J=_({}),Ue=["pre_dialysis","during_session","post_dialysis"];let ie;const Je=pe(()=>b.value&&v.value.machine_id&&v.value.shift),K=pe(()=>i.value?B().every(a=>{const r=X(a.key);if(r===null)return!1;if(r==="C"||r==="NA")return!0;if(r==="NC"){const k=ce(a.key);return k&&k.trim().length>0}return!1}):!1),Ke=pe(()=>i.value?i.value.current_phase==="post_dialysis":!1),be=o=>({pre_dialysis:"Pré-Diálise",during_session:"Durante a Sessão",post_dialysis:"Pós-Diálise",completed:"Concluído",interrupted:"Interrompido"})[o]||o,We=o=>({pre_dialysis:"Pré",during_session:"Durante",post_dialysis:"Pós"})[o]||o,Xe=o=>({pre_dialysis:"Verificações de segurança antes de iniciar a sessão de diálise",during_session:"Monitoramento contínuo durante o procedimento",post_dialysis:"Finalização segura da sessão e limpeza dos equipamentos"})[o]||"",ke=o=>({pre_dialysis:"warning",during_session:"primary",post_dialysis:"secondary",completed:"success",interrupted:"danger"})[o]||"medium",Ce=o=>D,Ge=o=>({pre_dialysis:"Preparando",during_session:"Em Andamento",post_dialysis:"Finalizando",completed:"Concluído",interrupted:"Interrompido"})[o]||o,Qe=o=>({pre_dialysis:"1",during_session:"2",post_dialysis:"3"})[o]||"",we=o=>{if(!i.value)return!1;switch(o){case"pre_dialysis":return i.value.pre_dialysis_completed_at!==null;case"during_session":return i.value.during_session_completed_at!==null;case"post_dialysis":return i.value.post_dialysis_completed_at!==null;default:return!1}},B=()=>{var e;return{pre_dialysis:[{key:"machine_disinfected",label:"Máquina Desinfetada",description:"Verificar se a máquina foi devidamente desinfetada"},{key:"capillary_lines_identified",label:"Linhas Capilares Identificadas",description:"Identificar e verificar as linhas capilares"},{key:"patient_identification_confirmed",label:"Identificação do Paciente",description:"Confirmar identidade com dois identificadores"},{key:"vascular_access_evaluated",label:"Acesso Vascular Avaliado",description:"Avaliar condições do acesso vascular"},{key:"vital_signs_checked",label:"Sinais Vitais Verificados",description:"Aferir pressão arterial, temperatura e peso"},{key:"medications_reviewed",label:"Medicações Revisadas",description:"Revisar medicações e dosagens prescritas"},{key:"dialyzer_membrane_checked",label:"Membrana do Dialisador Verificada",description:"Verificar integridade da membrana"},{key:"equipment_functioning_verified",label:"Funcionamento dos Equipamentos",description:"Testar funcionamento de todos os equipamentos"}],during_session:[{key:"dialysis_parameters_verified",label:"Parâmetros de Diálise Verificados",description:"Confirmar e ajustar parâmetros de diálise"},{key:"patient_comfort_assessed",label:"Conforto do Paciente Avaliado",description:"Verificar conforto e bem-estar do paciente"},{key:"fluid_balance_monitored",label:"Balanço Hídrico Monitorado",description:"Acompanhar remoção e balanço de fluidos"},{key:"alarms_responded",label:"Resposta a Alarmes",description:"Verificar e responder adequadamente aos alarmes"}],post_dialysis:[{key:"session_completed_safely",label:"Sessão Finalizada com Segurança",description:"Finalizar sessão seguindo protocolos de segurança"},{key:"vascular_access_secured",label:"Acesso Vascular Protegido",description:"Proteger e cuidar do acesso vascular"},{key:"patient_vital_signs_stable",label:"Sinais Vitais Estáveis",description:"Confirmar estabilidade dos sinais vitais"},{key:"equipment_cleaned",label:"Equipamentos Limpos",description:"Limpar e preparar equipamentos para próximo uso"}]}[(e=i.value)==null?void 0:e.current_phase]||[]},Ie=()=>{const o=new Date;z.value=o.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit",second:"2-digit"}),H.value=o.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},Ye=()=>{if(se&&clearTimeout(se),w.value.length<3){S.value=[];return}V.value=!0,se=setTimeout(async()=>{await Ze()},500)},Ze=async()=>{if(w.value.length<3){S.value=[],V.value=!1;return}try{const e=await P.getPatientRepository().quickSearch(w.value,10);S.value=e}catch(o){console.error("Erro ao buscar pacientes:",o),S.value=[]}finally{V.value=!1}},et=o=>{b.value=o,w.value=o.full_name,S.value=[]},tt=()=>{b.value=null,w.value="",S.value=[]},st=()=>{localStorage.setItem("patient_search_query",w.value),q.push("/patients/new")},at=async()=>{var a,r,k;if(ge.value){M.value="pre-dialysis";return}if(!(await rt()).canCreate)return;const e=await Z.create({message:"Iniciando checklist...",spinner:"crescent"});await e.present();try{const T=await fetch("/api/checklists",{method:"POST",headers:ee.getAuthHeaders(),body:JSON.stringify({patient_id:(a=b.value)==null?void 0:a.id,machine_id:v.value.machine_id,shift:v.value.shift,observations:v.value.observations})}),O=await T.json();if(T.ok&&O.success){i.value=O.checklist,ae.value=oe.value.find(ht=>ht.id===v.value.machine_id)||null,W();const N=O.resumed?"Checklist existente carregado!":"Novo checklist iniciado com sucesso!";await(await I.create({message:N,duration:2e3,color:"success",position:"top"})).present()}else{const N=O.message||((k=(r=O.errors)==null?void 0:r.machine_id)==null?void 0:k[0])||"Erro ao iniciar checklist";throw new Error(N)}}catch(T){await(await I.create({message:T.message||"Erro ao iniciar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await e.dismiss()}},ot=async()=>{if(!K.value)return;const o=await Z.create({message:"Avançando para próxima fase...",spinner:"crescent"});await o.present();try{await le();const a=await(await fetch("/api/checklists/".concat(i.value.id,"/advance"),{method:"POST",headers:{"Content-Type":"application/json",...ee.getAuthHeaders()}})).json();if(a.success){i.value=a.checklist,W();const r=document.querySelector("ion-content");r&&await r.scrollToTop(400),await(await I.create({message:a.message,duration:2e3,color:"success",position:"top"})).present()}else throw new Error(a.message||"Erro ao avançar fase")}catch(e){await(await I.create({message:e.message||"Erro ao avançar fase",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},le=async()=>{if(i.value)try{const o={},e={};B().forEach(T=>{const O=X(T.key),N=ce(T.key);let G=!1;(O==="C"||O==="NA"||O==="NC"&&N&&N.trim().length>0)&&(G=!0),o[T.key]=G,N&&N.trim().length>0&&(e[T.key]=N)});const r=await fetch("/api/checklists/".concat(i.value.id,"/phase"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))},body:JSON.stringify({phase_data:o,observations:v.value.observations,item_observations:e})});if(!r.ok)throw new Error("Erro ao salvar dados");const k=await r.json();k.success&&(C.value=k.phase_completion)}catch(o){console.error("Erro no updatePhaseData:",o)}},nt=async()=>{const o=await Z.create({message:"Interrompendo checklist...",spinner:"crescent"});await o.present();try{const a=await(await fetch("/api/checklists/".concat(i.value.id,"/interrupt"),{method:"POST",headers:ee.getAuthHeaders(),body:JSON.stringify({reason:h.value})})).json();if(a.success)i.value=a.checklist,u.value=!1,await(await I.create({message:"Checklist interrompido com sucesso.",duration:3e3,color:"warning",position:"top"})).present();else throw new Error(a.message||"Erro ao interromper checklist")}catch(e){await(await I.create({message:e.message||"Erro ao interromper checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},Pe=()=>{q.replace("/dashboard")},it=async()=>{var e;if(!i.value)return;const o=await Z.create({message:"Pausando checklist..."});await o.present();try{const r=await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((e=document.querySelector('meta[name="csrf-token"]'))==null?void 0:e.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"manual"})})).json();if(r.success)await(await I.create({message:"Checklist pausado com sucesso. Você pode retomá-lo a qualquer momento.",duration:3e3,color:"success",position:"top"})).present(),i.value.paused_at=r.checklist.paused_at,q.replace("/dashboard");else throw new Error(r.message||"Erro ao pausar checklist")}catch(a){console.error("Erro ao pausar checklist:",a),await(await I.create({message:"Erro ao pausar checklist. Tente novamente.",duration:3e3,color:"danger",position:"top"})).present()}finally{await o.dismiss()}},W=()=>{const o=B(),e=o.filter(a=>X(a.key)!==null).length;C.value=o.length>0?e/o.length*100:0},lt=async()=>{try{oe.value=await R.getAvailable(),await Se()}catch(o){console.error("Error loading machines:",o)}},Se=async()=>{try{ye.value=!0;const o=await fetch("/api/machines/availability",{headers:ee.getAuthHeaders()});if(o.ok){const e=await o.json();A.value=e.availability}}catch(o){console.error("Error fetching machine availability:",o)}finally{ye.value=!1}},rt=async()=>{if(await Se(),!A.value)return{canCreate:!0};const{available:o,overall_status:e,message:a}=A.value;if(o===0)return await(await ve.create({header:"Máquinas Indisponíveis",message:a||"Não há máquinas disponíveis no momento. Por favor, aguarde até que uma máquina fique livre.",buttons:["OK"]})).present(),{canCreate:!1};if(e==="warning"||e==="alert"){const r=await ve.create({header:"Atenção",message:"".concat(a,". Apenas ").concat(o," máquina(s) disponível(is). Deseja continuar?"),buttons:[{text:"Cancelar",role:"cancel"},{text:"Continuar",role:"confirm"}]});await r.present();const{role:k}=await r.onDidDismiss();return{canCreate:k==="confirm"}}return{canCreate:!0}},ct=async()=>{const o=L.params.id;if(o&&o!=="new")try{const e=await fetch("/api/checklists/".concat(o),{headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}});if(e.ok){const a=await e.json();switch(i.value=a,ne.value=a.id,ge.value=!0,ae.value=a.machine,b.value=a.patient,a.current_phase){case"pre_dialysis":M.value="pre-dialysis";break;case"during_session":M.value="during-session";break;case"post_dialysis":M.value="post-dialysis";break;default:M.value="pre-dialysis"}a.paused_at&&!a.resumed_at&&await ut(),dt(a),W(),console.log("Checklist carregado:",a)}}catch(e){console.error("Erro ao carregar checklist:",e)}},ut=async()=>{if(ne.value)try{(await fetch("/api/checklists/".concat(ne.value,"/resume"),{method:"POST",headers:{Authorization:"Bearer ".concat(localStorage.getItem("auth_token")),Accept:"application/json"}})).ok&&console.log("Checklist retomado com sucesso")}catch(o){console.error("Erro ao retomar checklist:",o)}},dt=o=>{Object.keys(v.value).forEach(a=>{o[a]!==void 0&&(v.value[a]=o[a])}),o.item_observations&&(J.value={...o.item_observations}),B().forEach(a=>{const r=o[a.key];r!==void 0&&(r===!0?U.value[a.key]="C":r===!1&&J.value[a.key]&&(U.value[a.key]="NC"))})},Ae=o=>new Date(o).toLocaleDateString("pt-BR"),re=o=>new Date(o).toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"}),X=o=>U.value[o]||null,pt=(o,e)=>{U.value[o]=e,v.value[o]=e==="C",W(),i.value&&le()},ce=o=>J.value[o]||"";let ue=null;const vt=(o,e)=>{J.value[o]=e,ue&&clearTimeout(ue),ue=setTimeout(()=>{i.value&&le()},1e3)},mt=async o=>{try{console.log("🔄 Carregando paciente ID:",o);const a=await P.getPatientRepository().getById(o);a&&(console.log("✅ Paciente carregado:",a),b.value=a,w.value=a.full_name,S.value=[],await(await I.create({message:"Paciente ".concat(a.full_name," selecionado!"),duration:2e3,color:"success",position:"top"})).present())}catch(e){console.error("❌ Erro ao carregar paciente:",e),await(await I.create({message:"Erro ao carregar paciente cadastrado",duration:3e3,color:"danger",position:"top"})).present()}},de=()=>{const o=localStorage.getItem("return_to_checklist"),e=localStorage.getItem("new_patient_id");console.log("🔍 Verificando retorno - return_to_checklist:",o,"new_patient_id:",e),o==="true"&&e&&(console.log("🎯 Detectado retorno de cadastro, carregando paciente..."),mt(parseInt(e)),localStorage.removeItem("return_to_checklist"),localStorage.removeItem("new_patient_id"),localStorage.removeItem("patient_search_query"))};Ct(()=>{console.log("🚀 onIonViewWillEnter - Página sendo exibida"),de()}),_t(()=>L.path,o=>{console.log("🔄 Rota mudou para:",o),o==="/checklist/new"&&(console.log("📍 Detectado retorno para /checklist/new via watch"),setTimeout(de,100))}),ft(()=>{console.log("🏁 onMounted - Página montada"),lt(),ct(),Ie(),ie=setInterval(Ie,1e3),de()}),gt(async(o,e)=>{if(!i.value||i.value.paused_at||i.value.current_phase==="completed"||i.value.is_interrupted)return!0;const a=await ve.create({header:"Pausar Checklist?",message:"Você está saindo do checklist ativo. Deseja pausá-lo para continuar depois?",buttons:[{text:"Cancelar",role:"cancel",handler:()=>!1},{text:"Sair sem Pausar",role:"destructive",handler:async()=>!0},{text:"Pausar e Sair",handler:async()=>(await Oe(),!0)}]});await a.present();const{role:r}=await a.onDidDismiss();return r==="cancel"||!r?!1:(r==="handler"&&await Oe(),!0)});const Oe=async()=>{var o;if(i.value)try{(await(await fetch("/api/checklists/".concat(i.value.id,"/pause"),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-TOKEN":((o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content"))||"","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({reason:"auto"})})).json()).success&&await(await I.create({message:"Checklist pausado automaticamente.",duration:2e3,color:"warning",position:"top"})).present()}catch(e){console.error("Erro ao pausar checklist automaticamente:",e)}};return yt(()=>{ie&&clearInterval(ie)}),(o,e)=>(d(),E(t(wt),null,{default:c(()=>[n(t(qe),{translucent:!0},{default:c(()=>[n(t(Ne),{color:"primary"},{default:c(()=>[n(t(De),{slot:"start"},{default:c(()=>[n(t(It),{"default-href":"/dashboard"})]),_:1}),n(t($e),null,{default:c(()=>[...e[11]||(e[11]=[f("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),n(t(Ve),{fullscreen:!0},{default:c(()=>[s("div",os,[n(t(j),{class:"time-header-card"},{default:c(()=>[n(t(x),null,{default:c(()=>[s("div",ns,[s("div",is,[n(t(l),{icon:t(Tt),class:"date-icon"},null,8,["icon"]),f(" "+p(H.value),1)]),s("div",ls,[n(t(l),{icon:t(je),class:"time-icon"},null,8,["icon"]),f(" "+p(z.value),1)])])]),_:1})]),_:1}),i.value?g("",!0):(d(),m("div",rs,[s("h2",cs,[n(t(l),{icon:t(me)},null,8,["icon"]),e[12]||(e[12]=f(" Etapa 1: Buscar Paciente ",-1))]),s("div",us,[s("div",ds,[n(t(l),{icon:t(Nt),class:"search-icon"},null,8,["icon"]),Ee(s("input",{"onUpdate:modelValue":e[0]||(e[0]=a=>w.value=a),type:"text",placeholder:"Digite o nome do paciente...",class:"search-input",onInput:Ye},null,544),[[Te,w.value]])]),b.value?(d(),m("div",ps,[s("div",vs,[s("div",ms,[n(t(l),{icon:t(D)},null,8,["icon"])]),s("div",hs,[s("span",_s,p(b.value.full_name),1),s("span",fs,p(Ae(b.value.birth_date))+" • "+p(b.value.age)+" anos ",1)]),n(t($),{fill:"clear",onClick:tt},{default:c(()=>[n(t(l),{icon:t(he),slot:"icon-only"},null,8,["icon"])]),_:1})])])):S.value.length>0&&w.value.length>0?(d(),m("div",gs,[(d(!0),m(Q,null,Y(S.value,a=>(d(),m("div",{key:a.id,class:"action-btn",onClick:r=>et(a)},[s("div",bs,[n(t(l),{icon:t(me)},null,8,["icon"])]),s("div",ks,[s("span",Cs,p(a.full_name),1),s("span",ws,p(Ae(a.birth_date))+" • "+p(a.age)+" anos ",1)]),n(t(l),{icon:t(Lt),class:"chevron"},null,8,["icon"])],8,ys))),128))])):w.value.length>2&&S.value.length===0&&!V.value?(d(),m("div",Is,[n(t(l),{icon:t(te),class:"no-results-icon"},null,8,["icon"]),e[14]||(e[14]=s("h3",null,"Paciente não encontrado",-1)),e[15]||(e[15]=s("p",null,"Não encontramos nenhum paciente com esse nome.",-1)),n(t($),{expand:"block",onClick:st,class:"register-btn"},{default:c(()=>[n(t(l),{icon:t(me),slot:"start"},null,8,["icon"]),e[13]||(e[13]=f(" Cadastrar Novo Paciente ",-1))]),_:1})])):g("",!0),V.value?(d(),m("div",Ps,[n(t(Pt),{name:"crescent"}),e[16]||(e[16]=s("p",null,"Buscando...",-1))])):g("",!0)])])),b.value&&!i.value?(d(),m("div",Ss,[s("h2",As,[n(t(l),{icon:t(xe)},null,8,["icon"]),e[17]||(e[17]=f(" Etapa 2: Máquina e Turno ",-1))]),s("div",Os,[A.value?(d(),m("div",{key:0,class:y(["availability-badge",A.value.overall_status])},[s("div",Es,[A.value.overall_status==="good"?(d(),E(t(l),{key:0,icon:t(D)},null,8,["icon"])):A.value.overall_status==="critical"?(d(),E(t(l),{key:1,icon:t(_e)},null,8,["icon"])):(d(),E(t(l),{key:2,icon:t(te)},null,8,["icon"]))]),s("div",Ts,[s("span",Ns,p(A.value.message),1),s("span",Ds,p(A.value.available)+" de "+p(A.value.total)+" disponíveis",1)])],2)):g("",!0),s("div",$s,[s("label",qs,[n(t(l),{icon:t(Dt)},null,8,["icon"]),e[18]||(e[18]=f(" Selecione a Máquina ",-1))]),s("div",Rs,[(d(!0),m(Q,null,Y(oe.value,a=>(d(),m("button",{key:a.id,type:"button",class:y(["machine-card",{selected:v.value.machine_id===a.id}]),onClick:r=>v.value.machine_id=a.id},[s("div",Vs,[n(t(l),{icon:t(xe)},null,8,["icon"])]),s("div",Bs,[s("span",js,p(a.name),1),e[19]||(e[19]=s("span",{class:"machine-status"},"Disponível",-1))]),v.value.machine_id===a.id?(d(),m("div",xs,[n(t(l),{icon:t(D)},null,8,["icon"])])):g("",!0)],10,Ms))),128))])]),s("div",Fs,[s("label",Ls,[n(t(l),{icon:t(je)},null,8,["icon"]),e[20]||(e[20]=f(" Selecione o Turno ",-1))]),s("div",zs,[s("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="matutino"}]),onClick:e[1]||(e[1]=a=>v.value.shift="matutino")},[n(t(l),{icon:t($t)},null,8,["icon"]),e[21]||(e[21]=s("span",null,"Matutino",-1)),e[22]||(e[22]=s("span",{class:"shift-time"},"06:00 - 12:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="vespertino"}]),onClick:e[2]||(e[2]=a=>v.value.shift="vespertino")},[n(t(l),{icon:t(qt)},null,8,["icon"]),e[23]||(e[23]=s("span",null,"Vespertino",-1)),e[24]||(e[24]=s("span",{class:"shift-time"},"12:00 - 18:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="noturno"}]),onClick:e[3]||(e[3]=a=>v.value.shift="noturno")},[n(t(l),{icon:t(Rt)},null,8,["icon"]),e[25]||(e[25]=s("span",null,"Noturno",-1)),e[26]||(e[26]=s("span",{class:"shift-time"},"18:00 - 00:00",-1))],2),s("button",{type:"button",class:y(["shift-btn",{active:v.value.shift==="madrugada"}]),onClick:e[4]||(e[4]=a=>v.value.shift="madrugada")},[n(t(l),{icon:t(Mt)},null,8,["icon"]),e[27]||(e[27]=s("span",null,"Madrugada",-1)),e[28]||(e[28]=s("span",{class:"shift-time"},"00:00 - 06:00",-1))],2)])])]),s("div",Hs,[s("button",{class:"primary-btn",onClick:at,disabled:!Je.value},[n(t(l),{icon:t(Vt)},null,8,["icon"]),e[29]||(e[29]=s("div",{class:"btn-text"},[s("span",{class:"btn-title"},"Iniciar Checklist"),s("span",{class:"btn-subtitle"},"Começar verificação de segurança")],-1)),n(t(l),{icon:t(Fe)},null,8,["icon"])],8,Us)])])):g("",!0),i.value?(d(),m("div",Js,[n(t(j),{class:"phase-progress-card"},{default:c(()=>[n(t(x),null,{default:c(()=>[s("div",Ks,[s("h3",null,p(be(i.value.current_phase)),1),s("div",Ws,[n(t(Re),{color:ke(i.value.current_phase)},{default:c(()=>[n(t(l),{icon:Ce(i.value.current_phase)},null,8,["icon"]),n(t(Me),null,{default:c(()=>[f(p(Ge(i.value.current_phase)),1)]),_:1})]),_:1},8,["color"])])]),s("div",Xs,[s("div",Gs,[(d(),m(Q,null,Y(Ue,a=>s("div",{class:y(["step",{active:a===i.value.current_phase,completed:we(a),interrupted:i.value.is_interrupted}]),key:a},[s("div",Qs,[we(a)?(d(),E(t(l),{key:0,icon:t(F)},null,8,["icon"])):i.value.is_interrupted?(d(),E(t(l),{key:1,icon:t(he)},null,8,["icon"])):(d(),m("span",Ys,p(Qe(a)),1))]),s("span",Zs,p(We(a)),1)],2)),64))])]),s("div",ea,[n(t(St),{value:C.value/100,color:C.value===100?"success":"primary"},null,8,["value","color"]),s("p",null,p(Math.round(C.value))+"% concluído",1)])]),_:1})]),_:1}),n(t(j),{class:"patient-summary-card"},{default:c(()=>[n(t(x),null,{default:c(()=>{var a;return[s("div",ta,[s("div",sa,[s("h4",null,p(b.value.full_name),1),s("p",null,p((a=ae.value)==null?void 0:a.name)+" • Turno "+p(i.value.shift),1)]),s("div",aa,[s("p",null,"Iniciado às "+p(re(i.value.pre_dialysis_started_at)),1)])])]}),_:1})]),_:1}),i.value.is_interrupted?(d(),m("div",ya,[n(t(j),{class:"interrupted-card"},{default:c(()=>[n(t(x),null,{default:c(()=>[s("div",ba,[n(t(l),{icon:t(te),class:"interrupted-icon"},null,8,["icon"]),e[35]||(e[35]=s("h3",null,"Checklist Interrompido",-1)),s("p",null,"O checklist foi interrompido em "+p(re(i.value.interrupted_at)),1),s("p",ka,[e[33]||(e[33]=s("strong",null,"Motivo:",-1)),f(" "+p(i.value.interruption_reason),1)]),n(t($),{expand:"block",color:"primary",onClick:Pe,class:"return-button"},{default:c(()=>[n(t(l),{icon:t(xt),slot:"start"},null,8,["icon"]),e[34]||(e[34]=f(" Retornar ao Dashboard ",-1))]),_:1})])]),_:1})]),_:1})])):(d(),m("div",oa,[s("div",na,[s("div",ia,[n(t(l),{icon:Ce(i.value.current_phase)},null,8,["icon"])]),s("div",la,[s("h3",null,p(be(i.value.current_phase)),1),s("p",null,p(Xe(i.value.current_phase)),1)]),s("div",ra,[n(t(Re),{color:ke(i.value.current_phase)},{default:c(()=>[f(p(Math.round(C.value))+"% ",1)]),_:1},8,["color"])])]),s("div",ca,[(d(!0),m(Q,null,Y(B(),a=>(d(),E(as,{key:a.key,title:a.label,description:a.description,value:X(a.key),observation:ce(a.key),"onUpdate:value":r=>pt(a.key,r),"onUpdate:observation":r=>vt(a.key,r)},null,8,["title","description","value","observation","onUpdate:value","onUpdate:observation"]))),128))]),s("div",ua,[s("label",da,[n(t(l),{icon:t(Bt)},null,8,["icon"]),e[30]||(e[30]=f(" Observações Adicionais ",-1))]),Ee(s("textarea",{"onUpdate:modelValue":e[5]||(e[5]=a=>v.value.observations=a),class:"observations-input",rows:"4",placeholder:"Digite observações sobre esta fase do checklist..."},null,512),[[Te,v.value.observations]])]),s("button",{class:y(["primary-continue-btn",{disabled:!K.value}]),disabled:!K.value,onClick:ot},[n(t(l),{icon:t(D)},null,8,["icon"]),s("div",va,[s("span",ma,p(Ke.value?"Concluir Checklist":"Avançar para Próxima Fase"),1),s("span",ha,p(K.value?"Todos os itens verificados":"Complete todos os itens obrigatórios"),1)]),n(t(l),{icon:t(Fe)},null,8,["icon"])],10,pa),s("div",_a,[s("button",{class:"action-card warning",onClick:it},[s("div",fa,[n(t(l),{icon:t(jt)},null,8,["icon"])]),e[31]||(e[31]=s("div",{class:"action-card-content"},[s("span",{class:"action-card-title"},"Pausar"),s("span",{class:"action-card-subtitle"},"Voltar depois")],-1))]),s("button",{class:"action-card danger",onClick:e[6]||(e[6]=a=>u.value=!0)},[s("div",ga,[n(t(l),{icon:t(Le)},null,8,["icon"])]),e[32]||(e[32]=s("div",{class:"action-card-content"},[s("span",{class:"action-card-title"},"Interromper"),s("span",{class:"action-card-subtitle"},"Cancelar processo")],-1))])])])),i.value.current_phase==="completed"?(d(),m("div",Ca,[n(t(j),{class:"completed-card"},{default:c(()=>[n(t(x),null,{default:c(()=>[s("div",wa,[n(t(l),{icon:t(D),class:"completed-icon"},null,8,["icon"]),e[37]||(e[37]=s("h3",null,"Checklist Concluído com Sucesso!",-1)),s("p",null,"Todas as fases foram completadas em "+p(re(i.value.post_dialysis_completed_at)),1),n(t($),{expand:"block",color:"success",onClick:Pe,class:"return-button"},{default:c(()=>[n(t(l),{icon:t(F),slot:"start"},null,8,["icon"]),e[36]||(e[36]=f(" Finalizar e Retornar ",-1))]),_:1})])]),_:1})]),_:1})])):g("",!0)])):g("",!0)]),n(t(At),{"is-open":u.value,onWillDismiss:e[10]||(e[10]=a=>u.value=!1)},{default:c(()=>[n(t(qe),null,{default:c(()=>[n(t(Ne),null,{default:c(()=>[n(t($e),null,{default:c(()=>[...e[38]||(e[38]=[f("Interromper Checklist",-1)])]),_:1}),n(t(De),{slot:"end"},{default:c(()=>[n(t($),{onClick:e[7]||(e[7]=a=>u.value=!1)},{default:c(()=>[n(t(l),{icon:t(he)},null,8,["icon"])]),_:1})]),_:1})]),_:1})]),_:1}),n(t(Ve),null,{default:c(()=>[s("div",Ia,[s("div",Pa,[n(t(l),{icon:t(Ft),class:"warning-icon"},null,8,["icon"]),e[39]||(e[39]=s("h3",null,"Atenção!",-1)),e[40]||(e[40]=s("p",null,"Você está prestes a interromper o checklist de segurança. Esta ação deve ser usada apenas em casos de emergência ou intercorrências médicas.",-1))]),s("div",Sa,[n(t(Ot),{fill:"outline",class:"patient-input"},{default:c(()=>[n(t(Me),{position:"floating"},{default:c(()=>[...e[41]||(e[41]=[f("Motivo da Interrupção",-1)])]),_:1}),n(t(Et),{modelValue:h.value,"onUpdate:modelValue":e[8]||(e[8]=a=>h.value=a),rows:4,placeholder:"Descreva o motivo da interrupção (obrigatório)",required:""},null,8,["modelValue"])]),_:1})]),s("div",Aa,[n(t($),{expand:"block",fill:"outline",color:"medium",onClick:e[9]||(e[9]=a=>u.value=!1)},{default:c(()=>[...e[42]||(e[42]=[f(" Cancelar ",-1)])]),_:1}),n(t($),{expand:"block",color:"danger",disabled:!h.value.trim(),onClick:nt},{default:c(()=>[n(t(l),{icon:t(Le),slot:"start"},null,8,["icon"]),e[43]||(e[43]=f(" Confirmar Interrupção ",-1))]),_:1},8,["disabled"])])])]),_:1})]),_:1},8,["is-open"])]),_:1})]),_:1}))}}),$a=He(Oa,[["__scopeId","data-v-b92ea95e"]]);export{$a as default};
