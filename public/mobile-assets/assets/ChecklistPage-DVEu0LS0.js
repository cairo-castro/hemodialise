import{d as Ee,r as _,c as N,o as Me,e as ze,z as v,n as c,v as s,x as e,t,B as r,q as i,D as h,l as I,E as d,G as j,F as H,A as Fe,H as ae}from"./vendor-C2XN_qWx.js";import{e as Re,n as te,p as se,z as Ne,o as oe,q as ne,u as b,v as C,g as u,A as L,B as U,h as P,i as g,j as ie,k,w as le,C as re,D as x,E as je,F as He,G as de,H as Le,m as ue,J as q,t as y,K as Ue}from"./ionic-Duh8nJBT.js";import{g as $e,t as Je,h as Ge,i as Ke,j as B,k as We,n as Qe,o as ce,q as Xe,r as Ye,u as Ze,v as ea,x as pe,y as me,z as aa,_ as ta}from"./_plugin-vue_export-helper-BGt4Pv6P.js";import{C as sa,A as $}from"./main-Dw9z8FtT.js";const oa={class:"checklist-container"},na={class:"time-display"},ia={class:"current-date"},la={class:"current-time"},ra={class:"form-group"},da={class:"form-group"},ua={key:0,class:"patient-found"},ca={class:"patient-info"},pa={key:0},ma={class:"form-group"},fa={class:"form-group"},_a={key:2},va={class:"phase-header"},ha={class:"phase-time"},ga={class:"phase-progress"},ka={class:"progress-steps"},ya={class:"step-circle"},ba={key:2},Ca={class:"step-label"},wa={class:"phase-completion"},Ia={class:"patient-summary"},Pa={class:"patient-details"},Va={class:"session-time"},Sa={class:"checklist-items"},Da={class:"form-group"},Ta={class:"action-buttons"},Aa={class:"interrupted-content"},Oa={class:"interruption-reason"},xa={class:"completed-content"},qa={class:"interrupt-modal-content"},Ba={class:"warning-section"},Ea={class:"form-group"},Ma={class:"modal-buttons"},za=Ee({__name:"ChecklistPage",setup(Fa){const fe=Fe(),J=sa.getInstance(),_e=J.getSearchPatientUseCase(),ve=J.getMachineRepository(),G=_(""),K=_(""),V=_(!1),A=_(""),D=_(0),w=_({full_name:"",birth_date:""}),m=_(null),W=_(null),E=_([]),l=_(null),p=_({machine_id:0,shift:"matutino",observations:"",machine_disinfected:!1,capillary_lines_identified:!1,patient_identification_confirmed:!1,vascular_access_evaluated:!1,vital_signs_checked:!1,medications_reviewed:!1,dialyzer_membrane_checked:!1,equipment_functioning_verified:!1,dialysis_parameters_verified:!1,patient_comfort_assessed:!1,fluid_balance_monitored:!1,alarms_responded:!1,session_completed_safely:!1,vascular_access_secured:!1,patient_vital_signs_stable:!1,equipment_cleaned:!1}),he=["pre_dialysis","during_session","post_dialysis"];let M;const ge=N(()=>w.value.full_name.length>0&&w.value.birth_date.length>0),ke=N(()=>m.value&&p.value.machine_id&&p.value.shift),T=N(()=>l.value?O().every(a=>S(a.key)):!1),Q=n=>({pre_dialysis:"Pré-Diálise",during_session:"Durante a Sessão",post_dialysis:"Pós-Diálise",completed:"Concluído",interrupted:"Interrompido"})[n]||n,ye=n=>({pre_dialysis:"Pré",during_session:"Durante",post_dialysis:"Pós"})[n]||n,be=n=>({pre_dialysis:"Verificações de segurança antes de iniciar a sessão de diálise",during_session:"Monitoramento contínuo durante o procedimento",post_dialysis:"Finalização segura da sessão e limpeza dos equipamentos"})[n]||"",Ce=n=>({pre_dialysis:"warning",during_session:"primary",post_dialysis:"secondary",completed:"success",interrupted:"danger"})[n]||"medium",we=n=>B,Ie=n=>({pre_dialysis:"Preparando",during_session:"Em Andamento",post_dialysis:"Finalizando",completed:"Concluído",interrupted:"Interrompido"})[n]||n,Pe=n=>({pre_dialysis:"1",during_session:"2",post_dialysis:"3"})[n]||"",X=n=>{if(!l.value)return!1;switch(n){case"pre_dialysis":return l.value.pre_dialysis_completed_at!==null;case"during_session":return l.value.during_session_completed_at!==null;case"post_dialysis":return l.value.post_dialysis_completed_at!==null;default:return!1}},O=()=>{var a;return{pre_dialysis:[{key:"machine_disinfected",label:"Máquina Desinfetada",description:"Verificar se a máquina foi devidamente desinfetada"},{key:"capillary_lines_identified",label:"Linhas Capilares Identificadas",description:"Identificar e verificar as linhas capilares"},{key:"patient_identification_confirmed",label:"Identificação do Paciente",description:"Confirmar identidade com dois identificadores"},{key:"vascular_access_evaluated",label:"Acesso Vascular Avaliado",description:"Avaliar condições do acesso vascular"},{key:"vital_signs_checked",label:"Sinais Vitais Verificados",description:"Aferir pressão arterial, temperatura e peso"},{key:"medications_reviewed",label:"Medicações Revisadas",description:"Revisar medicações e dosagens prescritas"},{key:"dialyzer_membrane_checked",label:"Membrana do Dialisador Verificada",description:"Verificar integridade da membrana"},{key:"equipment_functioning_verified",label:"Funcionamento dos Equipamentos",description:"Testar funcionamento de todos os equipamentos"}],during_session:[{key:"dialysis_parameters_verified",label:"Parâmetros de Diálise Verificados",description:"Confirmar e ajustar parâmetros de diálise"},{key:"patient_comfort_assessed",label:"Conforto do Paciente Avaliado",description:"Verificar conforto e bem-estar do paciente"},{key:"fluid_balance_monitored",label:"Balanço Hídrico Monitorado",description:"Acompanhar remoção e balanço de fluidos"},{key:"alarms_responded",label:"Resposta a Alarmes",description:"Verificar e responder adequadamente aos alarmes"}],post_dialysis:[{key:"session_completed_safely",label:"Sessão Finalizada com Segurança",description:"Finalizar sessão seguindo protocolos de segurança"},{key:"vascular_access_secured",label:"Acesso Vascular Protegido",description:"Proteger e cuidar do acesso vascular"},{key:"patient_vital_signs_stable",label:"Sinais Vitais Estáveis",description:"Confirmar estabilidade dos sinais vitais"},{key:"equipment_cleaned",label:"Equipamentos Limpos",description:"Limpar e preparar equipamentos para próximo uso"}]}[(a=l.value)==null?void 0:a.current_phase]||[]},Ve=()=>{var n;if(!T.value)return"Complete todos os itens para continuar";switch((n=l.value)==null?void 0:n.current_phase){case"pre_dialysis":return"Iniciar Sessão de Diálise";case"during_session":return"Finalizar Sessão";case"post_dialysis":return"Concluir Checklist";default:return"Continuar"}},Y=()=>{const n=new Date;G.value=n.toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit",second:"2-digit"}),K.value=n.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"})},Se=async()=>{const n=await q.create({message:"Buscando paciente...",spinner:"crescent"});await n.present();try{const a=await _e.execute(w.value);a?(m.value=a,await(await y.create({message:a.created?"Paciente cadastrado e selecionado!":"Paciente encontrado!",duration:2e3,color:"success",position:"top"})).present()):await(await y.create({message:"Erro ao buscar/cadastrar paciente.",duration:3e3,color:"warning",position:"top"})).present()}catch(a){await(await y.create({message:a.message||"Erro ao buscar paciente",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},De=async()=>{var a;const n=await q.create({message:"Iniciando checklist...",spinner:"crescent"});await n.present();try{const f=await(await fetch("/api/checklists",{method:"POST",headers:$.getAuthHeaders(),body:JSON.stringify({patient_id:(a=m.value)==null?void 0:a.id,machine_id:p.value.machine_id,shift:p.value.shift,observations:p.value.observations})})).json();if(f.success)l.value=f.checklist,W.value=E.value.find(Be=>Be.id===p.value.machine_id)||null,z(),await(await y.create({message:"Checklist iniciado com sucesso!",duration:2e3,color:"success",position:"top"})).present();else throw new Error(f.message||"Erro ao iniciar checklist")}catch(o){await(await y.create({message:o.message||"Erro ao iniciar checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},Te=async()=>{if(!T.value)return;const n=await q.create({message:"Avançando para próxima fase...",spinner:"crescent"});await n.present();try{await Z();const o=await(await fetch("/api/checklists/".concat(l.value.id,"/advance"),{method:"POST",headers:{"Content-Type":"application/json",...$.getAuthHeaders()}})).json();if(o.success)l.value=o.checklist,z(),await(await y.create({message:o.message,duration:2e3,color:"success",position:"top"})).present();else throw new Error(o.message||"Erro ao avançar fase")}catch(a){await(await y.create({message:a.message||"Erro ao avançar fase",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},Z=async()=>{if(!l.value)return;const n={};O().forEach(R=>{n[R.key]=S(R.key)});const f=await(await fetch("/api/checklists/".concat(l.value.id,"/phase"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(localStorage.getItem("auth_token"))},body:JSON.stringify({phase_data:n,observations:p.value.observations})})).json();f.success&&(D.value=f.phase_completion)},Ae=async()=>{const n=await q.create({message:"Interrompendo checklist...",spinner:"crescent"});await n.present();try{const o=await(await fetch("/api/checklists/".concat(l.value.id,"/interrupt"),{method:"POST",headers:$.getAuthHeaders(),body:JSON.stringify({reason:A.value})})).json();if(o.success)l.value=o.checklist,V.value=!1,await(await y.create({message:"Checklist interrompido com sucesso.",duration:3e3,color:"warning",position:"top"})).present();else throw new Error(o.message||"Erro ao interromper checklist")}catch(a){await(await y.create({message:a.message||"Erro ao interromper checklist",duration:3e3,color:"danger",position:"top"})).present()}finally{await n.dismiss()}},ee=()=>{fe.replace("/dashboard")},z=()=>{const n=O(),a=n.filter(o=>S(o.key)).length;D.value=n.length>0?a/n.length*100:0},Oe=async()=>{try{E.value=await ve.getAvailable()}catch(n){console.error("Error loading machines:",n)}},xe=n=>new Date(n).toLocaleDateString("pt-BR"),F=n=>new Date(n).toLocaleTimeString("pt-BR",{hour:"2-digit",minute:"2-digit"}),S=n=>p.value[n]||!1,qe=(n,a)=>{p.value[n]=a,z(),l.value&&Z()};return Me(()=>{Oe(),Y(),M=setInterval(Y,1e3)}),ze(()=>{M&&clearInterval(M)}),(n,a)=>(c(),v(e(Re),null,{default:s(()=>[t(e(ne),{translucent:!0},{default:s(()=>[t(e(te),null,{default:s(()=>[t(e(se),{slot:"start"},{default:s(()=>[t(e(Ne),{"default-href":"/dashboard"})]),_:1}),t(e(oe),null,{default:s(()=>[...a[10]||(a[10]=[r("Checklist de Segurança",-1)])]),_:1})]),_:1})]),_:1}),t(e(ue),{fullscreen:!0},{default:s(()=>[i("div",oa,[t(e(b),{class:"time-header-card"},{default:s(()=>[t(e(C),null,{default:s(()=>[i("div",na,[i("div",ia,[t(e(u),{icon:e($e),class:"date-icon"},null,8,["icon"]),r(" "+d(K.value),1)]),i("div",la,[t(e(u),{icon:e(Je),class:"time-icon"},null,8,["icon"]),r(" "+d(G.value),1)])])]),_:1})]),_:1}),l.value?h("",!0):(c(),v(e(b),{key:0,class:"patient-search-card"},{default:s(()=>[t(e(L),null,{default:s(()=>[t(e(U),null,{default:s(()=>[t(e(u),{icon:e(Ge)},null,8,["icon"]),a[11]||(a[11]=r(" 1. Buscar/Cadastrar Paciente ",-1))]),_:1})]),_:1}),t(e(C),null,{default:s(()=>[i("div",ra,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[12]||(a[12]=[r("Nome Completo",-1)])]),_:1}),t(e(ie),{modelValue:w.value.full_name,"onUpdate:modelValue":a[0]||(a[0]=o=>w.value.full_name=o),type:"text",placeholder:"Digite o nome completo do paciente",required:""},null,8,["modelValue"])]),_:1})]),i("div",da,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[13]||(a[13]=[r("Data de Nascimento",-1)])]),_:1}),t(e(ie),{modelValue:w.value.birth_date,"onUpdate:modelValue":a[1]||(a[1]=o=>w.value.birth_date=o),type:"date",required:""},null,8,["modelValue"])]),_:1})]),t(e(k),{expand:"block",class:"mobile-button",onClick:Se,disabled:!ge.value},{default:s(()=>[t(e(u),{icon:e(Ke),slot:"start"},null,8,["icon"]),a[14]||(a[14]=r(" Buscar Paciente ",-1))]),_:1},8,["disabled"]),m.value?(c(),I("div",ua,[t(e(le),{color:"success"},{default:s(()=>[t(e(u),{icon:e(B)},null,8,["icon"]),t(e(g),null,{default:s(()=>[...a[15]||(a[15]=[r("Paciente Selecionado",-1)])]),_:1})]),_:1}),i("div",ca,[i("h4",null,d(m.value.full_name),1),i("p",null,"Nascimento: "+d(xe(m.value.birth_date)),1),i("p",null,"Idade: "+d(m.value.age)+" anos",1),m.value.medical_record?(c(),I("p",pa,"Prontuário: "+d(m.value.medical_record),1)):h("",!0)])])):h("",!0)]),_:1})]),_:1})),m.value&&!l.value?(c(),v(e(b),{key:1,class:"machine-selection-card"},{default:s(()=>[t(e(L),null,{default:s(()=>[t(e(U),null,{default:s(()=>[t(e(u),{icon:e(We)},null,8,["icon"]),a[16]||(a[16]=r(" 2. Selecionar Máquina e Turno ",-1))]),_:1})]),_:1}),t(e(C),null,{default:s(()=>[i("div",ma,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[17]||(a[17]=[r("Máquina",-1)])]),_:1}),t(e(re),{modelValue:p.value.machine_id,"onUpdate:modelValue":a[2]||(a[2]=o=>p.value.machine_id=o),placeholder:"Selecione uma máquina"},{default:s(()=>[(c(!0),I(H,null,j(E.value,o=>(c(),v(e(x),{key:o.id,value:o.id},{default:s(()=>[r(d(o.name),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])]),_:1})]),i("div",fa,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[18]||(a[18]=[r("Turno",-1)])]),_:1}),t(e(re),{modelValue:p.value.shift,"onUpdate:modelValue":a[3]||(a[3]=o=>p.value.shift=o),placeholder:"Selecione o turno"},{default:s(()=>[t(e(x),{value:"matutino"},{default:s(()=>[...a[19]||(a[19]=[r("Matutino",-1)])]),_:1}),t(e(x),{value:"vespertino"},{default:s(()=>[...a[20]||(a[20]=[r("Vespertino",-1)])]),_:1}),t(e(x),{value:"noturno"},{default:s(()=>[...a[21]||(a[21]=[r("Noturno",-1)])]),_:1})]),_:1},8,["modelValue"])]),_:1})]),t(e(k),{expand:"block",class:"mobile-button primary-button",onClick:De,disabled:!ke.value},{default:s(()=>[t(e(u),{icon:e(Qe),slot:"start"},null,8,["icon"]),a[22]||(a[22]=r(" Iniciar Checklist de Segurança ",-1))]),_:1},8,["disabled"])]),_:1})]),_:1})):h("",!0),l.value?(c(),I("div",_a,[t(e(b),{class:"phase-progress-card"},{default:s(()=>[t(e(C),null,{default:s(()=>[i("div",va,[i("h3",null,d(Q(l.value.current_phase)),1),i("div",ha,[t(e(le),{color:Ce(l.value.current_phase)},{default:s(()=>[t(e(u),{icon:we(l.value.current_phase)},null,8,["icon"]),t(e(g),null,{default:s(()=>[r(d(Ie(l.value.current_phase)),1)]),_:1})]),_:1},8,["color"])])]),i("div",ga,[i("div",ka,[(c(),I(H,null,j(he,o=>i("div",{class:ae(["step",{active:o===l.value.current_phase,completed:X(o),interrupted:l.value.is_interrupted}]),key:o},[i("div",ya,[X(o)?(c(),v(e(u),{key:0,icon:e(pe)},null,8,["icon"])):l.value.is_interrupted?(c(),v(e(u),{key:1,icon:e(me)},null,8,["icon"])):(c(),I("span",ba,d(Pe(o)),1))]),i("span",Ca,d(ye(o)),1)],2)),64))])]),i("div",wa,[t(e(je),{value:D.value/100,color:D.value===100?"success":"primary"},null,8,["value","color"]),i("p",null,d(Math.round(D.value))+"% concluído",1)])]),_:1})]),_:1}),t(e(b),{class:"patient-summary-card"},{default:s(()=>[t(e(C),null,{default:s(()=>{var o;return[i("div",Ia,[i("div",Pa,[i("h4",null,d(m.value.full_name),1),i("p",null,d((o=W.value)==null?void 0:o.name)+" • Turno "+d(l.value.shift),1)]),i("div",Va,[i("p",null,"Iniciado às "+d(F(l.value.pre_dialysis_started_at)),1)])])]}),_:1})]),_:1}),l.value.is_interrupted?h("",!0):(c(),v(e(b),{key:0,class:"checklist-phase-card"},{default:s(()=>[t(e(L),null,{default:s(()=>[t(e(U),null,{default:s(()=>[r(d(Q(l.value.current_phase)),1)]),_:1}),t(e(He),null,{default:s(()=>[r(d(be(l.value.current_phase)),1)]),_:1})]),_:1}),t(e(C),null,{default:s(()=>[i("div",Sa,[(c(!0),I(H,null,j(O(),o=>(c(),v(e(P),{key:o.key,class:ae(["checklist-item",{completed:S(o.key)}])},{default:s(()=>[t(e(Ue),{slot:"start",checked:S(o.key),onIonChange:f=>qe(o.key,f.detail.checked)},null,8,["checked","onIonChange"]),t(e(g),{class:"checklist-label"},{default:s(()=>[i("h3",null,d(o.label),1),i("p",null,d(o.description),1)]),_:2},1024),S(o.key)?(c(),v(e(u),{key:0,icon:e(B),slot:"end",color:"success",class:"completed-icon"},null,8,["icon"])):h("",!0)]),_:2},1032,["class"]))),128))]),i("div",Da,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[23]||(a[23]=[r("Observações (opcional)",-1)])]),_:1}),t(e(de),{modelValue:p.value.observations,"onUpdate:modelValue":a[4]||(a[4]=o=>p.value.observations=o),rows:"3",placeholder:"Digite observações sobre esta fase..."},null,8,["modelValue"])]),_:1})]),i("div",Ta,[t(e(k),{expand:"block",color:"danger",fill:"outline",onClick:a[5]||(a[5]=o=>V.value=!0),class:"interrupt-button"},{default:s(()=>[t(e(u),{icon:e(ce),slot:"start"},null,8,["icon"]),a[24]||(a[24]=r(" Interromper Checklist ",-1))]),_:1}),t(e(k),{expand:"block",color:T.value?"success":"medium",disabled:!T.value,onClick:Te,class:"advance-button"},{default:s(()=>[t(e(u),{icon:T.value?e(Xe):e(Ye),slot:"start"},null,8,["icon"]),r(" "+d(Ve()),1)]),_:1},8,["color","disabled"])])]),_:1})]),_:1})),l.value.is_interrupted?(c(),v(e(b),{key:1,class:"interrupted-card"},{default:s(()=>[t(e(C),null,{default:s(()=>[i("div",Aa,[t(e(u),{icon:e(Ze),class:"interrupted-icon"},null,8,["icon"]),a[27]||(a[27]=i("h3",null,"Checklist Interrompido",-1)),i("p",null,"O checklist foi interrompido em "+d(F(l.value.interrupted_at)),1),i("p",Oa,[a[25]||(a[25]=i("strong",null,"Motivo:",-1)),r(" "+d(l.value.interruption_reason),1)]),t(e(k),{expand:"block",color:"primary",onClick:ee,class:"return-button"},{default:s(()=>[t(e(u),{icon:e(ea),slot:"start"},null,8,["icon"]),a[26]||(a[26]=r(" Retornar ao Dashboard ",-1))]),_:1})])]),_:1})]),_:1})):h("",!0),l.value.current_phase==="completed"?(c(),v(e(b),{key:2,class:"completed-card"},{default:s(()=>[t(e(C),null,{default:s(()=>[i("div",xa,[t(e(u),{icon:e(B),class:"completed-icon"},null,8,["icon"]),a[29]||(a[29]=i("h3",null,"Checklist Concluído com Sucesso!",-1)),i("p",null,"Todas as fases foram completadas em "+d(F(l.value.post_dialysis_completed_at)),1),t(e(k),{expand:"block",color:"success",onClick:ee,class:"return-button"},{default:s(()=>[t(e(u),{icon:e(pe),slot:"start"},null,8,["icon"]),a[28]||(a[28]=r(" Finalizar e Retornar ",-1))]),_:1})])]),_:1})]),_:1})):h("",!0)])):h("",!0)]),t(e(Le),{"is-open":V.value,onWillDismiss:a[9]||(a[9]=o=>V.value=!1)},{default:s(()=>[t(e(ne),null,{default:s(()=>[t(e(te),null,{default:s(()=>[t(e(oe),null,{default:s(()=>[...a[30]||(a[30]=[r("Interromper Checklist",-1)])]),_:1}),t(e(se),{slot:"end"},{default:s(()=>[t(e(k),{onClick:a[6]||(a[6]=o=>V.value=!1)},{default:s(()=>[t(e(u),{icon:e(me)},null,8,["icon"])]),_:1})]),_:1})]),_:1})]),_:1}),t(e(ue),null,{default:s(()=>[i("div",qa,[i("div",Ba,[t(e(u),{icon:e(aa),class:"warning-icon"},null,8,["icon"]),a[31]||(a[31]=i("h3",null,"Atenção!",-1)),a[32]||(a[32]=i("p",null,"Você está prestes a interromper o checklist de segurança. Esta ação deve ser usada apenas em casos de emergência ou intercorrências médicas.",-1))]),i("div",Ea,[t(e(P),{fill:"outline",class:"patient-input"},{default:s(()=>[t(e(g),{position:"floating"},{default:s(()=>[...a[33]||(a[33]=[r("Motivo da Interrupção",-1)])]),_:1}),t(e(de),{modelValue:A.value,"onUpdate:modelValue":a[7]||(a[7]=o=>A.value=o),rows:"4",placeholder:"Descreva o motivo da interrupção (obrigatório)",required:""},null,8,["modelValue"])]),_:1})]),i("div",Ma,[t(e(k),{expand:"block",fill:"outline",color:"medium",onClick:a[8]||(a[8]=o=>V.value=!1)},{default:s(()=>[...a[34]||(a[34]=[r(" Cancelar ",-1)])]),_:1}),t(e(k),{expand:"block",color:"danger",disabled:!A.value.trim(),onClick:Ae},{default:s(()=>[t(e(u),{icon:e(ce),slot:"start"},null,8,["icon"]),a[35]||(a[35]=r(" Confirmar Interrupção ",-1))]),_:1},8,["disabled"])])])]),_:1})]),_:1},8,["is-open"])]),_:1})]),_:1}))}}),La=ta(za,[["__scopeId","data-v-1e539e09"]]);export{La as default};
