server {
    listen 80;
    listen [::]:80;
    server_name _;
    root /var/www/html/public;

    index index.php index.html;

    charset utf-8;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Laravel location block (handles all requests including /livewire/ dynamic routes)
    # This MUST come before any other location blocks to ensure Laravel handles
    # dynamic routes like /livewire/livewire.min.js correctly
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # OPTIONAL: Static file caching for Vite-built assets only
    # Only cache files from /build/ directory (Vite output) to avoid breaking
    # Livewire/Filament dynamic routes like /livewire/livewire.min.js
    # Uncomment if you want explicit static file caching:
    #
    # location ~* ^/build/.*\.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
    #     expires 1y;
    #     add_header Cache-Control "public, immutable";
    #     access_log off;
    # }

    # PHP-FPM handling via TCP (fallback - cache issues prevented Unix socket)
    # TODO: Revert to Unix socket when cache issue is resolved
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Increase timeouts for long-running scripts
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        
        # Buffer settings
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }

    # Allow .well-known directory (for Let's Encrypt certbot, etc)
    location ~ /\.well-known {
        allow all;
    }

    # Deny access to other hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Favicon and robots.txt
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location /up {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}

# ============================================================================
# IMPORTANT NOTES ABOUT THIS CONFIGURATION
# ============================================================================
#
# 1. WHY WE DON'T CACHE ALL .js FILES:
#    -----------------------------------
#    Previously, this config had a location block like:
#        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
#            expires 1y;
#        }
#
#    This caused Filament admin panel login to FAIL because:
#    - Livewire uses DYNAMIC routes like /livewire/livewire.min.js
#    - These are NOT physical files - they're Laravel routes
#    - When Nginx cached .js files, it tried to serve them directly
#    - Result: 404 errors because the files don't physically exist
#    - This prevented Livewire from loading, breaking Filament login
#
# 2. BEST PRACTICE FOR STATIC FILE CACHING:
#    ----------------------------------------
#    a) Rely on Laravel/Vite asset versioning:
#       - Vite automatically versions assets (e.g., app.js?id=abc123)
#       - Browsers cache these naturally with unique URLs
#       - No explicit Nginx caching needed
#
#    b) If you need explicit caching, use SPECIFIC paths:
#       - Cache only /build/ directory: location ~* ^/build/.*\.(css|js)$
#       - Cache specific image directories: location /images/
#       - Never use broad patterns that catch ALL .js files
#
# 3. LOCATION BLOCK PRECEDENCE IN NGINX:
#    -------------------------------------
#    - Exact match (location =) has highest priority
#    - Regex patterns (location ~*) have higher priority than prefix
#    - Prefix patterns (location /) are checked last
#    - This is why "location /" must come FIRST in the config file
#      to ensure it processes requests before any regex blocks
#
# 4. HOW THIS CONFIG WORKS:
#    -----------------------
#    - All requests hit "location /" first
#    - try_files checks if physical file exists
#    - If not found, passes to Laravel (index.php)
#    - Laravel routes handle /livewire/* dynamically
#    - PHP files are processed by PHP-FPM
#    - Simple, clean, and doesn't break Filament/Livewire
#
# 5. TROUBLESHOOTING CHECKLIST:
#    ---------------------------
#    If Filament login stops working, check:
#    - curl https://your-domain.com/livewire/livewire.min.js should return 200
#    - Browser console should show Livewire loaded, no 404s
#    - Nginx logs shouldn't show 404 for /livewire/ paths
#    - No static file caching rules matching .js files
#
# ============================================================================
