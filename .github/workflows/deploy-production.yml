name: Deploy Production - Dokploy

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/deploy-production.yml'

  workflow_dispatch:
    inputs:
      deploy_reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual deployment'

env:
  DOCKER_IMAGE_NAME: hemodialise-qualidade
  DOCKERFILE_PATH: ./Dockerfile.production
  DOCKER_CONTEXT: .

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{date 'YYYYMMDD'}}-
            type=ref,event=branch
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ github.event.head_commit.timestamp }}
            VERSION=${{ github.sha }}
      
      - name: Image digest
        run: echo ${{ steps.meta.outputs.digest }}

  trigger-deployment:
    name: Trigger Dokploy Deployment
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Dokploy Deploy via API
        run: |
          curl -X 'POST' \
            '${{ secrets.DOKPLOY_URL }}/api/trpc/application.deploy' \
            -H 'accept: application/json' \
            -H 'x-api-key: ${{ secrets.DOKPLOY_API_KEY }}' \
            -H 'Content-Type: application/json' \
            -d '{
              "json": {
                "applicationId": "${{ secrets.DOKPLOY_APP_ID }}"
              }
            }'
      
      - name: Deployment notification
        run: |
          echo "üöÄ Deployment triggered successfully!"
          echo "üì¶ Image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest"
          echo "üîó Domain: https://qualidadehd.direcaoclinica.com.br"

  notify-success:
    name: Notify Deployment Success
    needs: [build-and-push, trigger-deployment]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Success notification
        run: |
          echo "‚úÖ Production deployment completed successfully!"
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"
          echo "Message: ${{ github.event.head_commit.message }}"

  notify-failure:
    name: Notify Deployment Failure
    needs: [build-and-push, trigger-deployment]
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
      - name: Failure notification
        run: |
          echo "‚ùå Production deployment failed!"
          echo "Please check the logs for details."
